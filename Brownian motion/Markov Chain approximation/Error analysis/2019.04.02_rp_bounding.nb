(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    648221,      12377]
NotebookOptionsPosition[    644230,      12250]
NotebookOutlinePosition[    644577,      12265]
CellTagsIndexPosition[    644534,      12262]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.7632443209733624`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Transition", " ", "density"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.763177502786349*^9, 3.7631775227059393`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "y_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "n", 
       RowBox[{"(", 
        RowBox[{"g2", "-", "y"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}]}], "]"}]}], ")"}], 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", 
       FractionBox["1", 
        SqrtBox["n"]]}], "]"}], ",", 
     RowBox[{"y", "-", "x"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763148371859931*^9, 3.7631484093014565`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"first", " ", "partial", " ", "derivative"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7631775143013473`*^9, 3.763177519591963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "y", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7631483891430087`*^9, 3.763148417298868*^9}, {
  3.7631506901729517`*^9, 3.7631506903758354`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "n", " ", 
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "n", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]]}], " ", 
   SuperscriptBox["n", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    FractionBox["2", "\[Pi]"]], " ", 
   RowBox[{"(", 
    RowBox[{"g1", "-", "x"}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "n", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
    SuperscriptBox["n", 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x"}], "+", "y"}], ")"}]}], 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]]}]], "Output",
 CellChangeTimes->{{3.763148393865281*^9, 3.7631484175327005`*^9}, 
   3.763150690698618*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"First", " ", "partial", " ", "derivative"}], "*)"}]], "Input",
 CellChangeTimes->{{3.763177552649648*^9, 3.763177557358011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]]}], " ", 
    SuperscriptBox["n", 
     RowBox[{"3", "/", "2"}]], " ", 
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    RowBox[{"(", 
     RowBox[{"g1", "-", "x"}], ")"}]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "n", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
     SuperscriptBox["n", 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "y"}], ")"}]}], 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]]}]}]], "Input",
 CellChangeTimes->{{3.763150716307934*^9, 3.7631507264731226`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "removing", " ", "the", " ", "part", " ", "the", " ", "gets", " ", 
    "removed", " ", "by", " ", "y"}], " ", "\[Rule]", " ", "g2"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.763177559529803*^9, 3.7631775752136493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d1d", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "n", " ", 
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "n", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]]}], " ", 
   SuperscriptBox["n", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    FractionBox["2", "\[Pi]"]], " ", 
   RowBox[{"(", 
    RowBox[{"g1", "-", "x"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.763150733150262*^9, 3.763150748563427*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Some", " ", "type", " ", "of", " ", 
   RowBox[{"symmetry", "?"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7631777120452223`*^9, 3.763177744792487*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"d1", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "/.", 
        RowBox[{"g1", "\[Rule]", "0.4"}]}], " ", "/.", 
       RowBox[{"g2", "\[Rule]", "1"}]}], "/.", 
      RowBox[{"n", "\[Rule]", "3"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"d1d", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "/.", 
        RowBox[{"g1", "\[Rule]", "0.4"}]}], "/.", 
       RowBox[{"g2", "\[Rule]", "1"}]}], "/.", 
      RowBox[{"n", "\[Rule]", "3"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"d1", "[", 
         RowBox[{"x", ",", "1"}], "]"}], "/.", 
        RowBox[{"g1", "\[Rule]", "0.4"}]}], "/.", 
       RowBox[{"g2", "\[Rule]", "1"}]}], "/.", 
      RowBox[{"n", "\[Rule]", "3"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "0.4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7631507025518637`*^9, 3.763150703625202*^9}, {
  3.7631507543111277`*^9, 3.7631508164954414`*^9}, {3.7631508481592817`*^9, 
  3.7631508500082417`*^9}, {3.763151196116197*^9, 3.763151210860736*^9}, {
  3.763151244666345*^9, 3.7631512462584476`*^9}, {3.763177673071621*^9, 
  3.763177692998262*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
PPdVjORdeFc0zqDmE3GfrI8fNTd5U7kP1dwslLUk+LEZZs27JpVzky5azKuR
lybub3lqwJdlJRzKBf/Zzb3TVM1S3kq/x2KVrg3ElZq3KNb0KScP4NpvZT3P
+BVTfcBnchecdedH847cDqkqVhMQvxvbPKM53o+H+tgKz1F/c8Mu9mvoI1bO
4bmAay/IvuLpWcqhPuBu11/1W/iumOoDPncGt/6BRjl5A89VPuidmVDCy00d
vTQhPpf49nsT+w3aFsBDuanCc7BfXGeJLjIZVwX0vMBV2mksuxZaxqFccHvu
p2N+zyIqF3zCxXezO/QvJz/gCiMnP/uQUMqzKoqxfnL2LfFh/RXq9p0MoufY
Z6DJw905ddy2ozO6FZvwqT7gct2LGwZUldFzBP9UVHmtyzkBeQPvaBNceeZN
Lod6gu+462wnpZ5P9QTPNBj9MvWFgJ4jeFWZ4eQlHmU8J6cxaoO03Hjgxh43
p678EsYz0vdZOiA1ifjhp+Vhj/e40XNf//zdJWWtr9yCU8c+f24KpvqD94ir
963qX0b1B/880rdpsng5+Qe/MLLG8N3+Qg71BN9459bzWhkBPXdwr0nJDxZt
FFA9wft6GngcNQ+m/jDr1hZBwO6PXO+eScfP+L+k+oBXvnzY1UGllOoDXuxn
XeQ0uZw8g+vWy9+PnV3MoT7g2fzAXeGdyqg/gJtq1ASZJojqCa5c5yw/vDCB
5quYN6r+f+bRmIcqy3k1/uQTfLzzeb0T22KonuAlH8/lWPUooXqCf0rPkVJU
K+fQH8DPqjyzDkwo4VBPcImcQZtKzpdQfwD3V3jS7dQF0fzm9iHrt7JWMvfz
SVZVuqcP+QT/ePqjRrXyGyoXfOfCwRd2FQno+YJPelyY0l6+jEO54M0nBnYZ
qZ9H3sAPunyMu7ojleY3MTHdAKuRZ8MyC12jogM8yA/4jx9evb5NjKBywWXX
LXMeYSqg5wi+xmn0thM7BOQHfOueiKK1HfM41AfcdVRE3up9T2gem76hW8IQ
rWSe4hw5D3nBQ3ou4Jdu5ukoTOSoXHD17s3S93aKygXX7ZA93GVkBZULbvPj
XPl7yxTy3OvU674tz4t3pP2wR2LDgykPuMu7w0GHeOXkGdxy12LV6xsqyY/N
suYlLf2T52CrxzdvCqR6gj/cMt9i3+13VB/wmDCd7J0j0jnMe3ifrppm12lp
0EMO6yLwdac1Rz/YnEzvNfCc6QPlNBbn0PjFd7pB059kDVIrp/ECfiLLIbel
/1M/QZ71g90HaHSMpO9Q4LIpkxa9+nKdvo/g/fv0ssQPzRtlVE+87/rklqU9
ay8gb5hnBkzODj49MoX2leDDTna59cI7luqD86jETQfkuw16Q+ML80CNxf6y
+WtF5wDgkYaHejtXZlE8zluc1aSPd91RSvkxTvd0Mp5y3iad8oCbPHO+pDWo
mPLgPKFxxXbztZElFI/xZfB1a/OCZ6Jxh33x4RM236fVvKVzPPT/mZLNK2S3
lYv6Q9v+ruDy1FtPloTTOhD91vHcpRPZVh+of2Kfopx0XeHY7QryjPhD49tt
vjSijNaH4Afc5e3XHi2keOQZePe59vtQ0XhBP5cNX1rSviyP1p/g50x6uPt9
qaD84JpyasHXJ4jGC/q5SbTLun0jiqmfg98xtNjTfcx0Wv+D302+0neY/MAw
tBd85Oy52+b/yhHto9u4nsJXZ+3EQvKDde+hdmvvd+ufLNpft8V/uCFRLBYs
8kDxqyysmr9niPbdbfFbnh7J6WHlFQY/iP9xYtqEqnMJ1C6Mry/l95akn31P
733w+Z2eHL6TIBp34E73Pu/quP7BTHD0W3mtvDlpOikUj+fVb+2+p1P65FD9
sZ+yHX11cYRZOdUH9cxN7nCl51klqj/6c3B593aRWhl0zoZ+EvU59+jLbh+o
PyD/wqpvnZWzc7ht44rvWnq/4hl3W6MiJlbIdexvPUhxWCnvmLf73FFhEdzP
N88EJjnpPP/glC0j5Su53dWz92cHpPEE0glZ2QGfeCvGPt29RPYNF31s2tqQ
4jjeqLU75tsp13DdpWK63z8Zw0P+jcsO992Tk8598ZF03x5SxEM8eMOrW0Nu
Tc8jHv/bPP7l7jiOl9Eze/DQdN5bucPldspJVB9VzdS1W7tXcKin6a2Kvr9/
F/CkjV84nf1VwY1Y9zb5gaMj8eRxmRM2SX2keo6+M4Z/TbmCF7NvsW2MWyFx
zAO+zX7yo9dn03oG5ZpekO1eFltB/QoeUrvbJGqEPA7LHiHf//FZGf4RTbOA
gN0yfPWG357LQ2+SN/CdzbMk9pa4zYQflSN1PC27Uu6t4gal9vdKyAN4Q+ft
/mX+ueSTzlE7FEh8XCOax+Az7ap9vndkIT1H9Lek/qo9lfdV0nNHu+Q2j6p3
6CQgDm/f9RwyxKZW0DgF15uQcV07tpK8gctt0VOONiqhPAcm2D1caFfKk/6i
cLPn6Q/E4b990cte52+XcvAGn9kXRza1lx0YhnYh3vHraYmMyaL8iN8zq2Hj
t7g88ozxUlCg3WVpKJ/OIfEeTAjYM2PPVNH7FPc0/LLv5bSse+k7JuJvPVab
0hj+gvZHdJ/E9KHUWf+XtN/BPYR9i4tONMiIvqviPZvNuQ7rMLSc1pOIXzCi
qaZlX0DfSRF/b+kF/T7RgbSvQfyBwHjLL03BPJyr4H2te9rZbpCRgNYV+F4/
rTQ6qWUfROdRiD9yr77BK050DwR8R3xMgoJ1Ga0zkWfiFO5Yy76M1nvgQb2M
ewysKqPvjMjzbWo3FdU1YXQvC/vWOn3lRetrBLRfxvfuPpH7F7fsN+ncBvFr
v186Lz9CQM8F3Pdloc2vOaL60Pf9hlXjW/a59LzAEyYv6tuyL6Z7Sti3Huq4
rKeOejntT/FdeNzjU3/243RehPhl5rZhJjPL6HmBj7quczD5nejcA3lcrBQN
PT1L6TmCW9QJJPqKldO9Hew3C8W1w++PK6fnBf6uPHNitK3o3APfVb/WVvSp
6VNO+xFwjzsnp07VLKVzLeQRrA/quVdWdM8B/MrYmhuFSuW0X0aeW1+XxO+c
VE7zDOLPZshVLLjnR+srxN9esGG/zIJYug+D9eEO+1DfmTWi79rgks4pP5YV
iM5JsG60GupwZmmwgPY14P2PHDQtNC6j8zfkiW0eMutry7jGuh3xFhseFUwZ
WU7fOxC/LbjU78M325mYN/D+GiGrnBl5xo/GBdalFiMXL6s5LKD+AP7tssmr
dyWicxW897Oa7XJ+qQpoHwTefGJ1leIi0fcF5HH5eCPopGw5vcfBS6r8xq7k
ROctyGMw8EtD7SsB9R+se0s9DcPExfjUT/C+mKK51+7nxVCqP+LPJMxdvTS+
jPoJuMvlMROb7whon4U8hUrKv2P+x/k84h+vd9F4/bGMnjvep6kCvufv6cH0
fLGu1t6e9KVD90A6X0X8+QtS1R+7ltO+DPGfL2reqJlUTu9fxNdd4mT1zTzo
OWL9kOM62jdMPpKeI9btI7IDA6Xbv6TnhXX7+8Wddforv6Dngvjzy81cTPRL
RPvBtvjy68ce3IkQ1QfxnlYry9/NPk/1GXqpVExJy4/3quuTlHGn7Mg/1mk7
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
cYH4K7bmtxrfivoJ+JuI8ptDB5UTR56jSnNG5o0uo+8dqI+Mt8P1jUa59H5E
nlujOnk9yi2mcYE82y8MVD0+J5PmSax/2pnxu8zJ9abnjnWO/FXjEaP8XKlc
xO9uHGITFyUgjvimMdHSm3ml1E9Q7gSVpEkzlhbSPSvE2xaMLb23JZTmN6yX
rh24m2q69yk9R6wrdsrwjHOHOpNP5Nl866X+vbnxVC7iB0RfDk3aXELxWC/N
1Opj8i35AXlG/PWiY6WcfwxxxBv1G1W3WC6MOP38l9JH+yZ5X+o/4IdOXs40
0CshP+BNFtdOaSe8IY51i7Nuj4u9LgURx/r85Zb07Lwe3nQugXWCfJPm7CGe
xXS/DufzkW4SEfk/SulcDu8vs9lXhT/XgP071jkn5W/1i1bLpPNqrCvEn7i4
towXOldEfBfN1y6d1h+nc0XED7sUFySrf4XOo7CP8F56zrnyUSQP505YDwQH
RQ121Qmh/TXi76yZPGv0I9F5L+I7T5+f0TL/0HkOzqtncIeX3K/0Iw94j38N
rt9gMC2W9kF0Xu2yMie7dwrNt3hv5l7yNn9jk0znJDgftn0z/ucFvSt0HoJ4
bkmpV83XJPKJc9Rny+7un7c3iM4T8P6qGqUd2vK+pv0a/Z7SvEOz+05JpXMw
xPft2qdvun8O+cQ5YZ1ch8tPk0TfI/Be8IpYPqal/rR/xDnb7Pl+O46fiKJ1
Gubhpe1HZW6YFkvnbMjvZPV6gseVdDp3Qv47T6c+uz09n/zjXO6OvvLm3+sy
qH8i/w1lXqiaSSKt/xFvuby8yrwhk85nEC8QqxEvNigk/zjXinPwun6+MZX8
Y9627JUzvWU9TPtoxL+MDbJ9Vcun/on4m69mPXIpCqdzXezv0srm/84Kz6X5
AfPVR43Jbqrb8uh54TxKlpelusvvIT0vzMOHno07NCwrns43sD9Ninm63vXr
I9rfIf+D1DknTeJS6JwB5yGhXe5PmnMih84ZML8Nik1oCpdJpfpjHxQp98Xl
SJM91Z/utc4PFpyWvSn6bojfY3YjwsFeJovOEzDvjfBuUJuYnUTtxblE5HDb
1w1dMujcAPkXHyzdkjE8kfaPmMcSxx1tv2GtaF+Jer7ouKlvjlEZvacwvxlv
eN4lQ6OYysU8Nujs3S7f9UzpXB3zg77CoB1bfc+Qf8wPXoP8ElLq7Kg/4/yh
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
sa1DU6hccEeZyMO+P+9TueCmXGK74pt8Khfc89j8+kfmyVQuuHhbfwgRjgsB
Z9Pqjae67lX/sdsdqVzw7pYD5V+pv6BywV9kDnu1Y4aoP4BbePhkrLyXSe0C
v1y4//m+4FSKx3hPzLx1cdhXUf9Bv6pdbTNvdGy7MPQf8KVKRnP1N5SFoj7g
84c5Fdw4nUTjAryhZ9nj04bpzPOq5uUm2sR27Z9M9UQ8t6zW8I1dEvMcq3l+
a5fXNX7PoHGEeHYcIf5ccLxt+bkEahfawV/BmeRc6h74z3hZ/p1eJZqbV6jS
eQ76s5rej7E1lx5Ru9A/T7xccyOx/CEzPySFXKrvrFZ+x5WZH5JCBsgaPZB/
HEztxfohrfGxV15MIuVBP1k/u/F20yp/mpfwHDtO9Rk/oOIRxYP3/LDC8oFL
OPU3cJe2ef6fHqp5szaKTex6VonaC5/Gbe9f1BPr9sWDNhffPvmCONaZKT+7
R+0wf0Mc72v7rq8qq2xSiaO/SXd7KNB+lsKpC18McbwYIU/nNjhWvxnyMoh4
kzBPHDf6pcyL6ZteE08XluvXsn7+Zhm29y1xWWG7CrlUu+vDCvR8iT9szc+r
WLtQzmpWBvEvwu+wBbwr3SqnHkvLJD5A+P4p5fWZ3d4/7KuIzxaeL1XwLmg/
7d73eganIezPMm3n8zL8vanXggYndQ/cKzzvS+OBx3PfrPIuTw9DnsDWdvF+
J/qe3HwklfKYCP9/n3g60TOC+u6SCut48c/77hWVa9wvyOt2cDY9X/CAu4o2
U7pnc4hHnqMPJln4ymRxqA/4zv6KmvYPImgcoT9jHCEe/qMitAothwZRPPon
Gw/PoWXtzTscjaV49EM2Hp5TtYINOrrHUD3RH3Z3SZ/4u9GPeW8mhbB50B9O
PbGfH/mZT9/P4P/ikoNdudFfXyEPxjXy4LnotObh3Y+O+x5Rl0jzD/rz1sqJ
WYNa3u8oF/1ne83Y9RfSYsk/2rXix5OK/jnZ3CJhuY4cnpflNE9V//WZlB/8
yZXkhPPtRPF4Xg1T78ptkhHFg59ZMuTsTQnROhmcbRd4xnrfxUrfROMRXH5X
3P0bGonULvir3bj2YPhOtTBw+EneJx4ufi+S8oD3EngU+798R3nQzztbflgb
4B5N/RZ+dn/W2+dblE39H/PS/f7fDMNPdad5CfXUO5b87kZMBhMvy/f/OnrV
6rKaV//8foT/XbRuof11p0nPuiwLo+eF/nMx3c5ZpVq0TgA3NVebdVsilvxj
3jb4NWraqjEJlAft3RUq6GadI3rvg59eZZdnYZRK8eg/2waujrDblEXx4L5t
4xrthAe3dk9+uVTWhiIPvFXmDFti6ZHBPMdq3jvBlYmLQvn0vEpb53nu1I7l
FUN514njHGyLV93Dt1mulGdk6/Pijt5frNXBw5Xqj+ee9lPx3N3HCVR/8FdL
3fZGmidSPOYHy6Ob3mpfSad4cO2254t4zBtFhudVT+tk0/sU/ILY/En5q1Jo
vKBfhWZ2ueg9LYOeF/gsGd2P8yyyKB5+5s5fLnFcT/ReAJe9knhus04K+cFz
1Dt38aFp12Tun/6TQnjV+lHjn4vmAcyTbzeoqWrHpFK5eL79P0bsmJQhWo+B
r08xultjlkHx6If2+32P580OpXhwjUrOctq8CPKDcg9V6JqHDHlLeah/LnLp
plMhWjeC74vKVtW4mEjxeC49lA4NvXUjiTjyGwfe/DjT7v1f9zr+fZ8oy//3
faIs/9/3iS3x/7pPlOX/+z5Rlv/v+0RZ/r/vE2X5/75PlOX/+z5Rlv/v+0RZ
/r/vE2X5/75PlOX/+z5Rlv/v+8T//V4H6xmc9QzOeqZ4xjM46xmc9QzOeqb7
IYxncNYzOOsZnPUMznoGZz2Ds57/614H6xmc9QzOeqZ4xjM46xmc9QzOegZn
PYOznsFZz+CsZ3DWMzjrGZz1/F/3OljP4KxncNYzxTOewVnP4KxncNYzOOsZ
nPVM90MYz+CsZ3DWMzjrGZz1/F/3OljP4KxncNYzxTOewVnP4KxncNYz3cdg
PIOznsFZz+CsZ3DWMzjrGZz1/F/3OljPdN+D8QzOeqZ4xjM465nuSzCewVnP
4KxncNYzOOsZnPUMznoGZz2Ds57/614H6xmc9QzOeqZ4xjM465nuaTCewVnP
4KxncNYzOOsZnPUMznoGZz2Ds57/614H6xmc9QzOeqZ4xjM46xmc9QzOegZn
PYOznsFZz+CsZ3DWMzjrGZz1/F/3OljP4KxncNYzxTOewVnP4KxncNYzOOuZ
7nUwnsFZz+CsZ3DWMzjrGZz1/F/3OljP4KxncNYzxTOewVnP4KxncNYzOOsZ
nPUMznoGZz2Ds57BWc/grOf/utfBegZnPYOznime8QzOegZnPYOznsFZz+Cs
Z3DWMzjrGZz1DM56Bmc9/9e9jr/WdW38r3VdG/9rXYd4dl3Xxv9a17Xxv9Z1
bfyvdV0b/2td18b/Wte18b/WdW38r3VdG/9rXdfG/1rXtfG/1nVtnPWMc2DW
MzjrGZz1TPGMZ3DWMzjrGZz1DM56Bmc9g7OewVnP4KxncNYzOOv5v+51sJ7B
Wc/grGeKZzyDs57p/gbjGZz1DM56Bmc9g7Oe6T4G4xmc9QzOeqbva4zn//9e
x/88r/v/7l4Hex8D31vhHxz+8X0cHN/HcU4Lju/g//w+LkucvdeB7+Ds927w
/+2+B+ozVPjcpP6qDzhbLjjyI8914f9P4q884GwecDaPeGv1/soDzuYBZ/Pk
C+efXxybB5zNA87mCRJ6q/srDzibB5zNc1P4//v6Vx5wNg84mwffd9g84Gwe
cDYPvpOyecDZPOBsHnxfZvOAs3nA2TytjzEphM0DzuYBZ/Pg+wWbB5zNA87m
wXcoNg84mwecvZeCexfs/ADOzg/gbLngKPf/9r4N6vP/1n0btOuf9ZGl8Yv5
FvMPO9+CY75FPOYZNh6cjcd8wsaDs/GYN9h4cDYe8wMbD87GYx5g48HZeIx3
Nh6cjce4ZuPB2XiMXzYenI3HOGXjwdl4jMd/f58mhbDxGHdsPDgbj/HFxoMj
/n+7B8XeW2PzgCMPxgu+H7HjHZwdX/gOwsaDs/E4z2fjwdl4nEuz8eBsPM5X
2XhwNp5+LoyJB2fjcd7FxtPPczHxOLdh48HZeJw/sPHgbDz20Ww8+F8+2/aD
f/ls42w89jVsPDgbj/U5Gw+OeNwrED4WrXZ83Pf45z0Eqb94az8U/4sHCvM3
cyy/Iczf8BffJ8zz/S+uLaxQzV9cT8gr/uK4p8dy3DdjOe6TsBz3E1iO+x7g
uLcAb+x9D3Dc90B86/iSpnjkB2fzwz+bH/HI/897JlJ/lftK2C6Jv8oFZ8vF
82XLRTxbLuLZclWE3sT+KhecLRf9hy0X8Wy5iGfLVW3bF7LlgrPlon+y5SKe
LRfxbLmSQv8//yoXnC0X/Z8tF/FsuYhnyy0Q9vPav8oFZ8vF+GLLRTxbLuLZ
cg8J6/Ppr3LB2XIxftlyEc+Wi3i2XNwfY8sFZ8vF/MCWi3i2XMSz5eIeKVsu
OFsu5h+2XMSz5SKeLRf3sthywdlyMb+x5SKeLRfxbLm4x8WWC86Wi/mTLRfx
bLmIZ8vFvTW2XHC2XMzPbLmIZ8tFPFsu7s2y5YKjXPb+NvJgXYf5H+u6f65L
pf7imD9ZjvmN5Zh/WI75geUYvyzH+GI5+j/L0T9Zjv7DcjxflsM/OHvvHfd1
8VzA2ecCzj4X8H9/P8oSZ+/V417rP+/DSP/1XPAeZDneUyzHe4TlmOdZjnmY
5ZgnWY55jOWYZ1iOeeCv/tY2TlmOccQ+L9wfZu9XY1wgnv05AvZeMTj8034e
z7HtvOKf61JZeu7/3AfJ0L6GvX/O3ltGPNbD7D159Df2njx7jvFf9+TZe7/g
KPf/9r466x/tYscLOOr/z3t0Mv/LPTrR/Xb8/6n+/+r/v++H/z+9F53w53h+
STv6/ZmHOztnW//Ez5VIEb/zZG205eMk3g7Dln8CCeJlC7Sntlcr4U1Q//NP
nH6fucab2e2te5TwJITl/abf52lZdcvQsjaLd1uY/xfxs5bn9C4desebJMzz
k/jq7fs1lzeG8BLbviOg3BzdoNhjXhE84z/1MawR/T2v9QeLvj3w4ckIy60i
7uq54ETdFkeehjB/GeVvEpv1/GTleuKIzy4dfl5W/xQvu+3n+BA/1MUnoGP8
NOL09wsqzUKWWBnyTgvr847id9XOtFvXtxdxxJfovx57qG4ez7RVNMWPDqm/
X1JXNRMc8ZGrP9RWvVLklQnnhWj6e+tzjhd9Gy4TOhMc8QPNlbqdGPBjJp4v
fg/hbKXq2YN3ltDzBX+bZX1b7Ewyh+cLPqH37vqTQ8LJP7jP3e+nOg9PJ//g
0avCn16cEEP+wY1OqO/+ejOAPINLTisZ8CbrHvkE37bz/tbtTyzJG/ihVNf7
5pWm5A180taYaa7vdckPeKcV8io3y0bw4AG/R9FrVqntr0gBeQAvnaepo2RQ
Rh7AjykqTpr8PpuDB3DjU/14inNKyAN4b3+71ZIbsskDeGTXiz8XHH1HHsCP
Ljk23+JNKHmger7a9st852NqL7iGdPjsQY/Nqb3gkqsNUnRGrKb24vc9nj41
ZuvntEJqL7igwXbhhnei9oJ7qE/OLHEXUHvBta+O76qjXk7tBXfTOq8xr6iU
2gtu9cTvc517PrUX/N74SMXHIcnUXvCNg0J+rVJ9Te0C/zHO0eepzylqF35/
7HjPDwnrnyRRu8Bdkw2UErblUbvAQ/W9u2/eVUrtAi9d8cNTXqGQ2kV/x3nH
Ft2xmwTULvBn9+2+cIMF1C5wzYkHDgTtKaJ2gb/MqX/79Eo6tQv8xzoz9663
71G78HtrD/inS/Q/FEztAlfXGzPU6Xo8tQvcet6Vy16KWdQucJ/ZWlmvdF04
tAs8dvKejw/PZ1K7wK/sDbFol1dK7QL/FBOebP5RQO0Cby6V7Pbn72Sh/vi9
uIfMC7fJXHGl+oOvems01jn4OdUffPrWyROar0ZR/cGj1zkdGr61iOoPbnbM
8BbfOYpD/cGbY+eYaRe8p/qDmyvYzy55XEz1B19v7J0+ZWQ5jS9wrR5mozWv
5lO78Pt4lQ7KmbX/eZzaBX5/m8dZvYUO1C5wJ75ceuC2Z9Qu8OSjB3btmVpO
7aK//7tz56wNBSXULvDrv6wUfEencmgXuIvZ0xfGRUHULvDdr3U9//zdXtQf
vx+4x6gNfmeyV1D9wfu6Tk6L+XiA6g8+f1z4xhm7r1H9wSuyjy1VPV1M9Qff
8ClgwoWWeQP1Bx88+sCIJZ5lVH9wvRe5Z0bp5HKoP7h6fshQh6+PaH2C31d8
OEJtn80OFao/+KBR3WbOjF1M9QdPHDPQptTKhMP6BLz6Urh+4gYrahf43qPO
BY2OqdQu8JiR5jr7dhVSu8BTkk4kP7kuahd4hOnEDZGpAmoXeJPL1jixqiIO
7zXw80+sJ7+9EU/txe9Pbv9I80e829cwtBc8/+Sc+7EXB1B7wS933JGr0Xk2
tRd8stn8b8HlWzisx8DH+KzsknzkFHkArwosO5OcyycP4ClXYtzD6xPJA/jy
NfeMOt/LJQ/g3p8tDx6fWUoewO/31bt3J6Kc2ovf/3xZunPank6vqL3gCmMW
fAoKFYShveCqZiv3FAR0o/aCa8wv/7I6bBK1F/yA1oplp5RWc1h/gg87dMDN
aNVB8gBu7835B72/Tx7AH0Xt+GE7LIg8gE/yvuqS6hdHHsD9k+YXmX3NJA/g
8YF7bv/5O7zwgN+3PGNc58zGCebkATxynmHagMWe5AF8/KhrcQMn5oTBA7hF
Xd+nPU9Kkwdw91Uve+/9oEYewHUbxfhbcrU5rMPBDaae+vTWwZj8gEdo9N/S
NPIc+QFPD7tsP22BK/kBL2i34EXmx+fkB3yA+NgEKZNo8gNuPkxyt2RlOvnB
31HaP/hYw5WRM8gP+NK170+WHT5EfsB3Kins11F5Sn7A567+ujQnLTMMfsBH
jZteHzFKkvyAj6+sM5eVHUZ+wBdNejSj8eRC8gPesdbUeb/HNvIDbmEYtGOi
41nyAx4VmqAWY+pCfsCvaKlGuYzwIz/gufdU7x6TiyQ/rfu7dvzOZucSxbL9
aZ40EP5+/nZ8XZXm92rK2bSen9i2X3jD7KeuC/cX0vympq7dxlV70Dqhxu2g
ofDvRp3vo6z725bes0v159YutGvHl5PbGjmh2JTeR14depz6891ft7EkUits
Ma3nO/CLOtopy/Dtx/aOsnVVovfvzgM+jn/2xUZje4lpW3+j/Yub8Pfqt+wX
tBcl91tRTO1q/Y4vxS90uPN0UOBrmg83Ctsrxec2PnJt/J5G7c1o2xe4MvuX
Vg+SfLlp4fOc5r+h9rZ6kOTPyv+94qiJD7W31YMUPzcv83ewsz21t9WDFL98
7tx1f34PPNrb6kGKL7ttyObQrGXU3lYP0vwJWxdbVtsPo/WhkdCDNH98RbPx
yf+xj5sr/Hud4vyU2uSGkGHl1N7W5y7B7z1zqsWgBQnUDy3wd5CZfUqm0IM4
v9/ezuu2zBetA1s9iPPX7Tyv8+fvVaFdre2V4Cs8qJPk5ThQ/VvbJcF/vDC8
w/TwVVT/9sJ2SfKXmm4+dut/7L8ShH83s5lTMJ9jXJ5bRPWc3LbO12X2F7XC
cps56cWyvTTGifYX3sJym7kY1fEhnfZn03MxFnr7zZ3eneQsNT6O6uMpjBfj
P60dl7L0f+yPum2wccwJqOfaRw7XrjRIoX71TljPBu706bMv18UVUj2Ptq3b
vzH7hdb613N75lltKW4U7Rda69/AbXyws2+8bBnV85mwPg3c0mtNvlkPc8lz
a/1/cWtu6GvMOf2O6n/nmZXgmnIT53OrF8/jf+yDVn6rOmmn/J3blf5iXHVd
GNW/u7Bd37lDtYYrBpsnUT+JF7arjttyP9v52vYCahfXtp7XnfXP/UJre79z
EjMj9kjdzKV2tbb3Oxcb25j45+9Jof6t7arjFql0OhSaL1o/O15caqhlV83N
Vf/mvfyBG9Wnq7CeNdzFXz90O696T/VpPaet5kKZ9X9rPau5Q1EhUVbrg2n+
bK1nDbfc/dmzXjcyRfupedscxcQ+cNzbni8KlU6LzrV6343/cw6/SHKh4/Up
d6ncy23r51RmfS4tLOcDZ1bg38U1v5jKPS4st4LbX17btZthNM3b34XPvZLr
4rysrPuiVNE+4oNefG5AHpe1zyG6aehqqk+wsJ6FnGJi+tFpEUfJzzhhPYu4
7NCfDxzEnKieI9vWyTXMOry/0Gce1xzY4UqMfDnVs7X+hdytT7M+bhtaSvVs
rX8R55Ob8Gz43kR6v3wT1r+Yyzl02jJx3Xuq/4iLQXGmOVGcj9uU7ftmjKD6
d0p64BC4O47rvf11kHilnuj85GLMeHGxRO7hCZvi3hsOUf2PtK17jzPr7fUH
hhvuacl/p6D21ZhDRVT/qcL2xnGVF2ZZ/fk7UKhng7CeyZxOt/wBByam0XvQ
6OBmCZ/dwbzbFw12a3Wuo3WCW4WN0SAtP978XSbVP4uHUD35wX86lhtvqERI
zrFD2rSeFBOzfWk18nrYqh0hxvYf91H9t7WtYxuZdbK0+9mE5y3lquaHjSl+
kEz1XySM9+Px5s68fc6okOqpJdZ5h61yFk/ugNxrDS6E6rl6g4PYn78DZcxP
Om8zuprWMzuClJwW2KXyHiS+6/G9biDV85AwfzLPxttEJT9pPq332lfscWr6
/Z6X9/qTkf41E6r/vbb1pwezvvW9mO54raU+tvY6pzqdCKX6hwvXY+m8rtO0
LvtXJVL/SZn3MX5hS312qK6uHN2tgNp1OyncMDugjLdwyoC7WmOOU7uUxSzV
//zdFusxj3L/D3vn/c/19/9/kdFe2unVpFLaS+rRlBRJQ3tqqKiM0pb2nkpD
g0KLImSep4RKsoXQ0x4hISvx4fE89/uDo/fl+w98f3K5XDud5/1xO+t+7ud+
Hg+jo2/wuZ7z9mRwFkVy1vte56CfNpb/rmg6V+J2+nvWhW74XD68nWncD1HR
5Y7PZ6Cfdtx8YnhtwznmWvsOnd9vwef9AH4p46/qdVeW+lZvZ5bvLqtHw+3x
eRP558rkguZ6n2j4ThY87wZ+fs7g8icdmJjhFYH9MF8yXrhS28yNBmapqEMH
h5rbO78VcePVW9lWlU5HHW7y+hRy94KvWnqQQ6jDf7w+BZx7ek78L84ddXDi
9fnBnT2uvWbk+iz0V0fx+uRzM/ut6KDl2gV1eMvrk8edmfxEHKk4Df3V6bzf
mMMdig9p59t9E+qjTv3J3oy/+o7XrYjTI87r9u8/ifrM53Ur5MKvTzVa08se
dVjL6/ODqz3TZdaee19wfClQf6/rnvHuo0g2nhf05r87LydaoyuT9kdF4E+p
3xg/Z216Awc7L9O4d3vdqvPhDk54XnCZ+qtu4o2uNa2jsB5/fr1oKeq48elS
8fYs5POpnxaS/OjS93oOekrsaSm6OnLaIq3n2cgLqb/nfOpZa73Z2bjuR/N+
lKyoePI8j4KPb3CeVKD+z/gLJ4L93gjx9mfgLwX7fvfLT8L+LLFTWnTx8sU3
2UaZ+LuS52ohGnTd1Pp12zQ8NxlN/bRORc9/f1uShfrEUP/2HfVvQZ8Y6u/Z
yajpJ3cS/JPu/PNKi0KHDnmqnUrQP/Gm9tzqvfGe7oqXHNgv0U1KpHDNy2j2
CSFuXMTrIyV6vK3lHbPB6dgPHamf9uP6qbvS1l/RTgvqlxpTvxTszKf+Xqfe
Rltnawv+ajfeTinRlvatrXWXCf5SNe8f1ZE+VecT+hh64vlUvxQd97q6P2R5
h5O3D03JxnlyLu8//yExPcbOu+qfhXwD9bvu9mu1soGDnSOoXzqb+qVgpxr1
9+YZT3dwfheCdu7hn+svuXbs/szOLbPQ/1em9nwN2aP98rc3cmve36gm2a/j
pOQ6vsP+eZ7n5WTU51gppQLBzifUv9q14ti5PvUc+okm/1wVZMcq57NvTbKR
S/QsJ+1TvC4unpON7aJG/bc+IXlyk24J/oMH3+6VRHH3ZfHmP4K/XcXLXEG6
Lh/82e6P4MdOo7/7rbvpcNsBmbgvGMw/bwUpluuXZ5HiL+x3qF8akT2/i0q7
T+jfpvHzbSVplXWiu7e7A/KF1L81m+/r8N9GH+yHhnx7lZIL91r+uG4RIsS1
eN1KiPmL2H1xEwV9JM9bv//We95zqH4G6mBK/cbleUatl8QI7e4B8fPZEn8Y
2t2T+p/V3wJ7HrIU4n7W9HdHPPq68KGC4A+H8P52CbFTDFygvTYbn0uiTym5
7vzs0o6SAOy3X3kdCsj9NXNDE6YRtHMn9TM3tbm3TtVY2I+UwHfrqJ8Mdpby
PIe8C0rIHXhKiL8p8n7UD7I9XfdUYDuhf2bS33WeOmGZZXA28nv8d+vyiVj5
15Jb4wT7JfGZImI85WtebG0UchfqbzvPXpJv9fMb9mcXvp504hStuIf75Y79
OZ36mcOujDKaVs+hvQbxdmYQ87FRw4OiPyDfSf1V9W+rjqy5/r6RPynx2z9T
vx10qFgt8Yev53bacSYwCfu5NN8Ps8jw80nSdt0zMR67U7K+k0m/3JUmBGeg
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
RxInBJ2Bx8886d9hx1Xsb31ofOnHx0yzrHFCnOcxP19JiRwfDglTep2N+kvi
SKVk/s2BGq9yhXEawc8DpaQo+va0Bg7jDsbXzJVn9a+N98P6L/H9qoisEz1Z
TIYJ+1YXvnwB2Tf12doxsUJ/MHJp4d5w72D3LLeZDftN0FOX72++xHHsycWh
03OwvZJ4v+sdV6Bh/aoh3wbaC9o3ULTX+s2vLOQ9oiPCtzfsd4Y8vt45KRvX
tQMzzDwb9gvrpo8qfKIi5Ms94M8l88ifpZe/N/jbwNPTr69o8MMf5h2425jD
9+t1fHabNNgP+hjTc7HKCnWbb37Cen2frz+NPPT743omTvCXdHm/7js5Or2y
V8P+Gvj2TiuUG/bdfV/dXNXA4bmgH0aFHLir2lfwT47w+sdzoctNbP3GChz8
jQqNC1Mbc/gevd2Euj6N92tefHtlcr8r8p9OUxPKg1/9VSPe7pe14G870/OR
0pEPah8uEfwNyfyTwU3orCi9TE/wN3rScwRblekdbmh8Re4u6Sfcib9vjmWn
JOPvDuXXwUIuasHFkYrbBf8/WzY8scFv37tc1qhrPYd60E8ufi+fIorF8Xip
/YSYhnbnNn5RuFu/T4R6fvB+UR4n/a0wIK7RvsB83DXHhn3rbfWDclwjHcBf
So6ZObuhPPwu9Acf7RWyDq8Efwx0dtk7PdFVRYgzP6N5FNomWT55/6XgPCzJ
c5AXjXnW7+rqvmLk82leSuRz9Ss/otOQwzzj6rzulIxSGo7HrzSeP6Crtu+h
frHIR9P8kFN6G56pjxcjB//Nekf4qPJ10bj+SuLt8qKjp0T2/e2P4/wDv6uW
eddQ9d4j5C14P01ONG2y37s1bZ6gXyRP80N6r2n/e8JxEfpv4Nf5vRJfytuU
hPuaCb3mLW44p0i7u/2eeVQK+jOS/B9p0b0/dpz3ceF8pJDmdXx+Z/jVsxEH
fzJm4SCfcFMxznuXaT7M7q0GviPVBT8Q7Fkw4ZillmIGzkvd6XmK+UzD8v0j
r6A+UH7DRsUzT4Kdkc/ZF1PQUP9z67bhB3a+wvl/Ad+O0qK+Vl/G7o3xwP4J
/uQcryveZs+F/HZJvlALUbrpq2BTV+H85cDr55MbuMyQxbvN6jn0B4k+UqLc
7/IWJS8+Cv2E5pM4m580jd79Ejn4t9NDDoa4zk/EdQfsuT/F2sfHNBX5Y8pd
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
/3DUJkOnaZ7puI7AviPStWff74ppyAl/vvaXeNZe3dnA4XmhnpPPPcWJyQmo
w0GaD6bs1WOeOFDQTbJ/+UNiVXSMJ+1IxvkcfjfgzPZ96Sqv0a+A+u+cHmU2
s37fAeWBBySPHP54VAByib/3l8x98snYr6uQl3gL7hHkXAkb/fA7+hXgTy5y
bG022UOMzwu8ZfsZX/o0ykOT4eMSVeTK4jsTGs5HoB+CX31zvdqXKU+E/bUW
v3+vJLmlXTXjrgvtC+U1njnnrFgRgxzf0+KoZ1Dx7BtyiW4V5FnQ3WGV9RzG
C9g5587LJR8chDwBqF9xmpms9ggv5FD+kav0pzOPgoT7R7z/Vkl05uVpm6UI
52XgBx7OHdj3z2cXfC7gWl45P4euzkR+gbezlHTNn7nfYIIQbwf/f2jchonn
Lwj7NcnzlpFTTiYdq7Z8Ry7Zf5WQiOJx1r+MhHsH8Luv5j4NTd3xHfsz+F3a
N3sp9z7miLoBX+fo77HslJCf2Y36b+57f7yX2iq0i7IkfkiUVNueauCYf0Lr
acvZHDmsmID9Dfz5E3WDQtvWZSJfzp+3FpHE/MF6k2yFeRL8zA2PN0q10gnE
fgj+kstBB5nxMQ+wvwEP/Sv+NK1R/th93s/PJv9xyicVdIT9CNQfOlath9XC
KMH/4Z8ri+weMOtll5URqDPUf1/z8+MCKzHybjRPrN8eWR2rwxnIJ0jitGRF
/+haBSthHYd6yixvv4mu92NBB+CP79lpaOsI8QfxUY3shvpvDdb9FbBWyBMD
PyryjWXrTakv0f4NknN2YiJTVrD8qBe2F/iBF27cHKH7W/D/dWiemJxcyeBp
hcHId0ni3uRZRu+LU+s5zM/wu4HZ2hp+Y4S4LnCLp8kbx+1OxPGS6X2xrqF+
Q6Otu8JthPkZ/CJRUNWvzx8FP9xiTkStSr1fF7C85XCVNi+R/x3R4L+5kW0D
3CYq13PQGfy6KXEtb8xQCEE+Lkrij7UtfDD+i2YQ8oOzG+q3JyGHzGJG7wrA
8QL2bJmVVP5spZBvANw2In2Jem9bjD8vl+S5kUI712fXXYV7ZOMfdrEZXV//
z1Fjz35R9UT+nt432VS75v2iHiFYfzv+ee25tY5Hen7o9hDtBP/qrKvcsdvv
hfzS2Xw+Twh3/2HXhDI7ZyGeI8m74Fp0uBUnb26P4xHqWXjn8gDpU2JsR/C7
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
yjtdGaf9QnxaeB8C5T1tn26RrhJ0g+827ktIlhOlXETdgO8Mt/Le8ywGdQPu
mJ0Y+LN7V3yvGnDRo+1DVLX0UTfgwRs1YmV1z6JuwB/1GPaoZpcv6gb8+9ql
w5ROZKNuwBU7XHTUqWyFcSHgCXnVjuscJqBuwLlb43ZPLl+HugHveMl+8aH/
rFE34Ks7Pc131HsonGNSPnOj0pc23z1RN/h+5fEPCRenfvuCugFvve7+JP0z
HfF9dMBXVu+LzchegLrhdzBl5D5OtTyBugEfE/fBY5imF+oGvD03/E2XskzU
DXjxbaOiK7PbYVwIuPMF1eniADXUDXg3s0Uv45KWom7AV08eteXO1P2oG/Bz
Q+/F2J29hboBv7fGYu3na69RN+D9Homiw94I5y/wHc8NhvN1O5Qr4Hv8gCf6
az7XCJmDugFX/znnq0mbo6gbcLtFekVn/75G3YA7FFd2Ox4vRt2A+5wvbrNr
eivhfijlWoujbfb2UkPdgD9rpbJlzJEFqBtwpXFbbctO70bdsP42I4ed07qM
ugGPfPaI02njjLoBL+81RMEmxR91A/6kynlknVM48z7qYm6yWZnT+Ubv6wb+
2NPbNb3R+7qBj3Nr9X1+o/d1A3+wIGxrYqP3dQP/OahPeGCj93UD17yTOEa+
0fu6gY/a75RT3eh93cC1/EQT9jR6/yHwrwmmI8c1el838FxFO92QRu/rBi5a
XHNo7VJ30jRuU8w9jVmoebDR+7ol97PkRKLnfQsrbYV43XX6PTut64NtbBWE
eJ3ke2dyokk2UTtDZwpxOcn30er3SZWvAjuECfG3+byfLy/qMcnsRu2LMxgP
SfGUfH9q4+XzbW3icnyb7h/lRQ8GXPnZ9qiGX9P9o6wolImPyVD7uxn9Mjfe
KcTBbKj9P16udvF7K8S7VKj9pxwXhY3J3YPxEB9qv5+y2fMPhX7+Tfc18iLX
jbHHTi+Rwn1NKrVfJ3+FXlfXcbgfl3wXS0ak8/fE15IWQnwJ3hM+VqFXaBtr
Ib50g7ezpWj/7MdyywoG435conNL0fpLl633dxDiS5LvA9b7O93d76TKCfGl
+fS7deOfcD0HDZ6H+3GJnbKiDvpq6x/ttEU9U/9HfGkPtb/CPtJ22d9+uB+X
ofY/i+wy81amKeppQ+03e1SWc9NEiC8NofZHtb5WOvuKLO5ffKj9JhPfHdT9
OIvZJ8qKTkq3im21wxz342A/G8eT9J8WIjW5zy+PdxTiSxL9W4g6q3iqy0wU
4ksS/aRF6S4a7+2zhfiSRH9pUZDRoN2fo0pQZ0k/kRZN3jZHudsCIb4k0V9a
tGhd9NFz7x/7Nd2Py4g6jFl04bRhsV/T/Xjz+NJ3an/x9VWrXK2E+NIeav/d
Vs+nfvAQ4ksy1H7P59n5SXflcf9yk9rv9H7Ii0DVecw+UVq0/cpSi9BQa9TZ
h9rfqlfA2Sx714Cm+/HmcTxJ+9aSjfN31Wi5CPElST215FO5dvnx2quos+S5
6sj2LhVqvzcL8SWJrlKiPor5fcaaCvElSf1Sotoha5bOKXmKOqvQ7ypu73Sh
4GS9n4/5q/zvSol+q2hczZsyA/fjFv8jvnSH2h/Zo7PrsAtCfCmA2q+SLC/t
P1CIL2VQ+1W2BMzed0mb2SdKie4dCEraLH0adb5J7T8RU6x6ttg3oOl+XEr0
927Bb5lZGagz2M/G8STtXkWcXBftVN4sxJduwneHT/feMuxnGersy9dTTdab
BtfdmyPEl8S8/X/I6Y65d6x0hfiS5P3bNeTxlE63VqgK8SVV+p3KmZ6rxOWj
5+N+XI/vD39J8sCAwNRNF1DnRTRus5aJL+2l9nv10XZwaCfEl+5Q+3+v+3v3
Q9d5zD6xmnjelt7utek06pwB9vdaaPxuvwh1VqD29xrU45DugmLUeTi1P0Xk
NqHj/s64H19E7WfjeJLvov4mKfuqNAoeCvElU97+38ThDZl0rqMQX7rF219O
pKo+X795TIgv+fH2lxNnnfkr7KSE+FIab38FOVrS0kD10kLUWaJHJVGZtbts
3RUb1FlifyW5rzOm0/Ql0ajzCBq3OcTEl/Sp/euGyq+fVjcHdd5L7bd6/2X7
Qm0hvnSX2q9qEGUa1l+ILxFqf9HVuRO7Hy5BnTOp/Q8C9LNnJinh/lGB2p83
YXF/59opqPMIaj8bxxvK82JS2/5E7LveQnxJl36XdsKrvJwTakJ8yYy3/xcJ
HJ+/uMxKiC/Z8vaXkPNnqxeEVy9Enf15+0vIEo8WI9/0tkWdJf2nlIT6R/39
72MS6iyxv4ysVIjc/PhKZ9wftZL4ReQ3E19So/bnXj79s/TvMdRZn9pvnHXT
4sV8Ib60j9r/9XdPpf4mv1Dnu9T+uYc7me2b3Q/9VRG13y1RR8//yBzUORPs
/2LJFcatR51bUfvZOJ6E55K/s+1P1aYL8aUl9Du/mksMFq1eJsSX7vP25JOf
sj5Zq37ooM65/O/+IONdvKf5nL+FOo/hdSggkyZfsL2akIw6H+aft5BkJp79
8bFTL9xPhfLPVUSkS7TTv5/RQZ0/0HjOWSa+1IXar9OmXNe+tRBfWk3tz50r
He9qWog6P6H2z/WQsdx2XAn92yJq/6We7W723qeJOk+k9nf4MutqjOE21NmK
2j/550azIFUr1FPCU0j//3IH/QwW4kutebvEZMvEbu+2HBPiS0t5O9OIc0BU
/zFThPjSA97OdPK5u3rK88HfUM983s4M8mvImNlGCr1xnzWOtzOTrD32bGHH
zMWo5xHenixS8KQk7+hBa9SzjsZzejDxpRvUfl878zljegnxpS7U/grTE1v/
SgnxpdXU/rzrp14m3ZyFej6h9nOj2+16smEb6llE7c+q0vvUN/Mk6pbCmxNC
FFTiZhWfF+JIcl4N/xBGWujPSkrtJ8SRevD2RBLzB1k2Sre+om4v+N+NJtfz
5uVts+6B+6wZvD6xZHxg6wEjEhejbvH878aT7J4b695FnkbdtvPPlUh6uGhY
q3BuqFsSjedUMnEkGROJ/W3mxvwpGiDEkVSo/Zt2PG4V7zwNdVOm9ldYrpvv
udUQdXtL7R8XPOnIt/gTqM8lXjdfTm391F4KPkK8SIMv78a1G32sp6+REC+K
HdjA7TnHIGOVsJOKTfehVkl+cSP/u/phySLUx3IwX56Qg/6DYhNOoT4deO5G
9ulHZ33Y4on6bOCfy5eUJE0Zuvp0MuqjTeM2nZh40Uxq/6qZR2c/WyDEi6oH
Suz3mzv+/m63tajPemr/Bbu9LovchfE1QdIuXOfuQWYrXYT4zyNJO3JTs74/
tdAU4j9tJe3OxRy6/kO5fD7qYCnRmesVbr6s67jjqEMIP19GcNrPOk7a/egN
6nCPtz+MO1XxMVblphh1MJf0Wy7lYKKHcWAL3I970TjMEyb+M4DaX7SoYn/0
fiH+c4Xaf0JteNGmPpaoQ62WxP7tWsv7B520QR0MJeOasw8bv7LtJyGe00sy
D3AtFrp0810jxHMiJOOOk5+74JND/GHU4aRknHKy7X2uJL58hTqoS8Y1V1d5
9Y7hrBTUQSy5d88F3HG+UrlJBuMSCyTzBndgv/OWDW/7ow6PaVzFkYnnrKT2
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
1/a/7uOw9sB9HJbD/SCWd2I4e2+OtQfuzbEc7s2xHO7NNRu/NC7E2qPDcPae
HVs/3LNj+TXqp7FcivpLLDehfgjLven6/m+/qLoZ30PXo3+3769mXJ/OnyxX
oPNSs/WXzgMsh3tkLId7ZCyHe3Zsu0j8Rvlm/k8iw5s+r3wz3ebSuBnLtal/
y/K31G9sNv9Qf+zffnVNMx3g+78s/07XZZbvpesdy4fTdYTlH+j8zHK4b9is
/9D5hOVwr5DlcN+TbRe4d8m2ywaGs/cu2fohLspyuF/J8mTa7qw9EF/6f90f
tBzd98vD9hB3khONCqj8r8+WG+TP4a3fG77zBHzzuZRWJ0kKSaj91amhXYEH
PH7oPSr0O2c1fmGHR+3zkVu4KvxYqnyFM5cZ9qkhPgJ8183SAd/u7eYi7Vu1
XiQfh1zPfVgQWbCAS6+uqd3wywN5ace9hqlSg7gA7W5dpyu954DvfNs5PnRj
xbTfmbF+M5Qgz62lKDLKXHn8sUckevO6n+dcIQ+tpWjmvO6lFzuKGXtairQW
mhwhuVcZe1qKEobMbFGXZ8rY01J07+PFsSUX9Rh7WopWL1Dro5Gmwpmejbth
ezsReWHLkzsHmadPbaqntCh8a4LD1+lZxNT2/PN0VWnkzi1Vw4MKHUlTe6RF
Nx13vFhz7Dpjj7SoJC58q2J3C8YeaVHu1Ze2T931GXukReOy374yXNlxWtN2
lxJVG1fJbZ2RxbS7lOhnsGnivOsppKnOUiL1y/o9V//KZuyXEhk7PNzZ9T8x
+Tl/5p3j6lLIbWvPVvy6/pzpP1Iil2Vc4v6zSVzT9pISzQqMvtl1WDb3uUne
YL09xw4v/zMrmwsZq/6sfX4xcu6onlnlQTHTD6VEsbN27kzqHsO0e/3+0bNH
vIEokGl3KVH+5Y75Ut+eMTpLifY8X/Wg/+cbjM5Sov69et76cmovo7OUSOv8
+T+qXScwOteQE2NzdhvrpDA615C2K4pHyL+KZHSuIeNcNyu1/JXJ6FxDlleM
de3qmc3oXEPMb+1Xkx4nZnSuIak9ngSdnf+KGRc1ZE+ryOuHFyYyOtf/7qlb
qk98sxida0i3y2MvXhyZzehcQ1502mln+JwdXzUkX+10na5CLKNzDZmzq+78
65PvGJ1ryMFo00WqR14wOteQDycUrKTb2zA61xBbndObdMXLGJ0ryZk/Pfcv
vR7B6FlJsmYuTOtUnszoWUluf0hYfykok9Gzknw5GqaS8jKb0bOSDJtYHR64
XczoWUluPrc43nGYJ2mqZyUJODh6ZfXuBEbPSjLeo06UdSiL0bOS9GhR5jVw
TDajZyV5bDSq/6QEMaNnJbGf55RsNymW0bOSFLpPDvVTDGL0rCTvrXS2L3r9
gtGzkqi8m1WcetyU0bOM2NrtPJbU3pfpt2Vk2L1VypZtHjO8mJxa4XC6qs1J
Rv8yol59ZYFKzBdG/zLif36CTydrtl2KSV7giva5SeFMu5SRW9/0DTu6ZDLt
UkaU+iwf1zkum2mXMhKvvtLFPlzMtEsZadu2RbZqiDdp2i5lZGHh9h0zv35l
2qWM5BxX2bd3dxbTLmXEJCZ54P5l2Uy7lJEZQ6Pu+rdOY9qljBxRGpM2YQnb
XsXE81D/axPGpTHtVUamWuvFdNn7jmmvMhKxIrHniEunmfbKJcsHrr2SdfM0
0y655MXYgS51P7cyeuaSReU2M7wTwknT580lsV0u9NWUC2T8BDG5L1Pp90nL
iKlfTBTtshc/+TCHaXcxOdNh6mWPc2dIU93EpHXJ1TnE8h1p+lxi0vnw2qVa
814yzxVJtJM61PosmcP8biQ5sCjmc6uDfZnfjSThigGrHIu2Mf0qkizXTlyk
p3uGWWcjiapyXmKfHsHM80pJnT0yYsuOV73Z9VGq5L8ApfejigOY9VHqSt7Z
YWFkFrs+Ss14Mdn1735Wfykpz9zn77jJp5l+KCWlPuq1wYmjSYRZj6SejJm4
4sjOSMbOSG6e8oEbUqY/Ahh9uDe2qRMm9fBh7IzkhqW3XljUsQerD7f7sMZe
zRszGDsjuYIZ4/buWbuZGXeRXOarXZ8W3zjJjLtITqnvHpvaHw+YcRfJLd9X
o7O2wpN53kju/X6D3Cs9w5h+GMnZK0xW+L04iek/kdyJtaeNFWQzGX0iuaKS
z0UbjmSTpuMokluwfFBltVQK098iubfvzR7tWvkkgOnnnOXuF3MWBb1h9BRz
S17+kamoO8roKea+rHLqNGRfdkBTPcXcxvZTDBymKzJ6ijnxntILOpunMXrW
r6Ozl5koVmxk9BRzI1Rq23RxPM7oKeaGR1X9sdB9wOgp5n5cs9Te7unJ6Cnm
JlveOPtXOYwdj1zweaJmmJrEjAsxpzp8RPTVAVnsOOV+aW25ss7TjdEtl/Nv
n9x92SRLRp9cTmZOaufMKa8YfXK5vx2tD19VSQ9g5iWu/aJl6rcKOzL65HIL
ttR17KqrzuiTy917dU7ni8wGRp9cTuPZepO3C6wZfXK5jwNi7HotfsjOe9zQ
Q2OHaZz0YvTJ5QxmZFnlO3xm9Mnl5izp0qtfz2SmH+Zy49e1li9LzmT6YS53
3JHbc1Q9k9EzlzsyW6NU6fLrgHlWx32NV4FucqLOG3o8fHwlkQttsH+7NHJ7
nb8LL9RmcbNzim1dLaWQf6ySPuNpmM0d45/rL+6n3L8uHDM+QMwdvOdXkK5a
hdxtZ4UFuRzDxfDP9QP5yJXP2t61vMqF7s58HzsjA3luX49b7lKmnMXhI3Wv
KuORK7fK2OwaqMvt3RwZm+bpj3yox9fVnmQwZ2EzfJiVugj3cS/dr1pVmVRN
C3dZ/2CS81fk+cWDx69t+3gav5u9LezvsmztnvX1DiLddfTOqDtLI29zeZXp
smVxXO+IXGd1Z3iulqJMp/DFLSLTOLl4jakn6vUGHry2izhazYYrmzuyuEN+
AvLVKQd3rju0l3sb+jFMLeAd8utzWnbtFL2Y+yl18+oJ17e4v3t7zs84wnU4
p5vp6pLoGYdc0f/DmO9GSdMyeiotlf8N7SItKi/L8F6RFMmZdRaLTb4l4T5u
+fRUx40XbnNeq1VfFjwMQV5Y7FJ5teggVxof/UUh/xXu4w5NcU9xHLmCi+hZ
538gOAa5ou/OEy3ad+f0FuqG946Nwv2IpY9SitL9+Zxzqyne+4Mj0H9eMsXk
U9zXfdz+JuO3mNhMqj7VStWelDcZv8VE2uBOaPdQb2LG+Gkp1E8rbjJ+i8nq
dUf3kLxvJKnJ+C0mD7a8mbb7SSaJbTJ+i8nn1vkj2wzOIV+ajN9iErDqzt6h
m9LIhybjt5gM2PmuesiIAHK8yfgtJkeP3Ri1e/NXbl+T8VtMbr2T61p7I4v7
2mT8FpPBfY7uW+eQzf1l/DFv6o+9ajJ+i8m0Lh8Wi2RiuB1Nxm+DXVq1Crvu
TPuoPe6FkM+TS+6G9NwuHnCMaNbm3xHGdS453yvpUuL2+yTo9aOzwrjOJcOW
jNqlqeFJpm9ebimM61zyYUsLc9Vbn4ikvWBc5xLvBR0nbvdKJOZ8u1Qh95E6
QPTfZZBtNE8PuPl39w4PU9NJ0B2n03o43nOJ1qSRXr2DPxCvbdYzhfGeS7KS
RHNXScdwy4x9ql1xvOeSQQMCZJfaZHJVg0SBKTjec4nagGI7M+9szs3jzVhr
HO+5RPf8m91yN8RcYcCgx5NxvOcSqd8v/CeLX3I23VvsF8a7mGxf8J/MlHcH
SZcwr63CeBeT2NMjPgcvuU2uHDFZ9s0T11OicXxfVZCiO+llqH2u8hzoIybW
N8udZC6G0nqqkIct2Dhyy5Wv9Jy+ALlt4fQfhoMzSXl4ks9xnDfEpGJwzILe
vaJI7MQdP9rjvCEmlxTL2t9e+Zk74DTj3XCcN8RkrrWRnVNyOrdthuPjMzhv
iElgm15V/YZkciZlZu5JOG+ISdCfNrdOnwvhNmaGzxHuaUaSllNbWHdfs5d8
v3VinDCfRJIolR7RQ2puEH3pPsnGOJ9EktMbIu5GysUTCw0Hh3ycTyJJmltc
L7nfftzI13c6C/c9paS6+bbue+PHHrL8o7208/Fa9DNvJ7lcTNG+SkyjWp50
Pv4J+cSB13VXtU0hv5K4aQPm2cM8I3U/90PNFhsfUvnnS0BdHdQTyX3O6VS8
7OpOctVm23Lh3qiY0x5p/LbT+y1k6EjpkjF4b1ROVNYxf+Kf1lHcwJu7Isz1
ypCvP5reKmE24ZbxdoI/1lJUvDFv66/ILHJ806wuSrGlOG9PO7fscEmfSK76
xoY0//SfyH3XaVZWHPPn5F5dGHRojhCX275k+FPDs9mSepbIIjdaXTNGVTOT
/G7yXNKiI8kOo9zbpnE/N2rcm6H0B/lSa6PM7AnZXN7Hp/uPq1cI5U2HxmpH
Z3A+I1sZtc8vQm75YvmvPwHhnMvfjIHXBuUgX3nMPXaCjQ83+XPw0l9dwR4p
0SOzhzU9pHLIWO0R4xvzyccXfWjgXkcPzW7IzwBuVLrpxIsXmeQ1X7/A970a
mfW8nq8aN6N//sNqaF9Rgt07Fa0v6dzCUR3FeY243j4Dwwa+9K5LrWpAOXID
8x2rn6jncPNuHfZvzBe8Gd2rgS/k+2cJcqXTlo4J4RncrIb5sBHPdjQc3cBL
kq9EhWO+vZSo6r/j1UqGnpzc7WsDAjaC/TVENFneafvDbJLaZFzUkBayX87c
dMggZfz4Bf1ryLJHa09MXZjGPTNc1CJ2RjnyxJMn3x+4l84VjdOyDTYoRd6i
YH+x2oAc7nFYQGrXdSXIR++5MfDttmwuip8HipC39xt7bYNrJjelYd6uLEB+
JKr13DO9M7g1TcZjDVm/c4pHROUb7lKTeaySDAqdvrBnm2zSrck8VkniTWZl
bM5MIx2bzGOV5P2j3kG6NR9IywZ90n8hJ3bPT+ySzeAeNJl/KsmQe+PKXY6+
4Z6ZJ371TQ9D3ifE6cjauQ7coSbzUiUpdP1Q4mxyjdvH+AlvqJ+wt8l6VEbe
2Hf381+XTXY3WY/KiPLv78p9lqWR7XWVZwbN+4189lzOa612EDnMrOOX6Tq+
h1nHbek6zrfLd+gPuWS30YJXL8ocySiaxw78c1BC7sBTmUT1zsOOFjif5JKH
+ia6wX+yyOj7UYss9NKQWxnKFRKdBO6qlPy+b57Qf8TkVqzRyDaXUsn5reZL
hHlGTDIutpUZFJ9JWtsFbQrAeUZMnkhpOFwzzqL5YTgfkjafQryWGj8nFVuM
U4R5I5LIKiluPvYukIQ16VeRZPDAbYtKD2URIqvpKMwPkeREB9M4zQNZxHzM
hxuKvyw4rEe/f5jey3guoIm/F0lWaoUfWa4Zxy1vOt6lhq022Bfi+ZzoNx3X
Um6+Yt3S8e/I0YeFIzJUs5EXv540etjubJLTdJxKDRCNOndkaza5/+vCpWeN
1ou235d1WF2/Xqxp6pdK5W57ukhvz1OuoMk8Gcl5TdyVeHGvE3Hj/ZBy5D8U
TS65tnxNskd1NxDGaSTXXn9WlEIMIS8ifv7XDcdpJHfzxnItZZX3ZCE/L6Ui
P6U5LS9sdTYxaZKPHckNex+UvcMnl9g38cMjuUmO+xQu6+eQH0OD3h0U9OT2
+RUXhhdGk29N/PBIruVE+V7mi8JIXZN1R8wFyX078LHKl7RT2GjdyN/gwpaS
9PnhweRxk32HmFvn3bnT8T95JPd243M9MTckpq3i+pY/iGKLxvuRer+qSKlT
i8l5RJlfN7E/c+42NQVdhkaQ+Cb7rFxun8OljGPDPIlj+ltxTKBw3jfb2dyk
IDmR8OtvpCxyqyeuSf2vPqb//wPu14acrfVz2lU2rel+Vk6kPuXFuQ6GL6d+
aeIHlpEb3mu7bX0YzMQ5i8kk6ldvM3i1sA/2k2Lyab1510592fK5JKm47PEg
l1Tuzp2Rqn3RD8kla4JGvy/0zmC4mPwK6X9Jtl0WU08kSR+ZYLe/Nok9J5Lq
bpq5QMEwhzS1R0rq0IfSp/r1/bYpj+SGuPm0NI2IJIqTGhZsHI/c4M6bR51e
l0l6fm28j4vkik7JTMqQSSc/+X4Shu1o4BUwK2RbBlnRZF8p5lJOOozqmhVO
nJu0Vy5XfFAkM23xdCZOlctlBO87Lb9zSkBTO3OJSWKhyuCJ0Yz9Ys6q1KCd
/ZFkwujJnSmw8wqbks3oICYJ76yfDMqPZ+rJ5b7Lf00aZ5JE1vfve/dUI7/3
/yj77rAmmu7tNUbsXexib4i9Izoqgl2xYkXB3rBgBwvWR+wFFRELFhSUJqKU
5CwoKIoaqQIKSwuxB40SNepH4pLNnJdc1+/zP86zz+7knjNn7jlzzxmXdn8b
tS7lvY6of9P4/p2qG6eC/y8NdDqr9f/lzX9VDzXwf4f/1v2ZV+r/36l9bQU5
83vXpZLPeXD2x8awzfpxqiDtPlVMyzqaDY/cBs2K1uMsg1XBspp+Q1+RhT3z
Lu43aGeeS6W62naGOXYL9DAYX++ia69jSscXnefhyIu4WsvGJ7yDiwtNkyMN
+jH1qlP+o9J+3EvlPRQk9Jv5s7QPBQC6OB+st3/MmlKtbRW8r2rCSsYwl/oN
lJMeX+RtBN5uwvo1HPU39CveJzVhN6XbD5wTyRJdHknPr0zY8OYBQUMr3yWR
6bHT7SoL/Plb/SYJj7PyUX5SzOZcyb3bTSQns8cOaiusC8RsbT+HKOtsvA8r
ZkP3uU2JtI0h+57n9pxX/FHg28mDq1ZOv0voPKGIjfs1tsaL03Lod3CLjcBj
RWzlIRHDFeYFyM6w1Y5ZfdPyWzofKGKVXW3dVZpCtI8sYqXX/yqGfi0k00Jv
MMJ8J2ITJ618eL8UN9rOsLYDS2boeG+ThtnCPChi/b8NEb3dmY/sDLv1XpKt
lt/S+UMRqxq60bLLxRgSNqRHH4Fva+Cax1+zq6FyoN+jgZR3QVurkzzUXxo4
m+PZc4ga97saXlzy6+d4Ug7082qo7uW6r1F+LsJfDbk3t+R8z8T9qII3eXsq
B3vJgcZBBeOsKuYMKC6Arbo8oVxvD7ScOjbxnRzFVRUM/81Z7TuYSF6hPM9l
Ps+ThPI8T/g8D/1dJfzX/uyuiVEYHyU02rphDbe8EOVjBR74OqXbRIGHKGHz
XL+cARZFaL9MCVUmxP/W5mdWo/gTxccflE+G5iYf9w+cXoDzydBr/tg9JgW4
nQp4utTnbP4K3C8KeHml6/uxowpx3hh2NT3v51e3EO0DKuDore0vfbrKyX+5
jw/c1POoUnu4l3l9qZygfQRYuNlh/N+WEUD3LweXvLr+tvJ8gPcLwPk9GRDV
oQDvF8A9P6fcsFQ50P7DATTu4hAzvRDHPUj4XiUm/0M+6ncZlNS7r5w16D7q
Xxnca50++NvvWLy/AxZzTh/vXiJH/iaDdEXNi3t88L6DDCo08C2aY31zSLGO
j+l5F0wNUTddte45eRse21rIL8mg3/H3OxNMw7DOhMntebVapWr3UD8yzM0l
O05reS9tl5Hqd57bnZcGoH5kmG2NVxSstM8H2g8Z5tSMT1u1fJi2y4hH4rm6
HMjR72KYZSPqPn0yfO8Ql3n1kgz5Riu765OmlvKNJe4u9Qyf7/FqvvOgZTuR
DsqEHerpHbzA9jVxOLS/t2GexGxrbYsvskLo0LiKUsiraCBrcd83Ob3lhOYP
aiBxqW+uiqOhDrWuUUPxpfgtGalyItKtNwX7hVzJVq39q649ZesaFazp6n5N
daoQ8QcVNJSfOfx12B00ThXQ8fOl5Laz/Ias1q0TBT4WPEc+U8vHrHXr6zQ9
nnZ9Pr5/NFEB9HhhmKYNeydo81S0XUZeXw5usc6qlCdykd5fTJP1dmfLUd8P
LFXA3/h9HSwF/yGje8eE7u4QBJ6XXTYn2t/Sj8eRqTX3PQssJOaznyRd0/MT
BeT3erT2PikkC0tmvaomzO9Q3TZHvjA8j8RR624OdmwLnnSiSQ5J2OPzOtrA
fmTA++3HS+2W3pmFNwX+A2kzwjs5NC4kTZpFwmUD+yKbAyO1dsRLocfqRpLI
d0nkSdVNRSfavdT/3kivDxN+BCgQ3+NIcz8f3wYH3wH9uziy99aiZtp1B+JL
ZGAmvNbyIppfcaT3mYsDtPyHazVl8kMBN3KyJLJ2wAqsNxOz449Ne377qRzv
y5OKDSKWJWxSoH00jiyacaT/ObkctUdBFhbZdkiWFsIkXf6qov79a34ccEi+
FY7mZRPW6/lcn4sj8lFcNWFbTlhiXjW2dH6ZPqCdkF8yYW8dLmh08KGcHNCk
9hXyA2L2+qgTGW29XyOeULpuWhzULG9MAmnx+/Wt8FVKvf3WhurLJS5+iEeZ
sP0sttd72v4muTS6g1TIO5mw5i9cej4JCCXJbjOLR50o40Vi9mybvlec49OQ
HkDMNo17/niwVTa0kOf5qz0E+6vXh5uEmeWBads/WwztDi+7fQgttdN8Q8we
nnc4PP1THjlK5W/F7PSYNpW6Wxag+C9mPR8GTbV/WkjaLHV9KuSvxOzwmGOt
RK/kpF5eyDJD+8Ym5+5VKLXnU+t6Eduq2biORztkIV4kZtPfHK5d51cC+aTL
uyr09rEZOc+a97qO+JiY5SI+r9li408aUOtuMTugU6e2riuDiaRx7SUCH2bY
OT7N04dPzIN7pzfaGtr7j5nT37rUTvNnhr11L66S1l6h0c8KQn5SxHZUFIQk
bU9BuhQRO8x5z5mb1XNguOSCh7AfJGItzCe265PJgeOzZGuDPDy7fEuHZWsn
PybT6Pw8O/DbN7MNpXZ63hexsxo4HPNOyEN2ho1tdGuQS+nz0RVMF51oJ/Bh
u5oktn6rIrKy4VcPIV8nYjs7KdPMZ+D1RWk7UytXeD6II+FUfkbEHkqWulVI
zyOLt81fKuT3ROz4XbetnZvmkuNJ9VwEXsGwawe/eer/MoO4PglWOhjYTyds
+XCz1E7zEBE7on+Gpe/6J8jOsFXc18/VvseGyvOI2J6hV+LcT18he+n8FTvj
QNjlxKgnZLVunSXYna+sdH1aaqd5poiNmZJuMT/Pn9D8RMSu2zAxqptdOLIz
bPyYNfW07z9QmNVb2EfQwOypaRNihuVCgdbP0wWd5/BPf4sSU/PQekcDw74s
dTpQOQ96G9bPKX1/F/+Us+sGJ0NXeh+HvTby7f41pfafVF5RAyeme458aykh
wbr8/0+9PbPD2i93vZ6hdZAGmgztkFi7Yjy5S+fx2O7Ho2508LtAZtP7QWxm
0pVZ7Uvt63T7X9n69+QmOHdvYfIc8XMNjFry/uIj/6dkuu67ZeNFDWxUOxuf
LhzQ8VkNVUvqzzucUpbP+qt/z4/ITyG2Z9MhXDdO/+jtoz9meQ07+wJOUflb
NfiFVr/f8LMvis9qiN5b+aFJj4ckjsqvauB31fp/48SvydDuhvlVDbR8m1B8
a6QvuVK62Kqhn981sGrK1M4eGy4g3q6GHL9PR6XzE8kt7b5DjKCfbNlkR/PW
V67BT6SfPM/rJ+k4owLVHt8bI84Ho/isApIT4+0bkAvdqPy2CmzXD7t5Nvkq
PEH76aH8fjodV1WQZnuqQuGZWNKpQq1PwjylguvRIWmXN2eRh2j/PWzFv/13
ejyq4LVNtexq4blEhfQDbXj9QEct/9TnFRWQJmvZWfHqEIqTSqjNP0+PCyW0
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
ht2RVW3q6RaMlMaZYRfM79OwxmJbhDPD3mrssWqN+38IZ4Yd1P/eykLxQ4Qz
w05f2vzFZx8Vwlmob0TjrIF7zX48jq65E+GsgeV/6/7+Vq9BFI2zBnp/40oK
FhcinDUwUvWrIDV2ZDSNswaGjXjoGF98DeGsgTSPNqYOqYyExlkDDl36dq2w
dBrCWQO/B9y+r9p+HeGsga5+F5NGuHxFOGvg7bkBBbW2DkI4a8B84uaN7afu
QDhr4N21FvutLKIRzhrwXf1skuu3LwhnDWRPOzMqtmUroHEW8o40zmoo7L5c
tv3oK4SzGgJrfjq8KmUdwlkNFc7sTMqNsIymcVZDaPC5EIacRTirYVWrI2dt
Jn9BOKth8PVHX7yrjEQ4q6HqlEvLgqqfRTirofG7t/vuJhQgnNUw8eYgT6er
XaU0zmp4Xu93bPDEtQhnNaQcNhs5yCEY4ayGT18SyNptCoSzGo6N2WlebXcz
oHFWw5wnR9ZvOGuNcFYbwVkFW6P7pX+16RhN46yC9SNFG47cjkM4q8Cjm7rx
APkehLMKHjZpfDXbKQfhrIKe3S3+sw7tLaFxVkH4r+Iu5lf3IJxVYG61enNG
lSSEswqUd6PtN/VtKqVxVkHpmrtv40PzEM4qeP7B5cdJq4sIZxWMT2+TFNcm
A+GsAoft/b/l1aoDNM4qSEtr9vJ4wRCEswqiRN++X8lxQjirjOCshBPkkndG
yNRo2q6Av6PuXXYsuYHwV8LLWFO/y0Ffkf8rIFGxZJGt5fhoul+U0CB3xYG9
ZqHIroCvle7nSx5UkND9pYTxXtfHV1pcDdkV8L5ygv2JqtMkdD8q4Vc3l+pN
v81DdgVM/fwQ1oZdRf2rhLaummkLqgcjuwK6W6fMaKpQon5XwlDpPP9zN38i
uwKi/QL+xGX2k2L9W2z981cW2AxHdgVs3Gp12WPbFuQnpeu43za3Zx3eg+wK
WGcVO992xj3kP6Xr4leT6ktSYpG99Pf2PlW3aGUx8islbM1Pm+AY8wvZFeD4
+Fdja2U7oP1NCat2cv2Yuj2QXQE7PZztvB9NQX6ohAqWTY4sD5uN7Ar44Eye
O712Rf6phOUf672oXWk7siugzhnTmu1DziK/Fer20XaFEX/mwMMuaIpVlxLk
txzEnrX2aB54CfkhB9XldY/sko1B/sYB+zl2i1OqF/IrDgZ8N7k4J6QA+Q8H
DzPiQ9fs6SKl/YSDbb2mfEif4Iz8gYPdP+47KY8GoH7nYIo7W++qVwHqXw42
2ikffGrZBOh+5CDCc/ez0aGjUH9xkL5i3802LVxQv3AQ+mh55RZNTqN1nAxO
Z7Xa3WzjUAmNmwzCmokWJ5p9RLjJoHlm2mvPykcRbjLYbd2pc5c5rxBuMkh4
/mYwk9xSSuMmA+uPXU+vsnFEuMlAfDdt9syGFxFuMpgaWrmWY+t0hJsM+rlP
m/Rtag2gcZPB7biL50/NtUK4yaD+/naH9n1ejHCTgfm4OQlqm8MIH4aZvCJ8
aX6CO8KHYczfjK5oOqa3BPFYxiOk7bcz858ifBgmsHjiwGXH60oRj2UC1nke
rZQwGeHDMDd8Hj1ueO8Ywodhvi+1nxNy9zHCh2EaD+0RONz6D8KHYUabKriT
p7ohfEp/8RHJlHZTZiJ8GGb+oYnfVmp2Yj8hs+a6q64XR2M/IdHvJm/z6OiC
cJAR9ZrIP0dGiqTITwiz+mhY+hhrhIOMmPdN9HrEuGM/IeEHvlX4yERgPyGD
XPIvPrj0CfsJ2S61WM9atATkJ2Rc3BIudfgY7CdEJjUbZtd9HfYT8rlz/yTZ
+lPYT8iA21/qRcWFoPElI2uGfB60zP0ximOyMv6O4xX5HBrv+W5tMcKTI6+8
Oi3srAhAeHLE1SfvUa/RvRCeHJHUC6pgXXcNwpMjimC3iM03/BCeHLkbcvC3
f6c3OF6RvzN+3xlcpdb/1MNMymg79nb8QIQnR/arzA/0m+WE8OSINLdW9cQ9
e3G8Isv8Hh207n4VxyuyfOcJi0YNAMcrMnHl+vGhb14iPDkjeCpI2vaOw2+M
NZMivkGGnJ4p8qsxG+GmIOt73Rp5beIphJuCPF6yMUp2IQHhpiA7e3b0C2z0
C+GmIJM9e9js/trxf+pkulg7zqrnOwnhpiDWB8V3B+7cgHBTkLwh37rE7vdE
uCmIrPqXIUmbQvC8TGJNhjSZsTQez7+kac/Ie/VDU/E8S25WcN0cMS8T4anQ
46lrvr7OngnLBZh9VJ99GqG7nsagfma1drU/Mh6jInXNN6ifudlnt3NXc4g8
qIXHoH7my2abJ+9e2yPqre5/EOpnftxfcWvthPNREl2/CPUzny/3U0zLEEcv
oursmbCDlhWvX7XycfQ6HQ5CXc1Gv5/feePeVtJM1/FCXc0PURXHTquzRbJH
111CXc3nBWdPbh2bIJmsuwdCqKsZFuc7onPF+tK7On8Q6mq2ut/Iq873SdJ9
WrNBXc01n7fH3PfsLMV1NYdXafqo+q6ISN1rDOpq7nCv1uveBPN/16UZ7Kdb
JJrLpxw8HRWocyzhHJ/67w/rUSZM9C7de4Q6nI/m3LuXmOEU/a8O0nu9/ams
/vAzBesk13QfFupzpoSIlE/CH0jO6NxNqM8ZbPG688VOdaRJWvgN6nPOaeZ8
LTNyirSxriOF+pxhQzf1vjn6iHSdrv1Cfc5Ox0NcPuzpI13E36f8zy5ifwZa
PfSVH4vSdZdB3c4b6ywX/dhbEuWi+w/Cvr/j4RuXBnaaHf3vPhXhPN2Jhc3O
BBRHRPeg9O0itihA/i7Tu7L0333JQv1P10/rxrRaM1H6U+dwQv3PKqENRw/t
cVQar8NBqP85Y6X9ji8bH0gd3OLs3Qzqf7bZ3G5X4pDt0l7ovJhVg3fNe6+b
HD1AFziE84AfZhTtXDQ2JLqmLjAJdTA6VQu50CitmgRofTj7YeuDzEWi/dI2
uvcI+f+U5qcczh+Nlb79d/9T2fhkz3XJqbY854t0jHZYG9QjzZ9EznepBNI/
VF0sDSQPqntmZhdG8lIXB4Tza/FHO5/r4DhVMpbap9DAwnaN3SaMU0o7OWnj
iXA+y7ZhlYUFrZvBGh0+Qr3T10cDZ4lnlkhPIz1ngPUa1bxjnhLJWcM6S2o4
139K6xt/BsFoXSAW6qTtqbx7q/Uyc2ij+7usDpIK9h+Zb8JGT4enVFxSQBMb
331/8m5E36XikgJOV/Fs/yWkguQiFZcUEHbLz1byearkABWXFDDnbX7qRM+r
EjkVlxSQck1tWTFBKYmk4pICkv1i+q736yd1QvU/d1f/PsG32j3pSiouKWD9
4C8u9zoUSxtQcUkBcaZjvvh5tIPNVFwqXRcXO/z9OnUKtKXikgLaLbbammvm
Cs+puKSAVr0iFixSn4ETVFxSgGrxlLftiQucpeISB4f7N4xd7D5GsouKSxz8
Vz3Ord9mL8lKKi5xEO8cFGYzvUASQMUlDjSx69sWKM2lO6m4xMG8anDQ8cAq
aQkVl0rXTS57lvxmGsNFKi5xMHDL9ewdTiPhCBWXOHCwaHBox/u1IKHiEgdT
s62X+ew+BdZUXOJguY+9L7PAH7ZRcYmDt9n1t2tYb1hIxSUZXLtY6NniTLpk
IhWXZDAz4sXJfefMpGupuCQD/yeObcnm+VIbKi7JYOjBZ3dGzvSRmqNzNwO2
zBsbvmQhXKXikgyezX3QJ+DYAVBQcUkGmbFj56yp7AufqLgkA4erC77Lz0ZA
Tzr+MJV7tDz+eOokaT86/jB2tW2KX007Iq1Gxx/G6nLat8u/46SR6HzKUKuk
p8lWx6A+HX+YMasbPJrnGwQaus4euehfZ8Cay2FSGRVPZKRhV4Xcb6lC6kmf
myOW3jeOqRdUhGFU3CjF06xRQvO9MdCPjmOMKcn0WxD4FHRmg/pplS6vjChR
TeH3GYU6aa+rfXNeenoyypOb6HEyo+5vKl0vc4/yeiV4w2a6Th30e9RlvPzW
aWDnGMY9Gdj02dPK7sAdxKNk4GQztZXKiYV0hGfJoH94jkd4vnX+h6ctHc+Z
9T2vDsoJikPvL22psr1dyIdEcKVxI9XftNue9yIZxlLzlIxwFjX8h5SU3U+v
9zeyUTM4Zbv1dSCoLt/dc85FLzpEQ5t3lB+SDLMXi+PsY4BZSOFARC+rufv1
k8FW2j9JNZ/Texv7J8FTXfuF/fpWw/L/Ol0/Bv70uCbxsxODxte+D9/ocU3m
jrg31LLic1hAzRcc6fw+dkm/9BRI8qDGO3FsMSP2xPwMsKPmEY7sqPtuoFvq
K/6eMKHO28XiHnP2pSZAJIW/gkh637Ww12RAc8rfFMTsDzvPpsd7yXN63iF7
gjTOVp+rSf/9rc9/kuOzLqdluCVLjtBxmxRuWBL3anMKbKLjM+k3+eviuBMh
qN85SHrzcEvVP4F4XQndZ5OxUbP8Ef9nmAs/anUp8rmEnmeYnlWWXjO9EQUj
qPHFQaX9d4/VDA5Bdhk89nU8c6ZFDH6eHN/sObH7lRRkV5AejhHxKzomw7/7
Mh/r3/On34mZDerEQGO6XyDrxMlOOZNDYAKy5/P2hqgfPfl+pPmAgnjMgOjO
rTJgODUuFGRK9xtudy6lwgeqfp2MmNSp4pM1PRXO0PMmMSEjPVaEZcJ7yp8V
5NKPG+fzpuP1kUyP61J63MGcJWOfsdHRsJHqXxnsfTCa29/eH71H+IfWs/r3
o/mLVOL99gMVlxSkQzXfjFUdM2Ayip8FQ/7Fz0Pouy/tV18O6pofPQI9X5WP
tyfp9pPZ+xSzwq/cQ+NFBsWBLhfa7Q9HdobZx8exFxTOMmK9r83i1ftTcPwk
jyernxaNTwVbeh4ny/hxjcYFuXOxtceAepnodynhxM9OFsPSL0XT/a4A0d1V
AbUtvLDfQs3s+PVbGl6Abu3p9p/m2x+D4nAKH4droHYu4duJxhGRhh+v++5c
EnqeYSYo7eN7hSUgu4z41jzQ/P3LZBhAz1PElI97NM4cmZ+89GKxSzruF3L6
8rE6xe4vYQxV11RG1O7ntsdLnv2Pbufa5zy2mWIYimMmbJWZM9uljhKh/IkJ
a5VytlHXfttQ/qT0PSZfllRIvoPyJyYsV/2Z5ZbZcpQ/MWGPbil88fVtA8C6
naxD+Q/H9hiK8icm7Kxott/agIUof2LCnktMP1tyYy9g3Y7vkgqDm27zBazb
ubzTdmLtBRGAdTttl2gKnB2fInzERvARG8FHbAQfsRF8xEbwERvBR2wEH7ER
fMRG8BEbwUdsBB+xHp//q66mfNxERnATGcFNZAQ3kRHcREZwExnBTWQEN5ER
3ERGcBMZwU1kBDfjOpnycWOM4MYYwY0xghtjBDfGCG6MEdwYI7gxRnBjjODG
GMGNMYKbcd1L+bhpoHzcNFA+bqXvKRc3DZSPmwbKx00D5eOmgfJx00D5uGmg
fNw0UD5uGijDDeteKltXKGz7J/X/rG8pH0+1ETzVRvBUG8FTbQRPtRE81Ubw
VBvBU20ET7URPNVG8FQbwVNtBE/jOpby8VQZwVNlBE+VETxVRvBUGcFTZQRP
lRE8VUbwVBnBU2UET5URPFV6PLGOpdJEh8hpvdP+zzqWMpyxjqV8/JV6/Gm7
wki/KPX9gnUs5feXUt9fWMdSfj8q9f2IdSzl969S379Yx1J+vyv1/Y51LOX7
g1LvD1jHUr6fKPV+gnUs5fuPUu8/WMdSvl8p9X6FdSzl+5tS729Yx1K+HyqN
+KHSiB/+/+tSyvdDzoi/cUb8ijPiP5wRP+GM+ANnpN85I/3LGelHzkh/cUb6
hYPy53fOCG4yI7jJjOAmM4KbzAhuMiO4yYzgJjOCm8wIbjIjuMmM4CYzgpvM
CG4yI7gxjBE+yRjhk4wRPskY4ZOMET7JGOGTjBE+yRjhk4wRPskY4ZOMET7J
GOGT+n9Y32LE34gRfyNG/I0Y8TdixN+IEX8jRvyNGPE3YsTfiBF/I0b8jZQf
J2WkfP5jXN9iJO4ZwZMzgidnBE/OCJ6cETw5I3hyRvDkjODJGcGTM4InZwRP
zgiexvUtZXhifUv5uCmM4KYwgpvCCG4KI7gpjOCmMIKbwghuCiO4KYzgpiDl
z9cKUv58bVzfYuei8jtoMViK9S0bbW7mV07n9boG+ha3kjaeNU+GSLG+ZWev
+k2m5+RLsb7l6J9ky7bX6wHWt0xwqtk/5ZcVYH3Lx1fruvfx2g1Y39LgR8dQ
aeYlwPqWKo+6Vt3hcA+wvmXs8Em/1x5MgClI37LteluzeZVSIRTpWzZ7Wu92
/pwGWN+yMirxWNGe24D1LcHhEUF5mzZKsb7lusxvT+/rgVKsb2k1c2ZJrwW5
UqxvObo79tpkpzqA9S1y/ykFdc4MBKxvqWbqMyF+zQXA+hbnmqYPPs28C1jf
4tLiuumGu48A61u+VrW1P1cjBbCOZbnu90oA61imhFbNGdvBX4p1LO5/hwS0
fP5GinUsZnWdWosH1wCsY9n+1ev4+F79AOtYUqdo3Bym3QGsY/FW/+y6OScO
sI5l2aqlx1LrJ8M8pFc5dsjr1u228YD1KrHjni7JSH0lxXoVs2akxOluZcB6
lYZW3BCPZ70A61UeJE+0da36ELBeJUfmkVCnWRKMRbqUf3g+A6xLadS++bOY
rhUB61KWVB3/6vDLboD1JF7nMnpVrtLpf3Qguf+ZyadcJFKsAznEj1+sAznA
j1+sAznGj1+sAznPj1+sA1nIj1+sA/nBj1+sAzHjxy/WgZjy4xfrQKbz47c1
0oHs5scvvc+igHX8+MU6kFuR/8Yv1oHE8uMX60Ai+fGLdSDd+PGLdSDe/PjF
OpCf/PjFOhAzfvxiHYgbP36xDsSNH79YB6Lmx+9wpAMpzOo0bn9A+v/oQFrw
4xrrQBbw4xrrQM7x4xrrQHry4xrrQI7x4xrrQPL4cY11IL78uMY6EGd+XON9
xlX8uMY6kAx+XGMdSFd+XGMdSAd+XGMdyGN+XGMdSD4/rvE+43h+XGN9SCd+
XGN9yBZ+XGN9yDV+XGO9x7bg1lVeNa9jVNexGJ2v33/zkctW5iW4zTPcJxWx
W+2maKyupoM9tV8sYt9u8L6+vMpLGILi2Cv+9+5BuruQWVO+a76lw2AU307x
OGAd3RG+PaaUvkIDTnz/rkf6Oje+nSeo/WgNTGw2pHWsLB2cke4ui2//JMpP
NPCA95OP1HhRwwd+vPghPZ6t7RTRtsnpkE/pK9Twnh9HI5FOT3NYtsdxQjIs
osaXGl7y4+sAFa9UsJGPV1uouKSCgdH/4tIAlIdheF6H93kbtbtzYUxKRjTW
7bjzOD9Gup0tPJ5Yd/Sdxw3rc1L4fsf6nGC+37FO6Trf71hXc4JvD9bVzOf7
HetqtvHtxLqasn7H+p8Uvv1Y/5PJ9zvW1bzj+x3rasr6Hetqyvod62pK+H7H
uppivt+xfiaUH79YP1OH59v//hb0M2XrQayfKfMfrJ8Zy/sPrrdQti7AdQPK
t4vY8tcRIrZsHYHPa5f/PGPkeQWU/13OiF1mJA8pAyPtYYy0hyl7ntYJmLCh
vD/TugUTdg/vz/TzYiPPi408LzLyvMjI84z+edqugfLfw+jfQ9s1UP771Ube
ozbyvMrI8yojzyuNPK808rzCyPMKI89zRp7njDwvM/K8zMjzDFM+/jJiBH+m
fPxlxEj7jbyHM/K8wsjzCv3zYVScLF1H83EyFun5y+wBFE8WsVt4nqw0Mr/L
0Liuwo8jV1onpp+X0+j4qZ83PyId73j++dO0Pgq28e3BeqSy9mA9UjW+PVPn
G84jJqwrP4/U0v0t6GP3Op+5mMWmgAM1j5iwhfw8Qj8v0j//gGqnBtbz7fxB
6aw0cIh//qcXzSuG8vNL34M0r5Dz+LREvKLOkX/zy5y5hr9LpZ/Hz1HtUYEb
354CCmeVHmd8jmAb305bCgcVfC3jA2hcl837D9B+UBn+HdvTz5f1l3IBpdOD
svm9H4oPV3l/xrq143w7t9L6Riib91shPXMZzmvo+V3P67AOsx6PM9Zhqvn5
Hes53fj2YF1f2XoT6y3L2o/1bIRvD9b7la3XsP6zPt9OrHss8wes5ywbR1jP
Wb4/lD7PtxPrSL/xOON6TWXzKT63Xr6dM2LXGLGrjdhlxMj79faNuvrSZfXZ
TNjZtsWWHabGkjXLz/gZ5hWXxv6430MZQEypeyXErOWx8PpPTqSSIOqedxH7
KvHbllb+6cRZV4e/7HkFHIvLCGIsi6AJVeezdL1/cb9HpwYzoRZVd5SDKxmX
T+jqT+rutRTqT/q2fuGprT+5lKp7L4OXfWeu8DppAYXUfV4y6Fhxd72rl6fA
bV0dSKH+c9bVGk5eW1LBT1uvT7inHlZXDjq56UEu3Kfvm2PUgZsvei35Ie07
pmtfg3uQmeYjz/9x9mkPobr7QfT3IzAfrC1v5x6dALbauqAGdaFrLrk8InRT
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
h+KBJmz83V3HvE8/488vlPFGMbtcXNXq8dMXgPMhW3k7zgOk8e/B69le/Lme
pTT/hPv885NpvgoO/Psxj93O2zGPTeffM47inybs9RH+LnY30qAnZRexfry9
iFpfM2xVXl/3AemCGH7//QL1Hg348u/BeY+bvB2v32vw739EvUcBl/nnMa/+
NeHfd/Oo98sggH/+Md1+puz9mM//5N+D+XnZdzHP9+ftfSj9uQn7dEDFt6Ff
5USk+1vYV4p37dPwY2w+OU/pvU3YzsnNP44Y8ppkUvuqJuzWyRPNmvs6EXdK
T2vCbu/5/ceCncPJGkpPYsI6XHvR/vRCM0K3R8xyd83Gpn/KQ+0Rsz36DWr8
ZJocvV/M9hnFpO3MXoLeL2an3rBXHd84ihRS+hYx6zo69MSJqu3Qd0Xs+3mH
to5LTEDvEbEZGfW/LZvhjN4jYuu3uRv3dMcEZGfY+5m951eNXYvsGoi58GnX
r0rHyDNq/1EJ2zZzCysfuYT6RQltf5l0094bSOOghHonxW+PXuSA7hclDErp
+GJecCH0o+KPEnJcx+7fGS4HGjcluP9t96jG3wL0e5UwvL5Lt2FHs1E7FfB7
i+2pnDbu/Lk84ZxOQcCN9utYb9R+BVxdt+nnr+8PUPsV8P3VzL5FY5JR+xVw
tsneO1PfZaN2KiB794cvM8zlCE8FHF5Q4ub+OYvQ7eHg/Sl18MBYV1hCnRPh
wMZr/ZHn7c6gdnKwdMcTn+7+gaidHKRmz28n6RKL2sNB1cRZSVdt3iDcOHjn
UcNWey82/V0ZzP81aXPDuRvRd0v5knKaRUTvk+j9MmgeYJ3y6pob8k+Gmd/k
/IST79eidspIpSFM4LTjKxGeHLHsNDeizsPFyB8UZK5jG9PIRgsgE+kiRD/+
6SLo9mtgwM8HAVpdhCXa/03h93/p92hg56cfP+L9n6J+UcNAt5lPsl0zUL+o
Ie1Q0el3gXlQWfd3GW9UQ0NeR0F/Vw1Diju+8Rybj76rhvgVU7zvhGei9peu
Oyy3ZQ6ySUftV4G4bsKkrIty9B4VJAzffMukawHyfw7G3ZN1XvnWCWi7DE4k
Fo9rfm4oGhcyGLH/WID73bno+dIvhPvMejSrIXqeYXZKXTu27TgQ4VP672bq
pM+97PF3yZ+SVxVPpcml6LtkZ5snf+6MrYPeIyNDAyu7LFf2wn5IEj8HJx0W
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
GrmmSgr6WEK+XVx1LbLurf0S8m2fopp9JQkXJdwXlbD5vHheyEnOTr/efYZh
33j8SOek+Jg1Bu497kjbfCvk3mM8RozqVxhr4N7eMWldugVsMXDvgAVpA6b4
nJSQeydfP7LiymqHhNw7LvEXpSCil4F7x7H5uci9v/Wc+vB2dqJh39vy+cuX
A65uNfDwuJf+HP7V2DwDD68udcSNi5QN++Q5KxP3+nV9txjPQdMejO1gjT5W
jD74aMXt6K5bA6zog8f13FP+zeMUK/rgyXmXuqxboluRJ1ya+aeq8B9G2ZDL
9WRzb5EzZPY9kZ5Q0s+O+2HFQ84+75VgR5/dMymie7cddjv67GfmPIoYEuQm
oc9elun2/R3HCAk5+dXfzd37P98Yxube4vniH8lzc0udg6zo13+XHKu8G7gZ
8mZWvrk2MmTtMIcVeePdk3uvuVVF2pBnBu//evKVqVmQH7OSz+bhIlc58M9G
f+/1ih3PC2sHnwisbHKXsE+g75SQ2w1KuIR9Aqe7zXSrSFksYZ/APYd12Yor
qfB9MSk32Txc7B8I/qB2zdAbjVbkQulFPy0I/TTahr5A7l/cO9aFZ9vQF+ix
tm/Ge3kPbOi/FLE5uciRui2e1NqUGCnh+WhR7a+XH6/7SsJ+hu2t587ubS2Q
sJ/hdkVAYNpnioT81ofNyUUOXDrwwRdbe+TZ0A8KLXRP7TfrmQ39oKL9K+o7
JYXZ0Xfex+bnIu/dvTzKM2mXTcLz3R9eTCqyfHhLwr6LuTvTvDxv3ZeQD2ez
+bnIn09VjDv1dN37duRsVTdvms903GxHztafzdVFnlx12S+oa76XjP0e/jGT
5p36tKeBp/mxubrIqwPHRG5a8uSCHXmahc3bRR+tJs1/fElgiIycbU7Htv+L
oX+RmP7h/+bwYl/H8/C2ObzY1+H3x4UbX094bkN+4nlh272nwWPt2O9hjp9u
Hd8jA/afuuyon9bzdmitHfs9NngX51zQfST0g6zVC3ecHDteQj8oms3nRe63
w314Uu75exJyic7v5ccLO30NnMd2e+aesIkRhj6TQ8M7v1h262P0B3/b7011
lGevl7H/xI3Np8P+k7lsPi/2n4z/dsZH7/xthx37TwbsL81ZevA65E2TvQPn
3Hvypo+E/F/JKO7R9GyChFz02ivnamb0TYH8aPKvCW1ze5F/roqLSpFN4ein
y0drbm1c93C+oe/FsjTb6+eoVPSz5H+xeazY95LE5vNi38sXhx9lbivrJSGn
vd+QdcYvPUZCX084vjXzkucGCX2KrX3fsby8vFBCP6J1SdvcXuS0jwpHFHyQ
uc7QbxPA5sYiBz40bdPj3AUFMvbhXPFvm9uLfkpJ0qK6vInrJeTG6dvvV631
LpLQl2ypXhVmqqyT0Ndwsvmz6FemeHrtG12Xb/BZrL3f6NB04oSBP39m9vq5
z54KQ7/QX9n8X/Rlzk+acm5pdB3mWfTJNZUs7uJu6C+qyGqbC4z+y5PBPtfF
la8a+o4mvNr2f6vf1x+Loub73mvOOHsc+09MUSurD1ftN/j+7fNAsT9kV5j7
o6wOWYb+kPEJZcFhs44a+PmCN4O8tFMlBn4elFo8pDWmCj8n4jI2bxd924NX
3GdeS8Q+BFV+yOaoIuevEayND+YdwXoi7mFzUbE/YdPMt5b/vSP6Cw75hS0B
F+PDlxn8ZS82dxL7H26wOZLIRSPY/xSQiyrsXm7kou3PRy56md2bjVy0fR3k
ogfY/dXIRfnrm1zrIxfVvdvuo0Yuyn9dwfW6yEWD2D3SyEX58QhEPIIrHuSi
CrtHGrkoP84WmR9ni9weJ3LRveweaeSi/PhbZH78LTI//t/iZPEjF81l904b
fHOurmZCVzOhq9mlC7no/YHsnmrgony9zYTeZkJvM6G3mdDrJPQ6Cb1OQq+T
0Ot06UX+OYbdv438k58HJ5EHJ5EHJ5EHJ5EHB5EHB5EHB5EHB5EHB5EHhysP
yDMD2P8vkGe25wd5Jj9vDiJvDiJvDiJvDiJvmsyvtxoRjybz661K5F+V+fVW
JdZXCb2qTNRbgai3AlFvBaLeCkS9FYh6KxD1VuDXW1Uk8iPy41RF/udTFfn1
VhWJfIpEPkV+/L/Fyf38qCLx+SF0aYQujdClifzvnSby661G6NUIvRqhVyP0
aoReXQxm95Aj5+Tr1Qm9OqFXF/l1Rhf59VYn8qATedCJPOhEHnRXHpBz8vVa
FL5ei8LXa1H4ei0Kv65alPa6ipyTr9dC7IssCl+vReHrNRN6zYReM6HXTOg1
E3rNLr3IJ/m6zIQus0sXckV+/CYifhMRv4mI3+SKH7kiP06TK07kiqvZfATk
imnlzwvHvHYZz8tE/AIRv0DEL7jiR37Ij1Mg4hSUq2Pz4rs/vYTnZaVknPZ2
n1j8v1ULsd9oIfYbLa79BvLD9niQB/LXaXatg3yv/XHkePz6rxP7Lp3Yd+nE
vksn8qAT8esyvz7oxL5CJ/ZROrGP0mV+fdAIvRqhVyP0aoRejdCryfz6oBG6
NEKXJvPrg0rErxLxq0T8KhG/KvPrg0rEqcr8750q8793qryJXx8Eoj4IRH0Q
iPogEPVBIOqDQNQHgagPQim3PqjEPkEViTyL/Pqgivz6oBHraCK/Pugivz5Y
lDC2X0LfsMj3ZkNOrSqjX+bTEHNo6318vFnmP+6U+es45JjJC/solfi4Lhdy
n6/Jr3DX10T+6+pi++ui/7Kd3Q+Pfsoodo89+intz0feyF9HE/nraMTzLa7f
R/QXNrLH0Z/lr2NW2l8XfaiN3PWdru8d9snwP+cOuf1zjn4HkQcinxrxfFXc
wM+DuImbB5NCvC/E++UkHtdd78t/AYAd9fM=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnXXcFcX3x+/eVTeM3X3k3msndiJKmJjYit0BKCKKCKKAiAomFgYqdqAo
imJhoiCIYnd3t2C3v8+bz/xe3z/2mXNnZ2dnd2fOnPM58Szf85jd+tdrtVrv
tFaLVaZFrVapnJnUaj1FPKeTS6vu/KhWe170Ojp3nujHRX8reo+8Vpsuehu1
v1j1z4qeW/O1tP9B1z5Td/2qqj9Q9eupvF31B+raF1S/W+LyRR3r6lzWVqtN
EX212uyt9s2a6TVUf4/qzxS9lu51L/3q3D5qs4LKm1T/XFarLSC6k/rsqGd6
V/R00c80arWrdL/zWrXaXmp/t67dU+WLaq/Ttc60Eb2u+l1Q5Sc6Oqr+ffXx
oK59Se1XUP8b1E1voXNVWasdo/Nrqs+B6vsMvcBjVf6kvnrr/LEq31c/K4l+
T+Uyut+popdVuaiuHSX6GtHtdIwUfZD6X4r3reMT/f5LfS+q8QxUua36Wll1
W4l+Wudn61gl9Ev/m2Su49wc/d4r93vfQdcdVvndzlX/50Zuw7Xf63ii7uvf
1vXtVW6r8p1AUzdT52foWFG/N9e9v1P5puofUt2DOhbV7w11j8VV7qJ7Pqa6
aToW0+9zItNf891V/qTjANFnaTw/8h1V3qQ2P4ieT+Wf6ncfnT9B5SYa6y6i
h6rNzzr/i45Ebc7T7/6qn6Lz2xXu7xzVnVu5DfR+PKuOPjq3TeE+udfBGv/8
6uMv9T9W5Vtqs5nOba3yXeah6KPU7k3Ra+u6XdX+D9V9rnKIvu3bqt9cv7/Q
9d1U7q/yLfXzmer/1e8hlekTKvdD/3+qn9Gi++n8PaLb9N1PEX2yytMrP/tp
KvdS+T1zUucO1b0eFq1pV9tY9/6Sd67yUdVN1dFi3emdd1K5k+rHq+GGGstU
LZQzI7ejzYY694XKVzJfR/1XNa9X1u9ynFP5qo4NRB9Rmf5N4/xN1/RQ3a8q
f9axq+ijVZ6kNl+pzXCV36r8Tkdd99xb9/pPbX5Um2E690Xd325f1dd0/muV
Iyu3P1Xl5rrH7jXTv4Z7HapyUO730FfP10/n3hD9h9rOr/pC/RytfibreU9i
Tqn+G72rr3VszLvTNZ1VP15tPxG9jeiDVX6md72hzn+s8kfmsehNVS4kfrIF
PEr1B+Su31/tP9KxFf0n/uZbhO++UuF3Tj8f6eiq+g9VvqVxbsq7FX2IxrJK
WC+naZwbabyP67ssqHutXDff+0btNhH9hcpPdY/uanuIyn01hs1Uv1fi56LP
1Zhv+r0zPFrl97qmG7xX5UC12Ub0lvDbzDxpe93v67rnNPP5ObVbHT5Zml5N
9DMqD9KYVxV9s8azpso16uYvoyO3Z/2/pnbrin5F5cuJ+ff2KjfUfTuwRvT7
w8Tvcj+V74Q5ydzcLjGP2UnP9KXar103jzhI4/xJ5QEqt2Lsda+lhdtML6fx
HBKehWd6O/Hc3D3xGLuEcd7ccJ8vle7/Cx1r6fcjrJ3YzzZH72IBPU9Pldur
3/11Xb3y+ocPHKL6fmp3pI7DdO4BXXe/juW4T+I1tI3Gv2nmPair2j+ZmLd1
Tdx+ebXV6dpF+jNU9BiVexfmPVdojMP0e9+6eVqhsR6n+mEqt868Z3VX+Vzi
tbi1yqd0biW1f1JlqeNE1V+pMS+sYxg8R33P1Dg20fivVzlO1w9X+0tVPlZ6
77hSbV4M+wX7xkMaZ/u693XoB3WsWDdfg7/1SM3H4GG8o43D8/LcB9fNuw8I
a5s1vo/aJ+rsWNFtKn/S71zXH6HyRx2Z6MNV/qv2qejDOK92A9W+oe+8EPxR
9CIqd9JYD0Ie0Lvamv1e9ETReWmeOTrsEewP7KnjVcY6etXMf+A9PelL7Qfx
HdT+e933H/ZA3fcbHZHa7K+yU+G19qvafqU2fzKvVH8Ve0It8CPV765+B/Ad
6+bL8OSr1eZv5jbvp/B6/F39zIgtEzBfD9JceU303olLeFcX1e+qNj10vCj6
38j0LpHrdwv0CB27i35JbUaK3kP0h6K3UJ8fq3xV47xR76WjxrWUJuZ8jEtt
Pgh97h36TxlzbFnueb2LfURcofFupX72Fd0lMw9gj2F/6aTyIB2f831jj4l+
2Ntpz/4OP4Ovwb+gD47N32aEemjklv1Ezy/6pcptXmTC6b6H1vw+H9A4G5F5
d0PPc6fKa/SuFhJ9Ld9O9Nk6xrBf67rLdUxWv7ep7k5df6Xq71I5RnUXcLAv
6j5v6LhQv89KXHe3rrtWdWNVd4l+r6lxXMheV/h6+jlV93xbbd7ScZXadVWb
q1V2VtlRx+WiOwR6nOj1VD4Wmb5a11+v6y4TfRXrU+UVdT/DOmp3qej3C/dP
nxep/j7dd1lkVpUXa5zXqe5cjXOH3O9/e5Xb6ThQ9LYqO0d+n8iBswIvgid9
mXieHq4yKj0nB+iefXXNiWp/hMq/Cq/ro1X/iY7DVddXHbwUeDK8eWfV9YrN
n7ur3I5D93xF7XuKflnlLZogR2i8X4sZ9FS733XtZ3pvH1aWzZDRrtM1I2Pz
he8T84mjVH5eWe5C/vox8XodwL7G3BC9i+p71n0tv+ul1+xAnd9f9SfF/n1A
oOmrq8awuu53QervflHdcvNRqts2jH+Wrt9e9Nnq/36130X0Ziq3VLmVjsnw
Nd2ru9qOV9lJ59qLPjv1WmT+r817iPwtPqtZFmO9IId1V/sDYu8Ly9ZNL6Py
U7XfgnqVq8amVxF9HTKm6PG8L11zN/uM3ulG4oOfcS+Vl6S+5wM6f7TKHZkP
KjuH5+W5V6bv2OOmv27/3yd7iequ1bfqq3Jz9q/I35R3Mq1mOep11q7eyVhk
J93vfX3T+zWOG1nrzEnVH4++pPpxum602p+LzKNrz2NN69pzqNPRVP+vqs1p
dfP0l0WPEH10zboNOs6Tan8y367uPWxx1Q+HZ1Cf+9zJrIPK+9dM1U9Rv2fV
rfMcq/KYuveARcJ+ca/a7IjeKHpJvbcbNO5z2BMYv46FdN2FKles3M8zarty
5TEz/jNVnlG33nVa7t+naQxX6JoRqrtK5QS1P0X1L6v934ll9VNUfsI31rGj
fvfS751UHqk+vs4sf32qdzdI134ED9G1n4c2tN0z9VxmXxpcua/jkL9U/7zq
p6jNMfr9nur/1rXD4f2it6tZbn0fea5mWRaZljV+idqcyjvU7zENy8VvNP1d
XtExqu65A/98TG1W1/u6S/Qeldcea+78yn1/EPo/tjJd05z6VmPdVmQf9htd
+5z6XELlLcjganME665u+QnZaSv1uZfKxdRmOjqp2qXsNfo9SW2G6PxqqrsD
GU3tbtGzTFV5qZ7lQh0T4J+qe0TX3Ab/1/NM0D1vQGbW75tiryXm/EOhDW13
15jvRNZVuZqueUH19yee08ztM1S3qsZwm9rspDY9dNwueheVT+m4VvSHGtuE
xOO6T2N5Qtc+zPvRtSvpeEb0PchTqfGGe0UvjT4m+lbRM0J7rntX43xHx42M
m3mp+jtUtlP7O5Aj1H6Z1N9kouhzGpaPnte3G6Z7D9F1w1R/bWV58lGNrSV6
sNpPFX0DcpTqnxB9Qu51Mph9M7NefI7K0zLLS6OYz+F7Ie/upWsOV5tl9D7O
1RgHscb0u1Kfx4l+QOe3RN5Cnqn8LONFX6M2i2qMk1gjutct6vd80cNUt2Dq
8xeq/uZQz/m2IB8+qD53KyyjLVD5+U6oW1brrt83i95K5ZeV19O22qd2z4wR
bQGf0lzsrDbvqbxSz7Bb3brooWq7E3xZ9/2tZhrZrpOebUfRq+qex2TWgY7N
fEAj781NPJ5jVHZts3z+n/r/OrGsd4TKOXXX76vfx8Xuk/Xwh9rtXLfsx1h6
hPF8SVm3HrtIm+k/WUeJZdojVRZtbr+uxtabvYm1k7iOvtiz2evY/9jv5iSW
jfuDj8XGNdArqjbLphsUlgPmyQO55SdkkKmZ5yDfj2/DN3w3zMnTC89z5v/5
+v266s8L8tRrseWne3LXI0ctq3u9GHvOXBB0HHSdHXT9rfDDIDe9HeSocxPP
+XvUpmyz/Pyv3sM3ifkDev1XieXoPiqn5+Zz03Lzmedj83bkMvpEdhqVmGff
mlnWY+9n32f/fzPIfsgmvE/k8g3b/A67gAdqfd0Gj9G8WlBjPUL1mcr5UsuZ
yJu/Ie8hr6p9I/b+x97HHgh9NrKl+rgqtlz6p9pfI/p1tZ8amV4islxKG95l
heynY3H0ldTvFfl06diyKXIp8uk8mr05No+DvyEnMx5k5fN1v/Hsteh8uu/1
yBOV+eLNsXnjf5Xpf1X+reM60X9Vlk+hkVHhnfQPvxude2xnq5yUmycMzczL
n42tD9+p93aG6uaIL/2cuM0gcD6922fUpqXyRnS7uuX73nXTUdBr0CWQvdDV
+tYt/81sGB89rWW9rU/d6zBFRq2bP9BH79DnfPp9UN06+w+J9/2j2ZMzrwv0
0OU0jkPrxgNnsA+q/1Hq/3p0RPYylTcE+pCaddxD6tZz2+naJzXGNpUbFd6v
FxV9YuY1i/7IWmfv497I+TfGlvUH1D1XAc+RX16KzX9X01xfQ/eboHILHTuI
nq3x796yzjNQY9yjZX2gC99Rbd5FrwDnDjx/aY2hs+o3Vv1gletxiN5B5TOV
3ytyIzg2GPh80C3vixuDf7a8J21fWRZBJvlAdO+WZZGzNYb1CmOe74HRtbxn
b4s+3rLcc7ja7KM2x9e8B+3SMq8/SvV7t7yfHSt615b1t6NFLyi6g+hTRW8F
n0QuL73umAPfse5Kf5MTRcel9YZjVM5feu6MQGeszHvhzcdXlru+UrkUmAB7
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
WX/6PbKd4i70JJUvp7Y/RnX/rqFz1y3f9g6/obvlptdg/meWk0/WtYep/E3H
kpHpX8Je87Te6YLMbWx8hXWZa1UupGs30Pkrde2U2LZD7IbYv/gG3cB5dO5T
1XVJPaeZ29cUtonRHtkLmyjvbAP2R72LdjXbvrGfLqY2+6g8RUdL9O5hD/wp
8nscHMbJmJH5wWNGq5zEu9X9T9DcWzfz+7wndZ/z1y07LaFy8brXz76V1/tV
wcbKuY563md4ZngFOo36WUfXXZba9ou9Fr1lFdX/KfqO1DrpIcgm6ue7zOsR
2xt65aGq71F4r5mt6yfm1p3BHTctrDuDbXYrrF+DQW5WeP0iv2CvnpsZy+in
Ms2NwcKH8TkbqTZPFd5f0Ouuzbw/sjcOqJn31wP/x+cG+y32mg90/n0d7SL7
LsCXNkttx8GGA3bwu36Xovun3s/Y1waENcIcP0Ft+uXmLydllp/gLbxPmBa6
Y1fRfXLb+/9A5in9PtdRuX7m98m7LepeRxpq7VmNZ2GVmyeW0f7RsZOOyanL
p1UOU/l3ZIymV+RvMb3m8q9AY5+F12+ZWZcHD+6u8YyI7WMGJgtWBh6FL8MP
qTGvA/E9UfsDsD9oLo1S+1/rxqrgLfi0/ZN5z2PvY19jLwN3wg9iVMDwD8Kf
Qv3sh+zP3Ej8TnomtnVh8zpSbe6v22cygc+WXsfIpfhcXcM7L42tgdmBs5xS
2U8IvAXfTHwF59ZsO7tf509jnwFfQu4QnYANRP5+yEvs60uhi8WWUZBP3oNn
Rf7en5b2Q3wT7AcdvGZfqVl1+xzie3hoad/Al0v7CeI7yG/8E/FT5Po+pduC
//eurNfgx/gU+1Td/X5deuzT9f56l9Y38TtdWu3v4VlVNyj1XLtBZffSc/a5
wrYRbFpgNPgQ4qN4dmVMDt+hvowz9Xfvh70SOUD1x5b238NXbZTK02NjXHz7
hxrGHMGXZjVsoynU5iR0e9V3VXlabBwJHDQS/V/d8u6Hkd85cv9a7P0qz1b7
ttiYMnjyH5Wx5tVV/h5w/FUr49hg1u3B1pBJwxouY78HdA/soQ+qPEN9vlDa
HxBbP3vTWZFlI2Siw4JchJ8g/oL4+sIz2+rm7Q+Wtrej07GO2tW9rr5g7Yu+
C7lR9CLopCqPYxyiu0Zeo6zVTpF9Rc5mnqNDIQ9Hllvg2wurzSvsC/BG/d6n
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
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FeMXxufeiztzxcz8cruSLVnLVpZoo8haEsqWKEKLQkppo6i0SMs/
7Up22izJkhLtJFuWsu+77Lv/8+2Zz6fp9555l3ln7sx5z3nOc97anXud1TMf
BMHhOwTBdvr7UBoEexV0lIKgdyUI9pU8Sg3ujoJgS40g2FPnT8wFQTO1aaDy
GB2z1a+O5LEqf6o2i4pBsFbnhsVBUEvHwSq/zznV7Sa5nuT3JK+RvI/61Fbf
fXTUUbmDrnOCrneijo4q19e5Jqo7QdfcR3J1ybHkIRqjSuVEx86SB0mOVT5Z
45+vcqcwCGpo/s9q/k1VP0nnFiRB8IzkxpK/lvyF2l6tMTupfJmud5PKl6jN
AZJf0fwGqf8Wtb9a7evr3N5qX0f1B2ou9XStXVW/WfW9VH+c6g9V/Xk630Py
MZLba4x3VH9VJh+g+it0jdN0rQ90fKPy8To+Vd1FanMqz0LH3jyPnH+D99S/
t+Rj1eZA9e+iczNUdzbz1/hX6z77qPy4zv2p8rtqfy3PS+caqP0pJY/9muoT
XWuY2oxX3XLJ20veW+1v0Vz+0ViH6H4ulLy35DWSL5LcX+1vVPun1D5Q+ws1
Xs/sfi9Umwt0NOX94Z5UflL9j1a9HlNwhP57SvKxkj+T/Knm87TkRpIPlVyR
fIjkieq7va5zqK53tca4QvLNavOjymfpmkdJfl7y/bp2J405Juff6HP1Hy35
WckFtTtM/RdqvIPVdp7qj1e5rto05toaa53etwvVroXGe0fH5yov15jfq/0P
Op5T+Rq166q6WyT/pPJ2arMs599kb9UP0Dxv0nhP61xOdZfq+repfJjOfalr
9dAxjXdT7T7W9Q5XnyPVdwvPQ+du0/G0ynULfoduUv/Hcn7GVSq/ruNy1Z2t
usG6n5P0V3+CpZrTySoXdeRV30vndlD5IA7Jp2iMhzT2RB0Hq3yxjmdVfkD3
cLjqH1L/PSTP1DPZTvI16l9UebjmW1/yHRqnry5U0T0tUt+rVV9D5SGJ5/a3
xmmt+n0SX6+u2veRfJz6t1X9b2p7peTGki/Wtbqr/hR+T/29R+NdFvh5to39
veV0vrvqr9V4d6n+Ep3bUeUeanOJ+t+oa3yn8vaaYyfJgzX+qWq/WPdwjtq3
17FE5V4a526VLw38vjyv412V6+vckap/TvJmyY/k/fzzav+HyiXV/yR5msb/
T3IPtamm8jE694nKr6o+1jWHa05Pqvwf35Z+z+n6e5TkDjoaRP49CpprzPek
8jTVH6HyhTqeVrm3+s/N+Z6rqXy05qN/wWJd8yX1n6pr/qvyTmpzl+qXptZ3
6L3rdb8PSK5V8DdbjzJ6R/Ie2Ttfk/ej4HO7qbxF58apbl+136zyY7rYepUf
1jX213zu1xh3MheVz9T476vN7Wq/HzpZ5REa43aVa2q8kSpfp9/rQcm78Vxq
+P1F/z2o8Vaq/c5qU01tB/L7layfE8kVtUn5bXS9tOBvZk+Vn9B8NqCL1f+g
0Pc3XuUdVL5G83lQ8h7cn/peK/l/6AWN1UbnnuDeddRQeUzg32S1jrv51nXu
iJLXnKck7xt6LVqs6x2hukW6xoE6V1KbqGCdGancqCoItkruq3s5SdcboN9g
vq53HesJ36LGG6VySX0/0HiHan7/01jz1f49yYeV/P28GPj51pC8i+SbJf/D
3CUfKnkZ94+u1pj3a/wrJTdU+Uod43lXJf+sa83X+DM0/s5qe53mc72ucx66
VuduUDmn+gtU7qfyyeg79f+V31vy+5rPRzom657vYk0o695jrxdfaLx91b6X
2k+XfKbqCyofr/mdrfmdqXMHa4x3daxG/+f9PtyhfoepbkfJR0p+Udc/q+Df
5FD17yC5juo26JodK/4+Qskvq74ac9RxAO+ejpYqr0d/qHyqyk3Uvrmuf47G
O5fxdO4h1X+v8p4qH6n6nfX3lZxtkyN1jdt0vYtV/kbX2V/1nSQfovFeQ29I
PkrnP1L9t+qzBzpD5w9WfeeC1/Rdda453z46XeW71f44lX9kvZV8n+QWKv+c
2RvUM5/FOv5W+TTqsQ805keqv0jXf17lt1S+WNd/R39XSl6V9/fXRb9BPdZG
lZuqvr36n6v+H+rcdzr3lO63rHJDlRuq/j7Jn+laj6jNQSrvrvOfS14kuRbX
0D28p/aNdHyscmOd213lxdgIKr8c2laq0rmjJV+m6++p8psqH6PxR0reLPkL
yZ0lty55LV2rc2eofKCuWQ99wLqL/pH8peTH1GZQ7O95mNr+q2v3Uv2Z+ltf
chdd/y2VT9MYKd+fzp2ucksdFxasU9/U3Lqi31T3rtp2Uv9bNZ+PJH/PXCW3
Ufua2FI6d6bK56lPR8mfSf6R9Vb9PuHedXzG+6D5PZezDbqbypN0bo7KH+lc
TbWfof5fq7xRx06S50v+k/VCx3MqP6Y+PVWerPLRfE/6+1fObfZHN6ZeL/LZ
esX38C/rgY66qq+r+ttVP07XLGusrrr+d5Lb6/ha5XpqE6h8mdqvUN9LdFyh
U1t17i/V9Vabv1XupuNnlZvrGX+j8hW6XteK53s67x42j9q/FnstGFW0vdRL
f39X+7N1bFX5ocj2VE10tMrr1L+1yv/oOFDyVWrzk+ov4pmrvEXjzQ2sM9Ad
76v9BLV9E/2t9nupfpLKH+r8Ptgj6H+1n6hzH6h8qX6/fTRWc7VtVPF6ikPx
q8brwfuWeD3ZTm1vlRyp3aqc9dNonRsSWn8t1ZFX3SOJ3/fbQ79/rHfYd2MD
r29Hafzpea9hNdV2X517QfUzA/sPs4v+Vj7Vud0YT8cUtb9N5+6NbP9cLvl3
tbuK9w+fIOc51mCt13UbsLbmrY8WYTPk/RuiH4eo/9f0z+yduan9Eda6npJf
1/OawL0VvZ6NSPxuFDTOyIrvt5bG/y3T2Y9KbovtoDEPz+TtVG6nc0+ovDn2
s/pf0evBIZHntoOO+io/p+e/VfXn4Ruh/zSPEzSfhTp3J/aQ5tdS8sm8f6n1
EPro0oK/d/TZz2p7EjqSNURt+mBPsj7p2l9JvklyR9Vvp/LgxPbhb9iZFdtf
2Op5nftO5z6nTcFrFGtVz9C25iOq/13lb9AfBdt02HZH6hozVfel6vbTeFdq
zndKPk/1X7Gm6Jgq+VT0rcqXYqeqfxuN2UVyq9C+zmS1+YhvRffwFf5cwfrj
Q13jepW76/w3er/bhu47Te0/w0ZQ/UB8L507Bv9MY85SXTtd70v8m9DrzWyd
+0rlL9V+iNr/q3N9Ve5Rsq2KPEjX+F/i95v3vH7Fehf926Fg+531CV10s47X
mXtk36hjwfqyYdG25xL12RhZn1KHT1VfdTN0rFT9Paqvrv6vp/ZlN6ucZP4C
19pL9ceo7YTE38cOGuvwTN/z27MmsjZeG/n5nxP4fo/QUV3l89XmxJL1Mc9y
GWuO6kaFfh+5xxB/GRsxe186qf4P1T+asw2If16MPN96XBObVs94neSSzjfg
+Wj+XbHd1H+f2Gssa21fyXNVfkv1PwTWNVVq/5HkfmrfHJ9T7ffVcYfaf6z6
OhX7x/1V/2dgm2dO2b7FtyofoPpddN3N/D6s+Tr3jI72Bdss2PO3hl47+GaO
1ljP6XrNVW6pc8tVXp/a/3hc7W7QeC9IPkn1+2FP6FkfAwYhebmu+ZCeR+fQ
tt59qv9B5WNVf2rBbRqqvAx7oOA15SDsAcntCtYBh0leqvnvm/Nc+lXsz7Ok
1M4bL8Bfe5fnnX2T+BNbVO6qNlNUvldHGXtcba+ueD16JbDNh+2HPvkgsA2G
LdYs8rvDO9tE5V/0fH8J/G2V1f9s/T1L8ha+D9U3Rofoeq3Uv4nKa3W91io/
qjYt9DzmJH7e1SM//+qq76u+v+nZ1JX8s8Z7KGcfCn+W8U7Pnt/Dqrsw9O83
R22+xgdR/xsKXu/+Sewz4Tt1x+/SeJ/o7xTJ76I/sM+Klk+W/KHKd5Q9PnPt
r/aNmL/klwP7I53LtlewWwaqfnVqW3dS6PbNE6/H2A61JDdTuzMKtteaqvyL
zj+c82+C/9witn+KbjywYn2Mfj4y+z3xB5qo/k7VHyT5mMjf3pOa76vYO5Hf
7xMDzx99x+/BPXGvx2r803i/8fNqGD8Cv5sRGK+oUWU8BVxlfMU2Mbbx0Zk9
1FPnX2ItUJsfMoykc9Fjgp08UvL69Qa/qcqXoH9Ubqr2n6j8otpfp7/dWONS
z6F70Rgcc7ud751vVXP9THXdmCe6DvxL5dU6d1Jk/2DHKmOC5+l8o8BY4eN6
Prm8fZDDVX6w5PV7ncZ4WOVX1X5g0fpiun67pYnt/xZgNbrfJonxyjqZf3QZ
1+TdB//JMMnzi8aIwCrxP35Q+1skP6jyK6q/XX37Y3Po/mprjleq/If6TKzY
h8CXYE0frHvcQfW7qV5/gu31X05jDND1umo+Q9X+j8jvLu8wNt4sHY+rXCtv
+/0ezWEf9T1Z449T+w26fhd8Kr5xXf+fyGsxa3JP9d2Q+afDwRrV9sqSr4eP
gK/wutrfor6fq00jjfN2hk+NK9qf3Uif0HhIf821D89A9U+pX3td/2XVXx5a
X/bDN07sG+EjnZZ4XWV9xT7fqvKHmf99T9F4ATYNts15Oesz8OK5BdtwE4v2
e/B/VuBT6Ton4texFuvcOfjkalNb8hXqc476Hh+6fAT+iurPKhkvwwfBF1nE
96LyZB0LItvM2M6tM3seuwz77G71uY13W8f9BWPQ44u2mbCdHkDGtgnddqbG
eyyyf/8EtqWOgaq7OTae97zqLtDzylXZ38fvH8V6lb3/YOLgEfer3W0aa2ze
9ugx+k1n4b+pfI7aX653eKjkmZHxtrs1znKN1xibUGPcCC6i8W7mHcA2Vrs6
Od/D7WDDkm9S3Y06pql8emLf41X1aaBySfOriX+evV+sUeja+eo/Rf2n6lhQ
MGYIdohNg22DzQOmVz+1PY1dfRb4neY7TfJ+4AiSD9f4n6ntWnQt9jXvvfpP
UJtRJeuTTQU/g5Fq86CODyXfmzc+At7zMf6ijiVqW0fjXa+6/9RuEnhjybr6
4wwPWlTys9yU6SfwgobYA2pzdOh3jHftLtXvJPlxtXmvYPzqvqL9P3y5Nhwq
76/jIdVPUrvRFfsjf2B/8oxVnqzz81Q/X/3vV/99Nb/hKheZu9pPLLk/GPTM
op8Lz4d3nvgIuBH40SQdD+OP6fmNU3n3kvG4W/S+vKu2iyVPrtimwrbCJu+k
c09rDjXyXsPPVfklvVNDItvTe1cZjyupbVnz7RMaoxoU+n0Fu7pIfUaq/EbO
eDwYAVjBcI23ITTG2Q8cK2fs80P0X9E647GydQa6Y2pgbIyYUN/Q1yNW9BrX
U31/1XeIjbeFmk911V+jds+rvqn+fqH6i/HdJbdQ+90l76z2t/F9YAtgk6lv
N7Udp/INmuN41d1QNDZHmxtKjv/sVPB8rwdfKxrLHaVz12Nvq0+1vH2sR1S/
TNdrpja7qU01XW+F5Mah9eNazaeBnuGX6vs6doOe/3Dd0/bqe7HadAP/llwl
eajGHoH9qv5XhcZ/d1fdZI2xmvcvswfRgejCJwNjqW9rPqNU963k5mBPibF7
MHWw9WvR8aprFxoPGQCYovrz0XsZfvcfv73kyyu2v1tjT/E8S/aP2uCfSu6s
8m7qv7P6D1J5uNpfBZ6hujND4z9vs36rvAs2ksZ+A/xQcxyoMWar7euSB2v+
N6jPTpI3SR6l+mv5piS/Jfna0L/vzYljHtPU/oHAsRDiRc3BbiRfoPJm1Y8o
es3aNfWaxdp1K/MndsD3obF+Chz/+zix/rtHfW/n+9C5e1W/HddT+QeNMVL1
16n+lixeR/yQOOJNkp/WO3uA6vcvOV7RK8M7nlB9O+KDuv6GyHh8VOV43ltg
Szp3Y8X+L/EI4hLDKo55Efsi5tehZP02s2CMeyiYgsafHnjtaav2d+pvqrn+
r2B9fVbRsURiihdJfkbXbxhaX12ge10p+YyiY6S7aKxVktsUHUMtSz5d5YNU
7q7+7dX/3KJjg8QIO4KFqH1rbGudqx47BknskRjk+fgmofs2yxszID65SeVP
wTY036Xq3yiyPXK+6kZE/pYCfJKS1x/uhRhSP9bLsn2jBzTuXuo/rmx/pxzZ
Hi+UbC8NV/trVe6hdrerPFjnpqhNV7WfLnl4yfjQcl3/eI1bi/dN8++o9iNY
e9R+GPZw6N/7atYPbNnU8TridjdXjFGDVV+S+VNDio5NTFCfIcyF9UrlW0rG
Y8DIwMr4DVmf7ojcdkcd1SS/m8U/eKd5t+dgX6DPdOxSst5Gf88oOF7SsMrx
ROKK0zR+X96JwPc8EHui6NgAY9xccryFvmCIt6puk8Z/Om/92ET3ekji9Xia
2o3ReLNZAyQ/o2MO3z4xhJx9oGNVviPTP2Bf/2i+O2k+K9T2AsnHq//Bup/W
gbHTLhXHi/HlWvKNJtZR6KqauvbffPuSV0reC9wzi58eH/gbuyhyvGWt5Drg
ZNgDkp+QXAFnVfuticfupLbNWb8jx5ef0JzuxAeLjBW9LHke9kds27kB2G7F
8XnsZTDOoGQ8Bn1IzPCbDE9FPxNT2RraRu6ttqMj284DY/uiE1RXs2IfBfv5
l8x3wT/fIWefmXeWNfQVzWVByWsreEPbvHXmXxprqI41YBXql9N4N0lejT/O
vCrWeei+VPLv6r9UY85V/80ac0KGn4AV7Fcwpsd6gfwcfp/6162yPYRdVKjY
5sP266ZzW4qOfxGP3F3HjaHjDsQfXsh7PQEP3wt8IrMnb0SH4Auq7r8axjfA
E8DMwce7q/5+1Sc6/5vqz9b9LszbFtyO56/6xaqvofo/VN9b8hJ0t+S/slgT
+nT/nPFc+AV75oypglF3Vfv7VB/r/K81bE8zv1qZ/f1o5HjX25LHFG1TYFtE
+Llq/5b+3sp4eX8P08oZfp75y8RTWC87qH5AZJ2H7nijaF2IztxD8ptF61LW
eOJRxKVY++fpfhegr0Lbr+hcbJFNReviAzXHAzW3A3JeQ7BZWL/fzmwZ8ETe
DWJqn6s8IbKtslF9xkV+73n/v9Lxa2TODNyZvfExQ685fM9816xFV6nNmXz/
On6O7BM/h31csq8M3r2NK5NhethMO+n6LxZtS72o57NM9XOz9RIdWk3164vW
rdg8O0peV7QtdJbkPrrWGHyFDI8jtgXn4h3d6zLVXx/Yx8bXZs0epLp86LUc
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
          "]], Polygon3DBox[CompressedData["
1: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
HK5qVno2LxD/DyhbWF8=
          "]], 
         Polygon3DBox[{{3918, 3917, 5548, 2430, 2431, 5549}, {3928, 3927, 
          5530, 2207, 2208, 5531}, {4021, 2038, 2438, 5551, 3917, 3918}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mgXYFdXXxa8wF/HOpc7wvvMKiCgiSqqAGAgGSgtSChJiJ6iY2N3dDYgF
gqCC2N0dYABioKCAKC0h32/91/me555nr9lzJu7MOXuvvc7scPSY/qOrFQqF
kdULBX6FUCwUfkgKhe9p3aoKhVK5UOiVFQp7g/9KC4Uu4O7gFH9vcGP6b0d7
h/7b4rseO5h+R9CnMdvD6NO26PP+y7698C9nf2f87cE/gvcF7wveDN4f3A68
ALwP+HraNRx3OHZP/L/h3w/cAbwQ3Al8OHg7rnUk+EjwTuAR4D7guuDDwD3B
tcCHgg8F1wP3Bx8GrgQPBPcH5+BB4KHgpuDh4F7g2uC+4AHgKvBg8EjwruCj
wb3BdcD9wCPAu4BHgQeBG4KHgAeDG4GHgvuBK8ADwJ3A//FfDgB3BhfwHwT+
LxQKM/TMKguFP7Fb8QzfxJ5Pn8fpsx/+s8FXg2+n/420R9l/rP4jfVvQ1rDd
CTuEti9tNvuOwF6A/Y19W2jP0l5ge3Fi/1D2H1n09uyyt1/ANisay78f193C
PR9I//PA97G/E/fTl/2taevo0xX/1vi706cLeCtwV/BB4BrgbuCDwTXBPcCH
gLcB9wS34RxV8Tz746+G/2D8N9DuwjcS2yr2Wcv2AfSpTp9D8M/ETsL3KPYo
/C2wx+Afi13NIO+P3YPj/qPP47TebL+CvYL/szf+wbS9aD1pzWnL2LcLdlfa
XPBfif1vx2voWqOwv2uc4n9Oz6fo5/4Y+MrMx9yPbRnfi85zb9l99WzzovfJ
37noZ/08+MGy+z+AvYLjl+O7Ve+Z1gT/wxp72D5FX+MZ+n2FfQj7bNnPagL2
ANpU8DmaY+CnwWenvtbAeL1B8b//wr5p9Pky8XX1TA6L/qW0XuC3NG649iKd
M/Pz7BefafN4P3pusr0jnlo2fhrbudLPaiVjvIjdnvZN4v+0A+2eeJ528Tlr
TLWJ4+HazNevhd2n6Pu7m+362Pa0dxP/j73jPVfFY1cnjkOKR1uBJ3H8HOzE
+Dx3KxrvhN09/hc1+TVOzo3/V/9723jP1ya+ju7j1/is9cyPxD5V9rnuxj6S
ue8R2JPjdXX9GvH/arsedkfaquo+517xf7WIY0NzeXzZz0LvV/+lY4zX+o+a
D18nHksdih4HbeJ8XB3PvydtPXhW5ndyaeZ3MYvzXcBcOZM2BrxPpf+v3utj
iv/4piv2MGb2Aj8DPg/cAHyDxj24EX23LvoZXVP2vV+qc5Udx8bRZ3c9F/AZ
qWOLxsDz2Ha0KfjH4j8/zqXjsSvYHg5uif2bsTIRvCf3dhD7XgNfhf+kzGPn
Fuy6nJjEvl3pcxe2Lue/HXtJ2XnkOp2bPq2wVZV+h8X4HvXM9OwS2h2Z+57D
87gLfDP4rCr/v1rxP04uG9+guRnPr+uof238l2vec62O+JpwrZvKntOXlf1c
9HyuwnahvSy/chv4RZ0HfDPHz49j5gj8V4EH4r+w7Hl4qmIy7T7wMfg3B7+j
i+jfHP8D4OPwj2F7QYyZh+M/D/wk9jS264IbKeazfTV4EP1PzZz/5R+E/1xx
Afyj2Z4Xc3Fn/C/p/eJvDR4PPgXcBjxB9wbeDfwk+HTwWZlj5LE8w07Y2fgv
xn8jeAn4BOy+tBd0//jblv2uTwOP5dijFMM5dgfsbfhH4N8ZfL/yHXhH5UD9
x9T5cCF4GPb0zHNxOMd2xb6O/2r63JQ5bh+Xef7ViDFn5ziGZybOz2OxB9H/
aZ7tUeDqvMcnwSOUjyudV4+IubV7jKPKjz3itv7bluAcuzf9r+F6s/TeM8dx
xXONkz4x1yiGX832ithnFfafxLH4EO7nPez1qXlXzaKPP43/dkzZ8+IM8Cll
X+tM7Bd6/mXHSsVM5eh7Mh97m3J32TlKMeqkKueGE/HfS7sTPLrK118Z7+Fg
fG9ofnMPp7PvpLL5yQngDuATOO5U8N3srws+DnyP3i19jge3Bx+P//Ky4/ot
Godl35vywnFlc5gx4hYxvyumJXFuKj8+FOPvA9iGRcedRdHfAPxgZl/D+B4P
iMcqHiqH6h2PzzwPNR81f9fGGKo4+QjbdYq+t9vifep+9czqxGeunDkgvm+N
nQZx/IgjVPx/fucaWdH5cf+i85NyU/uIq8f8pvdejVbg+fThOrtX+hyVMRZV
j/01Ju6I70vv7bsY07/F3pf5PmtnjvH1Yh5Rfggx3/0b85/m9szM96/4r3Ha
P47V6ZGTiJuIw94IHsK7mJObs21dac57E/6h+H/NHYMq8P+Sex7WBy/KPT8r
wV+BE3AR/EVuLqd5NDc3P6wJ/jI3f0vAn+fmitXAn+bmmQXwZ7m5sebdt7l5
4zbg33LHuxy8OncM3Rm8GdwD3Aa8Mnd82Qn8T+6c1BS8JHfMagBekTu37QBe
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
NM0=
          "]], Polygon3DBox[CompressedData["
1:eJwtmmWgHUXWRR/hPuR2B+nmXl6CBncITkKCJ7i7E9yCw4e7DjoM7u42uI8g
g7trgrsFC/atld0/Oun1qrtvS9U5++yqQaP2WHd0v56eno/4p8X/Z1Q9PRuz
80XR0/PgtD09y9Q9PZvB88BL9fX0LAvvAi8FD4V34viF4P/AV3L8crTvBg+B
l6b9KNpXgd+Gb6d9OO2bwnPDS9I+TZdj4HXgsbSvwPGTwxfBF8CvdHp6+uBP
2z09l8Mn0r42PJb2u+Bd4YXhR+Cr4fc5frAPAt8EX0D7evCP8BB+72R4Rfhj
eAl4nSrXvwG+iONf4vwKHsPvXQq/Cg+AP4OvgGvu90h4bY4fA+9S5ff+C18F
d2g/Ed4Q/gB+nfMHwd+20z4t7X+DN6b9I/g12meGv2nn/XVpPwneiPYP4Tdo
nwX+rp3nm432a+A9af8eXrfK/d0IXwwfAY+E34Rvg9/r5Pv8xfk3wifQvpbP
R/ud8IHwsvCLRdrf4vg54Z85/lp4FO1zww8Uef4D4GXgF+Ab4E2qPN/t8CXw
i5w/Nfx+O7wN7XPB9xf5fsfBa9oO3wFfRX+Yrpdn5W8HsL8H7Yuz/wTt19C+
N7wU/DR8PbwXvCT8FHwdfDC8PPwyfDN8ODwCfgO+FT4MXgl+Hb4FnoX3dym8
G/wtvCftS8BPFnneqWg/CF4ZfheeFb4M3h3+Dj6I45eDX2r610nwOvAH8N3w
8jzD7vBQeBj9aybOvwDeAf6K9r9x/Lrwh/A98NudvJ9f2nmedzp537+287yz
c70Z4C/h6bjerL4v+HN4AHwk11sZfovr/ZPjX+hk/LzUTn94F14Q/rOd77VZ
lf50R5H+PaaT8TNR8/4+6OT9T9K8v+m5/3PhbeHP4VM5fwPHI3wfPJD2M+Ct
4E/hU2hfH/4Evhfeukp/ug++DB7A8afDW8KfwKfTvpHPAz8AT0f73+Gt4c/g
02jf0PEH3w/PQPt58HbwF/Ag+BJ4V/gbeEb4fHh7+Et4avhgeBX4PXgu+AZ4
X/gn3y98LbwX/AP8G7/3ILx8yRiAf4bvhYfB4+Bf4Pvg4fCP8BR8j//CZ8AH
8D3+oP1heEX4V9onpv1xeCT8G/w77Q/BK8C/OP6rvL9BZeLJcPjHiXnn3M8k
XO/VKu9rZtrfp/1X+H54mTL3Pw6+2/5WJh78nf+nYjyN42+HsT85v/8M+2uy
PxHXmwR+El4V/pPjW/D/7O/w73AbfhZeC+7H8SX8vPEZbsFL83vjuL9zuL9e
uJf2J3y/tP/B+QX8nPERnpj2SeGn4NXgv2j/qJPxO1nTX8+n/etW3uF57B/K
div7B9G+B+dfyO9tC/8EP9rE81HwOPgRz4e3gX+A/wtfDG/veIIfNz7zu5/D
/2Y7wRhP+3bGN/Yfo31Jvv9t8MHwnvzepbTvCI+Hn6D9dnhvuJfrvAzvwP8f
G+/YDuGYc2nfyvjM/r+Nf2yD2V+Y7SX2L6d9Z9p/h5+Ch3RzLyfCe/N759C+
pfkB/hftu3H9L8ynzTFLcfw/m9/ai+Mv4/id4N/gJzn+PHhr+Hv4P/Al8A7G
D/h/8HNV8smAMvFsMt7v0/AacA/X+7bK8w8pE9+2oP3MZvxtSvuW8D/gbeDN
4Dc5/ljzF8dvDr8CHwHPBG8CD+V+P4BHwdurDzj/Afgozt8ZHs/xN8HL0b4L
vAPtNzbjcQf4407i/eSNXviwk/g8aZPPNuX4U+BN4A05fnP4NHgzeGN4FHwR
vCO8Fbw493M5PBreHZ6K9ontb8TD3eDN4FPhTWnfCN4GvrCJ11vCY6pcf17u
dxt4W9ovhneifWv4oyrvawvaRzX93eddHd4V/on2e+Cly8SXHes8/36cvyPt
n9J+HTy4TDz7O+1txu+x8H60v1Mlns1RRg+8VSX+zV5GX3xYJT8tUCb+vlsl
38xZRl+MrRIf57Pfwmdw/cm4/iP2L/ZfrxJvZymjvz6okh/nLxOfP4Ovhxcu
E0+/qTI+lyqTP31+3++CZeL1l1Xez+LwTtz/51Xi7SJl8t/HVeLtQmXyyT+4
h5L7eZu/ncr+dt53K33eMXkCXND+StOnjjGmwS/Dm3tNrncz+0uw/zXX+xq+
BV6yTD54oYreGlgm/t9unILP8jfYf7KK/pyG/Xdo3xyeBr6L356J+98C7sB3
wzPD28HTww/Ds8PbV8nP/4Ln6Et+reE74Rnhs+At4G/gh7n+lnAXvgceRPvU
PHMLfrSdeLptlfz+EO2zwTPWuZ+xtNeOF9pnNJ7RPie8Gzwb/Bg8N7xqlf59
FVzBI+E/ideXw1PCK8N/wVfAU8G7w7Nz/OPwPPBG8JS+G3gGeJ5u3u//FclX
vv/34OPZji6jv2f1/mmfi+Pn7eb9H1gk/12qfuF7feXxdfTkQPYfpH1Wjt+g
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
OIftXPfS3ej/3Zv6zznl7Rs/xLnmuep4A3oEemN+c7+9Hqt6Z062mdj/up35
yb+qaEE9R+tR53SWa/S4cz2umVmryJyPa2k8x3OdQ3Wu0zmSr9qZw3XuxDUe
rtv4ZxU9P3cdL0wPTy9vvjpegp6C3tgCdbwpPSm9qcF1vAw9Db0o5zicH9Df
1392TsS1lM4XOFfiGp59G32o3hjNNodji7/Ny7EL1/HG9BT1FheBF2vFM9M7
m4Xtx3bO2arKOa0ix3gtn8W1KOYIn8k1TQcUmdN1rdM8dbxIPT+9P8e8575W
JBa4psi1hs7Zu9Zo8Tpeop6k3qRzRM4VOYfqWqmlraFa8QT1BofW8Qb19PT2
XAPhWivnmFwbsWgd71LPU+9zSB3vz/Gst/d9lb5uTXGQz17HC9Xz1Pt0TDg2
9IzVb64B2KXImgfXBrjmYYsia6jGNuNxdJk5R+fGlqzj3Zqv9HaXqhP79HT1
dpeAh7XioeqlWn8by43xxnrXzLg20HziWhrnkPdp9Klrxeat8230fPV+F4IX
aMWT1JtcsI43qcep1+kcu3PtzqG7VuzPTvqOfci5pt86mbtxDsi5oA3rxGY9
EOsX14i4dtT5dNeOuEbEtaiuAXLtyNp16ilrXOvRDep4J3ok1jv9upm7cs7H
uZ+/+L3NW5nDci7LNSGu3XPNmmtFXHPi2j/9QteimCOsNfRUzB2/dzJX5Rya
c2muAdH/tEZVv4+ok3v1rPWuzSlyVSbXrFsn1+jpWO+uU6de1jOyfl6/Tj2q
p2M955y0WkPN4fzRenW0jxrIenqtOvWqNY61jmtknGu2BrEWWbNO7WNNZG00
UTdzfc7pObe3Wp3ns4ayllq9Ti62xrLWcs7943bm6J2LH1ZHK3hP3ptrUlyr
6Bob16rMUScWGYOMRa6ZcO2Ea2ysZ+av43XrWetdu+bGtauu+XEtzsg6tZ4e
hF7EynXqW2tAa8FV69R61jDWMq6peL6dNQKutVDPrV9mDYNrCVrdeKHOeTj3
0dPN3KVzns59rlKnFtID0QtxDdkxReZ4XVtmDPLZ7y0Sm/4fO4cccw==
          "]], Polygon3DBox[CompressedData["
1:eJwt2HW4FdUWAPAjLfdS9wAHQVJKWlBBukMaEcQAERAs0Keg8lQw0KfPwiIU
lacSKjbY+nxKKd2lUgIqJVIS8n7rm/vH+r5Zv732zJyZPTN7n8rXjeozMk8q
ldom8osZ6VSqiY3p2anUVeJW+d5SqdSurFQqLUqKTzOp1At8ovYHRCH1k+Tv
iPa2Z7GZYo58pmjGXpMPFnfIi4sX7KeP/HDeVKp5Tir1HMuvbhx7VDwrL1Ca
2W6jtrVoWyaVOp+1ZQ/JHxQ3slqsHZsg/zJfKnXS/i5ivdnzbDnLsr+P+Txx
trZC2jro28h2zzieuqXqzlZ3IevFnmPLWGHWkPVgz7AlrBArx+qzW9h0ttO+
S7CyrD97jC1n57C67Cb2CtvO7tZ/GBvFXmdj5eeqaxDXnM1ku9XNFR+JQtoK
amvvnCvabmT7dnVvqvtV+6fiE1FY29naOqorYjvbdmd1Y9V9q32Te7lIfqRw
KnVUzHQvP+QfiILqC6hvp+92devV5RP5xbvqvlTzhchWlxX7VbdG3afad9nX
bjFd3edqPhNZ6gqr66Sugu2Gtv+hdrZz2aO9PLuA3cZmsV2sLKvHbmavsh3s
AtadTWRPi5vsry7rzB6XL1SX1/Vb4VzelK9wHivFNOdST10XdU/wReryqVum
7qW4t2qWixfVFVWXVteT9xA9HaMYK8l6ye/Xd7FzqcM6sX+zBSyP/ZVhddiN
7AYxWN/arD17WP6VulP6FmfnsH7sUbaC1WSt2P3sM3acVWGXsLvjurP9rBpr
zu5jH7PDrD67lD3JFrP8zqUB68qeYt+zAqwGa8nGx7PLjulblTVj97J57Ag7
jzVlY9l77ACrzlqwcewTdpRVYo3ZnWyMGOH3VmZN2F3yd9TtUzdbzBJnaUtp
a6luqPN5TftIdQNjPMjfV/OeyK8uX3bynDfg36jZ7/5UVD9ce232CfuFZdig
uAbsv2wfq8CuZ7XiWWc7WWk2MK4fe49tZkVZv/htcWz2IyvG+rMa7AP2MyvO
rmD12NdsLyvPhrG67Cv2OzuXDY2xwb5kv7FybAj72VhbxYqKVuxOtpl9Ly8g
Lmaj2Bb2g7ygaMxuZT+yJfJCogm7jf3EVsqLiJbsLjbCcVu7bqPZHHYi7mW8
j+XrnUs268uuYeep68MfYhvZNvtbIy8u2sR7iJ2vbp58h76l2DXs75zkAzFW
/xGisXt1obql6k6oq63udjVDWK34dvCn2DY2mNVkA9gT7OcYf+xd+UZ9i7DL
Wdo+K6sbGM85W8dKsipsEJvI1sfzoe8c+Vp9s9hlrBFbyA6z6jG+WEO2gP3J
qrFb4l3C5rNDrCq7OXc8X5ydPLvxDO/PJM90bXa1/Jp4v7Hr9D2fXSl/Ut+t
+jZha+V5xIXsHnYJWyfPKy5i98ZzzubKtztuSXZ1fKPiXcROsjrsDtY43mPs
NKvHxuS+/7plJ9+7+O6lPB+/uG+bbWdEJ3Xj1W1lq+XF4nvJ7man2IkYZ+J6
9gr7je2QVxS92KPsBDsev0EMZdPYaXYyxqMYzl5le9g2efl4T7KH2W62VX6u
6M4eifHCTsW4jfcDm87+YsfkjcQQ9hI7yf6K6ySGsZfZcXZU3lBcIJr6vW/w
12MMuhZnWAt2VN2ftuuLa/Wdov0IOySvJwaxyWymmCHOaPubN9f3LfmbIo/9
neXatmK/at+uvUK8//X9V04y99ktP09UiWuh7ne203Yl0VvdY+p2sk3y0qIj
G8fWs//J/3Yv67Mb2H72K6smLmdPsrXsc/kxdTXYtWwV+5AdYJXYlTnJt/az
rOS7Hd/vKmWS7/nirOQbHd/q2rnf7g1ZyVwt5mwN2Q620XYp0cH+7rO/XWyL
vIzozO5n69gX8uP2X5MNZn+wvaymuIJNZAfZ7/Iaoj97mm1g38rP6NuAjWAH
2G+suujHnmIb2XcxjuP+shvZYfaHvG58F9gk9ic7KK8TzyB7nu1je+RVRV/2
BFvNPpIfdNzKbAA7xA7E9RBXsxdYjntdKTt5nuO5HuC6DPS8VWWXySeo26Ru
OLso3nPsZbaXtWL75eVEN/Yca8Z+kmfFmGIPsRbsF3mOaM8ez0nmG9OykjlJ
zE0KO25zdT+z7BjL6iaoa8n2ycuKruxZ1pT9KC8smrEHc5J5zltZyXwr5l0Z
+1vJ3mZ75GXU9VbXLp18d5dlkrEeY753zL/jW6z2VnULWU9WlDVnI9l81osV
Yy3YKLYgJ5kj5WQnc/GYk2+x3z7qSsTzI79N3SJ1rdlpeS1xFXuNtU8nz9ly
fd6WzxGXsVIx31R3h7ofWA9WhDVjt7DvWJt08twuySTvgHgXDEsn8+aYP18b
c2H5+FirsLfk74u58kuc80227xFn+X6dibGRk/Sdy+bFtYi5i7jB9j+zk+9c
fO/G6L8z5h6xFhCTYy2jbpLt2TGvVTeaPRD3Ld7zMReLNYe8uboptqeKQ9qK
sAnpZK4Vc66RMTeUX6xuiO2hcc7aDuZem7hGebXlievt/h5zfw/r10AMVjdV
+7viHZFPXd5YJ6kbZJ/Pa78uxnesL+T9xSPxjY1nkI2Ut00n79GlmWSOFnO1
pvYzKtYfYoX67FiTpJN5UMyH+sa8XN5XlI61iP6jtS3Rt1/Mg2Pdwe5ky9jV
rALrzsaztfGtZbPkP9hfQdaTVWaz41xYIdaLVYy1I1vMCrAerDx7g81n+Vi3
mB+wqex7dtxasg0rzV5mq9hJ1p6Vi3lnjFmW0rcLq8BmsIUsP+secxA2hS1i
x/RtHe8NNpktiDUTa8Wuj3Wi3zacT9P3d5Zx/WqwYWwq+zHOhVWP+8umsM2s
FKvGhrDJbEtOsq5tk53Mp2Nefcx9KeUYL8a4d9y/HLetuhJsEvsuvgGsJXuG
PRxzFbEmvjPyjHhF3Rp1p9R1UFeW/YdtYmdYZ1aGvcrWsdOsI+uYTsbTykwy
L4/5eYHcufkqtlqsEd3VtfMMvB1zcDXfiAGxLlZ3qX3e61xWsStjHLGu7D62
mnVIJ2N7RSYZwzGWr2LlWTd149StYZfHb4m1OhvDlrKvxVfxrnVOM7R1Me47
pZO169pMsl6em/u+r5idu54TW7Wdo2667Q1+799+byd1XdLJ/wHrM8kaOtbS
l6aTdfSGTLKWjTXtcs/g67EffUs4l66sazpZ427MJGvjWCN3Tidr9XWZ5P+G
+N+hWzpZM2/KJOf+de4850juvCLmF/O1Xaxuue1TjlHXMUar+z/BQFdn
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
N7Gv34PWSn4S7VL59yXrpQeZ40/m+or+kcgC1/0PuBdt85Lt9duM+YNjc+kb
gdw999yjuO4G2XTpR9lTxv9D/6cc/ydxPNCN9nfieKBrYj0/mLFHKkbh/Dvo
+wN9eWJiLB/i98z+/aPIpGQbIV99D/Dt9Fcj12b2F/siW/D7VnAV8s/EMdFN
iX2cOxO/098y++69kBsS++5daJuVbHMHMn9VbfvevzLmcFpn+hvJn+XY5+Bb
ud9aJdtNxQI/cP5Q+X60Nfw+N36jnRhzjmwz+CrkFVpjtJ2Ye3vateB/OVZf
70b+GH0Nadfw+0zOfRnZTLFL9J/bIBvHc6+Tr0O7iFYv8Xo7E7mf7Kq+Dfha
1tne4NPB+yDr8a6X0veevktuH1zX1XUupTWn7VIy/ov+DiXbql2RO9MuAf+Z
23apX793YM7FzDlWepj7qhPvv2nJ97aO/paZ95H2Uxt+fwu+o+z1+1zid3RQ
5j2ovSg/dxjtfFqjkt/rvsgmJffNkj+FHE67ULaB/meRDZCLEvu+8nsbl3x8
rfRq4jFn01byu3Pi9bk/113N/RykWIbxnbSntMZ4jkbxPe9Y8nl7l7zGn0k8
Tuv87sT6/4Fo0/VOLot+rPzkC+WD0vcQY84HbwF+EHwFuCgfqWyd0Y/xPxC7
jZDuAa8ED5WuAn8Hfh78IHgZeJj0mfws8GrmWcY8J8svzR2LV8v+S6eCC8gT
pe/APWRTcu+tRO+E9gL4T/bd+9K74E1Svx/pvF1lh3PvO+3N2xLHy1r38vW0
B+X7/VT0PIq7O0kP0ncf1+oMrqW9Cd6PuRLmvB/8amY9dAqyyJgPdG7ZPrz0
1cnIatp24M7cz1mM2QTchzFngjcF3ws+TzYM/EDZNuop7e8acx5DwGvBl8mu
MOZhxlwq+w1+pGy79yRjfmVM29xxXDf6LwBvyZh+4MvlK0j/gI+WrmdM97L3
uGzFnjzTCeDf6O9J/0myheBe4L9S39vJyEG07oqluNaD4OvAk8E9weeDJ9XY
Np4Hnlhju3Qt+EPwE+A7wfPBQ8C9wF+Dn5ZvCF5cYzt8I3hajW3vTeAZNbbJ
N4A/Aw8AdwXPAw8EdwN/WWO/41zwBPAtifkN6UH5y9Kl8n1nMGYmfQ1S+xTn
KL6psQ28ADwFvDvvYoPuiWe/MdoY2RfxHEck5l8Uo0sft9Y+511t4PjdjO8g
ewa+B3yq7BC4d9k2/ErwWOb/mjU2oMqxsHyHa2Qr6X+36DHyk+XXSFePqbFN
vlA2qMY2/yLw1Br7AheDp9fYJzobPK7GNv9q8Pga2/mrwO+BHwffAZ4LXpVb
D0gfLExtc3eXn5o6xtxSvmPqOLoW8pfUz3Uk8m35g+Cq1LGYbNzx8mNSx55b
IEfL39TeVF/qOHRz5M+p39URyOWp19vByBFl665Dua8XU8cd67jPH1Ovw0N0
j6nX7f7yceXzgjeTDcjsU5yme6DdBT4V+VRm+3xC5rhb3/IIxZ1l81STeN8F
nr8Z/T247vrEfNGVtBfK5rhmMmZjbrt0k3wG2g7gG7WPS7YzvcBf0K7Q92J8
78x2uC3yVfmk9G/kWV4Bvwj+C/y6nhn8D/il1PHvenDXzOvqSPEDqWPMP+h/
TX4r+G/wP6n1cHvkQ7Se9C+kvw/4dvDn4CdTx4M/gguZdUUH+jbJrAdO1zVT
x3prGPNhat1VlD7O4n5Bjk3N+20lXz913FQPWZX7+w5XvJma56xBTkgdu22t
+VLHF9sgJ6aOX7bVusrsi7XPzLf0BLdDNs+9N19izp3An4FvAD+TOvZcLduR
2f86CTk1ddxXV/eVOu6rn9o2fhvtYw/G3Yw8SnF8aj+8gvw9tW4/FvlRjAUU
E6xNrZOPkb+cWn+201iO5eAzdDyzvesIfky+M3Mu5d42praJpyDXpbYXxyH7
0/oy5hvGfJza/w/Iyanj3+1S8zPy605ETkod55Z0b6nj5bLOS/1O6sg+pOaj
VjDnc6lj/J9r7EfIn6ib+LmPTOwTz2Jd9qkyzyzf8tXEnLB4JPnS/8+j8fu1
xDyzOHb5zKMZ/zzyLVqWmL99K/owfeO15JfIZxxF+7fKXIrmF1cyIPGc4m06
RX/jmyp/H32nn6tsP3UP4rLElcnHFuclLkg+tvyPrhGLD+oWx4jDUowwKvoz
WlO6546J9YFiDflO8snkm/3CPDdlfo6pyOsyX1+c4z9F78dOrLdbM/MZC+Ne
HBH1/M2Z9/5M5KrE70VzXZ85RpiAXB7fhd6DfDndw8TcvI38c/E5XSIW97Kv
YtoqcwU3Zo6JpiAvSMxZ6Xo3ZJ5vUmafUf5kITFnIx5HvM1rZXOKx1XM1YnP
F//+Vtlc5vH0/8UzDqevY9mcqHxL8aJXZf7+4g83FK2jzlC8ljtvcjZ4Y9F6
7Myy+Up9H3GGl2eORcQrittT/kK2TdzhwPjtxJ/KTxNfVyu37TivbO5P60Lc
2qa59fk59F+ZORYT/ynOb0BcP+LU5L+JrxNfrBhTHLH4OK01cYDi/uTTiUOT
3X80+R+/Jil+8l/aH3r2zByh+HntDXGU8hfEnYm71HsVvyauWe9JnG/TGBc8
FG2GbMdY7rkd33oOx4/mPTepdm7gQa1p+r/SdcQhVduvln/9d9H6/CzOvTgx
/6+55Iv2j3unVrX3l/aZ4i3lNQ6M371LXD/jU/NjtZG3ZJ5jPnK9+AjwJfL7
+F0Gd5K9zb3GxIWKbytpj9DfMPpF4qbEESnGasM9V0c73iKzjVZMdhj9ebQX
4tvFjSXSXfRdn5v/H1Q2N7acMfuk5oeq6D8BvJr2I/37IltnfjbFg/Kpq7XH
6T8k83s5NLPfrlh6EfKM+FyKm47PvQ8Uk8pe78zYQyrOhykvtmvcj8o3Ke4S
/7ee/jbIIsea0He5/LLcur1/2X7fH4w5DNkncfyrvS1uZiOybWreax24dWo9
JtshW6P4SbGY1qU4xVXIA1P7G0243sGRs1xJf0vkdbnzKQPL5il/p79V6ryg
8oPKVVybm1t+gjEtK/6Wj4OvyR1TDAD/lDv/uWdubmYhuFlqDvIL8E6pOcWv
wc1T847SOXsib82dDxLPJq5xmdYA8rbcOSPxcmtS+7GHp+Yy54IbIX9NbG9k
a7pklp/LTlb7vUi3Kje1ALlz6nj9S3BT5IE8Sz3GPlN2zD2P/sap+aT54CbI
tOJYrjNjWuXW34pn5d+JHxCPc2fuXJg4xhWRwxGXo7ziOHCG7Jo7LyZesUvu
fNaT8gFz57AGg2/JncN6Cvxj7lxuGdktd95NvGXTitfunVF/9o72RdztD4zf
W8+X2A7JBtXn+fbVu6H/88R2TjZOPOIifV/kHbnXobjQ5ZErE2fWIfN6Gq89
ynXnMvZGxjwY7AuKn38g2L8UJ9832F9Ufmph0XH308zzeLBfLn3+WLBfrpzF
kGCfT3r4vmAfVLmD+4P9VOUaHg72s5WzvjfYL1fO4pHg2EB5gUeD4wHlbvoF
+7XKNTwd7McoT/RMsB+jPNRTwb6gcnO9g327o8H3BPsxx4LnFc0PPCUfsOh4
U9zmF0VzCIPBzwb7T8pzDQ72O2WnBgb7o7Lj/YNjD9m7J4P9UdmXRUXrh2eY
Z0BwzCO79kSwvyudPLdoXuJJxswvmtMYonVVdLwpvveTouNZ8asbcvMl4pa2
q/be0H5Qbve3qJO1Brap9joQ56R+ndOec35JzEctyP63n8SJ/ZyYezqrZHvU
L3JcvyfmtmRf1ibmuFZlHq89ODf6KvJZJhYdU4vXfSc416t88QdFx9TifrVu
t6322q2uXSgchNwUmdS2zSnUdg5H+Xbxh1OKjsHFIY8tOsYUDz+u6NhT/Lzs
ZPPIoYnnaxE5qI+LjkPFaSsGUywmTnt80XyCePX3i+YNlEd4r+gYWfz/h0Vz
AuK9l0Q/Tf7a9KL5BPH2itkUu4m3fy845hQfMj7Yvxd39EpwjkN5qNeC8yni
5F8NzqcoJzUimMNXvmlocPyg+odZwTlvcSnXxme7GjknONcuOzI7ONcuTmxm
cB5dXM2M4Ny5OJzXg3Mrygu8HJw7UF7pxeB45oqoZ5TDlq55NzgGVk5NOW/5
bG+DRwbnd5S3ejs476P8l2okVDPRiXFjg2Np8epjgmNv8ZYvBMdRyq8ND47x
lHd7KZgrUb7p/eD4X3zRG8G6SHHZtOB8v/ilL4LrD2SP5gfXH8gHmBdcuyAb
d17Jvs+pyN2ij9QicdxdiT5Vt+CY9jDGdw2OaVuDuwfHWoeX7VfpXHG+PYLj
qyPovzs4pj2m7OO7xfoM8TbNInfTKzg2PooxdwXHUW3BzwXHZsqtzyiaj1I+
aFhw3KUank+C40BxgBOCY0hxZR8Fx+TifKYG10mIF50bXKsh2z09uK5C3OmH
wbGieKHm0Z/UfvsgOG4U56Z3oX5xER8Hx+3iCT8LzjeLJ5wcHNuLS5wUHK+K
g5oSHKOKtxwVnJdUbvT0kvdLz9z+6prEnLZy5cqhH0jfgqL5BL2TJeB7q6yf
lxYdw0o/Ly465tV7/hLco8rvUzVF8rn+Ca7hEW8mv+e3YK6wTdk1QopJ5atN
5dzrq/ytfwzmEFvpuYrmUvTdZxfNaej7zhFvW+U18FcwF3kk+MyKaykOL7lO
SDHR/spFVxzbi0/uWDGvoWfcNeYCOiLPqliPnKH8Rm5/WHnMc3P7zMr5Dk6d
r1+OX9Yr9T1/DN6q4lou+aVX0xonzl93zM3/K5fXL/X7+Uo8TG6fZIQ42qJ9
vBfA3xXN9w4Tt5Tbv1LesF5uv0h52J1z+3XK4e6Y249S/rdBbn9J+d9dc/sV
ykHvltvfUy5YuV7l75QL3r/i/MSvwrn9FuU79svt+ylPfUBuv115vZa5fXXl
WRrl9uWUC1bOpRXzfMl3ODi3T6uc4HG58yPKp4fc/qfyoUfl9quVK/+laD5f
udrvi+a3nwf/WjRvr/zskbl9deXEj8jtbysPfnhuP1l581NyxxTK77fLHYMo
H90+dxyhXP+xuf121QmIWxTHqNz6Ibn9c+VzV2e2p4r3vy2aSx+a2w9UPY5q
CJVD2zLWsP3CuMsYM6fGPMdfMV5bSf9PibkFxffKySnmnB7jesX39WJ9l/iE
ZrF27vIq106IGzlO6zOO0TX+W+smu6sch2qUVGO4JjMnPbvGNSWKBXXNX3Jz
BMovqb5rdWK+YnLkKMRVKM8iTkQ5vVK1YyTxC7MjNyKORH69zhW381PmvIz4
B3Eby2M8NTGzjy8e5ffcY5WnKlebH9Fcn0buQhzGz7nPUx5M+e0fE3MdDeJ7
EK9eL9Z2Hq39WDLXc2jJ+TDxRSeUHBMrNpafJC5qs2pfK421hcqni3PamETe
qeT4XVyWdOD6uPfF38puN4sc0qbVvlfVXMlXO6zkGjP5Rm1L5oHlcymv2Lnk
Zxe3o1hbPpryhKolHRzPVVymehjVv4nfUt5aNls8lvLH4kYUy6v+RvG8+ArV
/Yh7FQ+gOiTlpZTLE391knJ3JXNhBymPGeshZd93iFxe25g7U02W6lhVLyou
qGXJnJly2OJutGbEjahWSJyEuAnZBtV4iQ9RLVd1zE2rduKt4NoS1cwobpOu
u0x+fOQBTynZj53HsWMqrk16N173dOXeMvMkC4PrIxVnLQ6OkRQDao+slM7M
XJ82I373BcH1nYrRNMc6+hcjX6PNB7+euYZQOVHFSsrHqRZONXHimReCf0SO
C45jFbspL6B6P9UAik9WDZvq4FTLp5zr6LhflAv/OHP+QO9cOf4XaHPAwzPX
yz2NPIrnOyPz2lNN4/PB9UOqa1WtlOpou2WuQ9PzdVCdQHA9jWI65d+Vr3q9
7Ho51enek5l/11pQPcDRmceoX3VuqvHth/w0OL+oXKRqKsRZqG5EPI84ROn5
a1LXgopLUb2mYl7p7na6j8w+5Pmpaz4PzqxbVIv7c+YavE/jehsUzDcpHled
2yf0D5B9rfi9qMZDuZil9K/InIO5K75P5TPEpaoOQfWBqltQ/YLqOZWHVs2F
dIXy5aoPlY6VzlX9gu5RtRyq6VBNr3LZtWq7xlv1G7L7qqNT7YRqKBSLKf6S
n/l5MNcjzkRcqDgD1YAoX6s4TLUfyj30jGtpdHA+THURqscVL6c1rVyFYiPV
k6i2U3We6zPXBKquQ/UdqmlUvd+6zLkf7WnVZkhPqj5AdS7SsfK7/pa/UjHP
pfpe1QTLNxZXqPyR9p9qKpU/7h7Xm+qYVIuomsQjKubOVM+sWmLFfYr/pkUb
JFt0SsX7RDUtyitpP36TOXcivap6HdUky/bJBio3phyZvrviUMWV/2TOSSg3
obWumkLlVKQ3VFctP1U86sTgPLFypqq97hf3qWo/xLXKv1Kts3SFeNKvguuw
xcP8HZwDVjz+b3AdpPaC4qrGMbaqFb+7YtJCxfUEstGyG/WjDW0UxyvG7Bns
t8k/lC3dNeZrhetG27ppxbUI8j3+DM5Pi3OoVXHtgnwzja8X67FVn7w06uEW
sXblYH7fGezntYlxR5MY12gP7RLPXR+cfxV3ofph6SXZes2xU5yncazT0PP+
EZznFv+wMThfLj6nD3h46rosxQdNY+ygunfV2yhOl03YOdbHV8f7l7+xScX1
FvIzVV+9ONpT7bMG0f5qjh1jzL5V7JfPc1xmW6D6pYeC/1Oh/2KI5xPfJw5U
9YPfJc6D3BHsK8ufl2+wKtoI1UdJZ5xU8XUaxhinTryu8F65c0SqI9Wz6n8T
v+PnHJu5bkN6b0Nw7l+cjHIfynGp/ku1VRqj2r+OmfWhdLh8Fvk60tGHVlwv
rtylcsaKrVXr1briGiPlH2sqrjuRr96q4tpN1XUoj3hz1Of/B3MpN1k=
          "]], Polygon3DBox[CompressedData["
1:eJwtm3ncTdUbxa/hXtE9R7z7Ht5mpaQUzfNcFKJQSkUDzWmefjQpQ0lCokyN
SKVChZKQJKFZNCqRIfNUod/6WvuP/Xn3unuf4Z579vOstZ791rnqlladK+Zy
uXsr5XKV9XdGWS53TT6X65nkcn/VzuUuTXO5ToVcbq3at+r/qPFHNT5C49s1
vi7kcis1NldjR5bncrM0frPGH9f4Go2/nOVy9TXeWfh3sObN0PgOfbZM/dFq
Xwo/JPyq+vN1/F3CAzR/s+aX6fxfCM8XflX4bM05Q3Mnqd2v/kzNv0njj2l8
tcanC3cS7iG8Srix5jTW3A/UHlb/erXn1P9S7UX1z1I7Tf2Jal3Un6bjO+r4
7jp+pY7/SPhq4UeFVwj/IdxXeKRwJX3f53XMdOEHdPwL6l+n+91X/SLfRfM7
Ce8hvKvwPOEbhOsIJ8JfCF8tXC5cVfhz4Sk6/xU8D51/mfCHwlcKPyz8p3BH
zd9d86tp/lzh2/X3JZ6l2ifq36jx/dRPea4av0l4f+Hqwl8JXyZcU7iC8Czh
dsI1hHPCnwi3Fd5VeIeuN5PnXcrlvhceq/EL9H2P1PgS3c+PGn9P4+dq/AeN
j9N4K41fpfHawrsIz9H4lcK1hKsIfyZ8vvAmHb9FxzfQ/AX6fg8KPyv8j8a/
E35AeLDw38J/cT0dP03HH6L5g4W7a/yXot+PF/R+HajxGzX/13j/2zT+n3Aj
zV8rvFzjs3X8EcK/6fxPaPwljeeE12v8ao2fpPFjhavq+zzK+yXcRrid/nYU
Xs07o3734Pf7fV1/ia7XVPgv4Q06X33N/1bnv194kPBWjX8j3FX4GeEtPH+d
P1dF96Rztdb8zvo7Quf+Se1d9ZvQ1P9Qrbv6P+j4R3T8cB2/jeet660SXi98
kI5/nd+V76v5f/Iu6/xfqz9S/fM1foLmr9D475o/UcfP0/nuFO4vvEl4tfCr
wm8I9xF+XvOfFl5V9PoeITxAeGXR128pXEnn36T5H8Xfs7LwZuFp8f7+1fx1
wh8Kb9T53xSeINxPeI3wGOGxwk8KbxJ+S/gd4f7Cd+i+X9b5Vqh9Rl/nG8b3
1fUr6Pss0/znhUdr/mOav1R4hPAo4V48bx2zl46trGf8F2tKLRWuJLxK/fN0
vorCGzV/qua/JDyU+y36fVil840Wfl3jT2h8i/BLwofq2F01vln4beF3NT5A
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
PYh9tc0XSsI1WMvljm+HCD+htlD9W4P5ZeC91fz/CR8pvCdrCT4azC9Lwt8J
dxU+Wngf4V+Ez9Tv/53w1pgP4Z+BWCU8u7bXLGsXDkn8ypfMR/qwNsodN4gf
5CT8mo3BehpdfZHGzxJeht7U9ztA+GzhP4X/Ej5QeE5qLXiV2iWp4x25eLvw
Uu5Rz+tZ4ec1v7vu50J9dpnGFsf1Bf9Dn03ReLHcnAXu8jkxU/0ZqdcDMZxY
/lrqd7lGFX/nX9Q2x/XdXv33Mz9fckfbmG9Ze3hSeFPjU6+Nmvrs79T3/1jB
OYPcMSu1V3Ol2sXx+miBDmptOX/q2EAOIZcQs4nd84hhxKKS89vKuH5P0vP6
Cf2o71en3J4a3tqDMb5fVPL9/xzv9wI+Kzgmsl5Xq+V1rT7CP6l/OdcsOKeC
z1e7sOCYhz/HM+fZ3x/j4WVq1xacU3nfvtJ6rI+WUFuT+pnx7OpU8fomX5MP
uSbXJqeT2zfGfAenhdvemzffO6Fk/rkkvk9rU58bzw7vDs4L94XzwT/hdfA7
OB+/L5wH7gMnJT+1IY7p2F8K9nhacV6urfa2+q15rur/GOPb5SXHa+L2heXm
nEck5kRw0TYlPzuewT/BMfq3ojkOsXuh8KmpPcG7gzU1WhxNjtZ+UZ811Vgv
OHqZ3+HFRedQ3m08m/qJNRFeDpoEbYLGOSBYMx+T2ONBS+/02BJrYLw3NPCZ
iTU22piYdHliT45YhUaqnljDop3QXFyDc6PF0AQ/Fp3D0Qpogp+K9qTQCngw
y4vWEHgzeAR4KXAUuAoc79uiPTC4HxxgdtGaHm7QUNfoVnBOIDfgEW0u2uPB
O8Jj2Vq0xsd7gVN8UzQHhWvAqWcW7dHCtZ8L9s/uE/6yzB7O6qJjBN4OntPa
oj0OvCg8rzVF51i8sNE6/jwdPwjOW2ZPY0XRmgivA48BLwyOBdeCA08q2oOG
G78uXCuxRt4rmPPOKloDwIXh3D8UzYnh4jM0Z13enkAdvUtHq71TMB+tq/4Z
kYOuhtMp9uxb8vs7Xu0I9Sfq+N/y9iT2ET5SbULBfHc/9edoPFcwH96/ZI7C
eiQmEBvwyOcW7QninX8RrDV7qRVL5gt4OZzzKPWTkr007vEY9Z8M5ip3qlUU
PqTkfABnaKf+lxqvXjCfP7Dk+L8qfr8DStY4tySOqWgfPJSKiT0mvBU8noMT
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
413zTHm2eLbsFcITxcv9Kjj2kxPIDV0y5y5yGNrzvsy5jpyH9rw/cy4gJ6A1
uwr/nremRFteAUdkLeqax5RbI6IV9y5Yj1Av4F1tEH9f9DK1KzRLhbg+ePZw
3pWa36Tk78oeH36vezNzazg4XPyMkn9rapY8f/QOWhSOB9erF38PNPiWGA+p
bcBh4dM3ZebScHC4+I2ZuT8cG659Q2ZuiSZAG8yL369F9KNvzex1oGHRsnOD
c9t50W9vLbwVrircEP89s1eFZkW7onHhPwcU7KXfllkLoxl2aoeScwGcHb7d
ObN2QBOjje/IzP2p2VO7vz6zlwUnhhvfLDwzb82B9rg9sxZBM6AdbsmsrfFs
8G7uzqyN0Exop7sye21oJrTTPZm1FBoHrfNBcO6EM8AdasV4QQxDX+Ank3vI
QXivx5es9c6I8Z+YRmwj5hP7qe9T68bDYi/YhBC5U2Lu1KxkLU0Mxe95MHUt
jj2O7HVkPwC1eDzFc1PnJ+pbO+tc5a4HU6uDz8HryA9oVXIQuejVzNqOHEmu
bBbsPcEZ4A5HpNZmX8Y55BvWKjmYXNw3de2XmAXvpk6HdiG/7syzqWM/94/X
+l5mrQHngftMzOw9wQHhgvjh7LXB48HbP69k7wEPDC+sZcneA+P4Z2+mzj3k
HLzd8Zm5ADGR2DgqNZeAU+BtT8j8XYgpxBbW0zdxHO4xNfVeivbxHufr+xYL
5jhwnYuFt+fNseBakzLHfjgZ3OzzYG4HZ4O7vZt5LRNjibXE/EXxfsmVrPeF
EZNL30u9N5Dvi3c9OrNWhuPAdfpm3i/UOvF+0MnB3jScF+7bNrO2QmOhLS/K
rPXxVPFWJwVzY+IZXPfCzN4rngDeQIvM2g6Nh/d5ZWatiuZF+16RWSujYdGy
7TN7d2hQtCh6By7RKuanSzJrVzQx2vhi4VF5a1q07XmZvWQ8V7xX+DXcoGXM
z1dn9jrQ5Gjzq4TfzdsDwQvpkFn7ouHR8s0ze3941HjVbTJ7fXjMeM3nZvba
8ezx7l8P1jLEe7TOW8FcH02BtngjWGugedA+bwsvylsToA3eCeZyaB60z/hg
rYPGQeuMC9Y65Be0UrvM3gAeBV7F2GCtg6ZB2zyX2ZuCQ8OlL8jsVeNh42W3
yqy10dx4728Gax80E9qppcYH5+2B44V/jUYrWPOgfQZnzpV4Ynhj52f2yvHE
8cbfD9ZC1DyofVya2UvBE8IbygXvz/pQ44nG+2feT9w28f7mxzLvt2yaeL9x
L+EKxKbE+40fFl6ft+eI99gts/eIJ4k32U94N9Ze4v3U6G20d8fI5wZk3s98
ceL9zk9n3l91SeL9zk9m3r/XKvH+6j6ZayMXJN6f/FBmLYOmwVt9KrN2YX2z
X/vxzPtdmyXerzUws3aEL7A/q3dmLcb6ph76SGath+bDi702i15PYm+oZ2at
hGZif/VpmbkzHJpaAp4R3tFnGk+JR5lrB9RMqJ28Fsc5H17FOcSbvGtG1I6a
ZvZC8ESoNQ3KXOuBE8GNLsvspeCp4N01zlyLoMZDredM9j/mXWOh1tI9c+3o
rMT7H3tk3p95duL9iU0yewt4DNSGrsmi15TY6+qYRe8ssdd2VmbvAg+D2lCn
LHpvib2qUZm9NHIF2qxn6r1dcG58o0apvc3pMQYOz+zF4gHjBZODDkqtgchN
6JUDU9coqFWwx5u93uhR9uZTn0A7UyO5JOrj41LHdHIfNbuGBXvCeMNDMtfy
8Hzxfp8J9o74/ngt5IATUucIcgOcp2VizgQXmh3zBZoebc8aYC2wRtiLPyjY
m8GTwpuCQ16WeM3CLXsG7yedWvR+gnq8I4k5VmO4LN8/cUyqK7yP8NHCy8lR
wf/DMDvWo6iXzVG7Tf0nNWcD73tw7YM5O+fW9rtNDsMvOUHnuzvxngf4Gmui
WfQj2NvYP9iLwlPCWzpe86+P/K6zxh4Lvt6Mov+fYbnaJ0V/NrXM97Co6D3Q
3Bt7EG5IvKeCvQm8g7yLvIPszeUdPDv6D+ydvTaYa3eKfJc1z9onR/K/FtcE
axf2/G9Qf1hmbx1PH2+fGEOsIYbxvxxPB3tpeIB4gb2C989OK/r/M4gxxBpi
Av9rQUwhthBz+F8IYhKxiZjE/2YQE4mNxCz+FwTOdVRqjQ4XIyY0jn4P/km/
YG+O9YL3x/+cbCx6zzb/i8IeKDgWawa/mD3cFRLHZPZ2E0PgxnBkYgv+aoPU
/jJ7ewcEe5t4iHiJA4OfPR4iXiJ70JcVvUedvelwjNbR3+F/UYj5aeKYRC4Y
mrkWQs2C2gV+8cGp9xCz95aYSmwtxvVHTiA3EGP535QewfuXpxS9/wXNh/Z7
LLV3TP2fWuN1ee8veDh47xB7EKkf7txDE+ux7K35MNjLIr7jXcGX8Uaov7B/
bUrw2sADwws7Pubz3xKvncZxfHXitUY8wnuB87LflHoL3BaPBK/k0+Dfjt8Q
b4wcQa5AY+LvfhLszeER4hVSr0BbU+Ol9sOaYq3snXqtfRMxGgmv+KPIx/Hk
8OY6x3xeM/Va6xT56YmpYx0xgljBM2Uv0tRgLw+Pb+d+kdp+l4kp/O8Rz5xn
v/N/XMrM5/GW2GPFfk7WLGuXNcD/Jj0a4rMu2gsixvJs8YiIvbOi/sOTxJtk
DxV73dlzxN6qJ4K9ZmrQ1KLZHwP/Z88z/8/0euZYTY2VWit8HL3AM2N/M/vH
2FvSUK2gfp9gbwoPGy/7jcz7xagxU2s+JXUt8JD4We/g2jc1X2q/5AZiw57x
mvBvakloJP4/hxh1lfrdEscu9ozxv21cg71kkzV+SsF76vDDZgZ7wXjWeNfs
OWMvP3vU2Iv2cbCXDV/AK/4/qwcEZg==
          "]], Polygon3DBox[CompressedData["
1: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
JTER+4O4/wMVV3Kk
          "]], Polygon3DBox[{{5166, 5165, 5801, 3635, 3636, 5802}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
         "Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLlFEYx/FHLW0ynWlTLUJxLQqCqXkhQghJV4qSo0IWLXJR5EqhaNGi
cONOXUQhUds2Do73W4sgcKF2sYuXXRT0N/h5afGc7/f3vOe855yZt+rOw+4H
BRExq8oLIxL/Y6hXqXRERm4qimiW88J5cyr1/skt6qI5tXIFtmENduErc/c9
H+A39TrVCB/EcbyNL/AeTuMIvsNHmMOn+AFveE9Pso99d+UyHE7OUhKxJy/g
Z1zEL7iEX3EZv+EK7uMqrqnvfB1/4Ab+xG3v2+S/+BYeYP5MRJ/+Ie91/0X5
lnzJ/kd6damIYp7Ve6aO9UaxX804+478iU/wLf6bP+FzfMadPspv+STf5FP8
rufP8Y3egd4Yf8zf86xn9+UOzGJz8ptiNbbiZazBC1iBDdZdtS7jjFqRwiG5
3f3K5etYhtfwHLZhKbbgWXxtmHdv14yMYddaP0Gk+Q5vNK8k2cdQjDlzr/DT
vDH5fvgp/pe/tLAB085gWvQZlvUG9QqT/4wPFPz//k4AByRLWQ==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1Ik3EcwPH/cl1SsOwUEk27SruEnRbptTfoJOWpS2hkUBDZPbLyLTUN
gjoI85anOietNdfa5ooYI7p2FXQvZqWfhw4/Pt//w8Pzf956rt++MhYLIcyY
/oMhbLWF0MtqPIRUVwgHeJ5HeJUJjjDJ+zzLR7zIRQ4zzRVzU3/gA5b5mD/4
gr+ic1jnu+gaR0PY5Dl7f+Rptpkn7SFkrZ/yEyeZ4xTXOc08Z/iZs3xmCnqO
XzjPIhdY4nOWeafD83LDvNGX7FfXA6xw1bHLuqkH+ZV9bLDT/WZ43Dqm3+ru
6P15nrR+5VjCekm/1Mf0hH6tT+pxvebc92ZUL/NadI+8wIdM8R5P8QZPcIiH
ect1ajwT7c8kd/jzkA8ZvWfu+ZY1/mOVf/mdf/iNu6zwN0ssmh1dYIt5Nplj
g1nWmeE273o/rfj//2YfyDxadA==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVWEUBuDloHMovEERKKWEEEpqHrXSjMTLMBw4E83UzCve89rQiU10
WL9Af4EOREJCRSRCO9JQRIfiQGfRoJ5osHjetdh8a++P/aBnrHU0IyJWVHEy
ouNGxD2+TERs3o4Y1u9xgWl+5Ck/85Jr/M0N3rwTscs85qtjuZrnbOA1W5jh
7HbmcpCF/MMhltpdzodc5nhWxGNOsIKTTHGKlXzPKk6zmjOcVU/kOT7lPJ9x
gTX8wFo2ZkeM8LlK5Nhj55hcxjomzSrkCbmcL1jEcS5637J/e1nAfuawjcFX
vPK99TxjJVMqLd/lDpNc5y/3t8oLfuIJl3jEef70XLMzH9k9pC9kk/4W05nu
0Oy+3GBWwh9mA2ZT+kO5X/7OPn7jOx6wl/t8y13uqB75K7u5zS5+4RtusZOb
fM0m9zeZ+P/f/AVsIEVg
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{3849, 4147, 4537, 1988, 3848, 4148, 4616, 6030, 3993, 4251, 
       4613, 4614, 4285, 6011, 4558, 3994, 4185, 5507, 5820, 4186, 4287, 3995,
        4286, 5540, 5821, 4441, 3996, 3850, 5560, 5822, 4617, 3997, 4439, 
       5980, 4067, 4289, 4559, 5474, 6012, 4187, 4068, 4188, 4292, 5475, 5946,
        4291, 4290, 4443, 5981, 3998, 3851, 4655, 4656, 6039, 3999, 3852, 
       5823, 4000, 3853, 5824, 4001, 3854, 5825, 4002, 3855, 5914, 4149, 4003,
        4150}], 
      Line3DBox[{3862, 4011, 5830, 3861, 4010, 5829, 3860, 4009, 5828, 3859, 
       4008, 6040, 4658, 4657, 3858, 4007, 5984, 4449, 4304, 4305, 5542, 5903,
        4306, 4193, 4071, 4192, 6013, 4563, 4562, 4303, 4070, 4442, 5944, 
       5476, 4447, 4288, 5945, 3857, 4006, 4446, 4298, 5948, 4299, 4301, 4300,
        4191, 5827, 5509, 4190, 4561, 4560, 4297, 5826, 5508, 4440, 4005, 
       6031, 4618, 4284, 3856, 4004, 5982, 4444, 4293, 4294, 5947, 4296, 4295,
        4189, 4069, 4538, 4252, 4280}], Line3DBox[CompressedData["
1:eJwVz7sugwEYxvHH1MGgrVCnQa+hVnEDJrvQNkgj4XpcgHRx2okwYTFRbcQp
EdE6XEN/Hf55n+f/vl/7fdXG/treWJJVVCaS81JygW+5UE4e5GIluZxKGsWk
zzfNtl7iu/ITOmi67RWSGTeH9jfTybjfONLX7TbcD+Rnt496B1vyIv/D78gv
eMU2qvwv35Lf8YEV7s28H92Mnvc/y9ym/Of2k+/KZe7Kblf/5wfmtT7J9+z7
+hdacp07djOLA7nmnZdwos/h1necmvO4k8/MBQwBugAyHw==
       "]], Line3DBox[CompressedData["
1:eJwVzj0vQwEUxvFjJ17iMlEt6m1Gp6bRb8A3aAghqW+gsZjNJl/BaLKLDZE2
TQcibWJo0XrZ+rvDk/9z/vece2+2crpbHYmIPZkfj3iciHiWJzmbjbhLIub4
ymREF/f5HuY8y+AB/5l6/MJzvqkv6GNTESVz182o3sMsX+TqelMa8mI/x9/6
1rRn3/oR38dFueYTfqAf8z+pNy+le25/8RD/cIdfxld77/Iml9yDd+T5tvlD
OlLjG+5W+BP8T9+P7ZmIC/stfZXb8u9lu303m/oA1/grbttckHXzvbsb3JAh
OTE0yg==
       "]], Line3DBox[CompressedData["
1:eJwVzksuA2AUhuGvFqCtBGMJM/d7zSRiAWIFxUxb17mYYBHmTC3B1BJEJBIJ
ggQJSUvr6eDLe857zn8ZqjbW6oUk6zJWTA7KyaFsDSaj+tdS8i5vcsTdmo3z
29jskn8aSE76kwl9nT9VV+3W1C3uASex2Jes8E1netUtnOKXuQ/1l3zKnf1p
foNvqH/VNf4Ph7kZPNe3u+9hB0f4Wdy1H24HC3jMX/vPnFnZm22uhM/+fMnP
89/cj7xwF9y9swv8Pp7pN92xp+6x84iLZkvuWOU7XEUdvsLfuOOqO5d/R7Az
Fw==
       "]], Line3DBox[CompressedData["
1:eJwNz8sug1EUhuHVqENHKFodmrkHZ1rtuINegAFloDVxrvMpvQiMSVwTIWjQ
TklIPIM3a63322v/+x9bqpXXExFRQak/IjUQ0YdMNqJo7tVfDEasma/USyzy
r+obEijK7kYiCvyD2slEZNMROYwiz7ed66AtO1XPcYYFWdPOF7/hW7e4wTw/
7t4efR0nzh5jjl/ln/Uv+JP9osDNyrr1B/wRDlHlZ/gkv2deMTfUfUzzXXwN
y/wut4Mp/lF9wqd3/ci/Mcnfe+sHl/ZfwxjCBF+y/+58C5vYxhau7f0Dp0kw
Dg==
       "]], Line3DBox[CompressedData["
1:eJwVzzdOg1EQReGLKJAs5IR+XCHhFjYAWyC4oKKmJnQmbwBwAx0IWAEFOYfK
NOSdsAM+iqO5c96beXrNuaWZxZ4kLUxWkt5a8jaYnMtbcqmaVNRukUw0kgu+
rO/HPua5S66FE3fezQ7Xkyt9x/k298FV5V9c8207d/hPfkWu8Tf8stzhv/hV
eYAfsf/WWV3uwyEWuDuu8E5J31T3uHtuV182W6ivdk3xD/za/z+wjjN+lH/k
G+6d6r+9eSw/cbM44H64Z3nMzJF+yMy0PI5NvDjbUP8ArnYrUQ==
       "]], Line3DBox[CompressedData["
1:eJwVzskug3EUhvFTaYWUGBKfpKbYEGsL16AIamhYdishMVwBFkI6oKZdrSX2
tli6EUNS7Q34WTw53/uc4f9NlvYKu6mIKGK7L+JuIOIej/0Rs8MRlaGILX5O
PsIM98AVucTc2GDEJTehjmOTb/FttJKIunqLG2zole3+8oduXXNXWOff+BN3
fuQsurHGf/A1PnG7i+tEgV/get2oyDVUscOt6vXwB2hgmmu4scJn5X28yFN8
2c4y/6V+I4N5/kl/iX9Wm/415+1RjGCRb5o7Nfeuf+b7Auf/u3qv3LHep5xG
B/L8H4ALLpk=
       "]], Line3DBox[CompressedData["
1:eJwNzjkyhFEYheFjAUp3m4oyd0omagsQEUgbgUCod2AuUpSMUqqJEKiyArM2
ROZ9IPYEb53zvf937/0H52pTC01JJjHdkrx2JJeyiuZi8ma+0vf0QiHplhud
yY+85rvkRXvybu9Qv+FmcM59cHXu1rwvt7hPrkf/xR2/6M5h9xXlMnr5eXsT
3JK5hBUM8CPcvTP9eh+OUeMeuFm0mculZJdrmA/Mrc4OyU3uTz7yq9y2N778
y7pe5p/4Nf0Epxi1X7czpp/h2feK3OG+nRvXX7gj+Q9bAS70
       "]], Line3DBox[CompressedData["
1:eJwNzksug3EYhfFjBS7Rkhg1KRGXrsAKRDpgAagBJhUjK0BrShcgItKBywZY
gktdKq6LMHAZ+Q2evOc8//d785VqG/P1niRVLPUmq4Xkq5gsyi/mtbmM4f7k
Vb+RD+V9e296Wf7GLb/dlxzw7/yOPMbf8aNmdSgZMU/Q4Y7MOjdob1z+wZpv
G9wuV8AE94t1vsk3uCKamOYr3L1bU/Ik2tjkHrgaSnp5IGlxj/qx3nLrw/9V
5D888XvuneNKvzA/vc+Yc1hA186lty13TvUzzOKZX8E/Un0wtw==
       "]], 
      Line3DBox[{3941, 5482, 5876, 3940, 5483, 5877, 3942, 5856, 4057, 3943, 
       5556, 5857, 4058, 4518, 6000, 4119, 4400, 4603, 4604, 4235, 5935, 4120,
        4236, 4402, 4403, 4401, 5970, 4391, 4524, 5484, 5967, 4642, 4393, 
       4645, 5485, 5968, 4520, 4121, 4405, 4605, 5911, 5576, 4237, 4122, 4238,
        5972, 4408, 4409, 4407, 4406, 4526, 6004, 4059, 3944, 5557, 5858, 
       4060, 4522, 6002, 4123, 4411, 4543, 4545, 4544, 4157, 5535, 5919, 4178,
        4124, 4273, 4240, 4241, 4239}], 
      Line3DBox[{3946, 5486, 5878, 3945, 5487, 5879, 3947, 5488, 5880, 3948, 
       5859, 4061, 3949, 5969, 4399, 4062, 4523, 6003, 4125, 4414, 4606, 4607,
        4242, 5936, 4126, 4243, 4418, 4419, 5976, 4417, 4416, 4528, 5489, 
       5975, 3950, 4404, 4647, 5490, 5971, 4525, 4127, 4422, 5565, 6008, 4547,
        4546, 4158, 4260, 4548, 4128, 4246, 5977, 4424, 4425, 4245, 5937, 
       4129, 4262, 4063, 3951, 5973, 4410, 4552, 4064, 4527, 5563, 6005, 4130,
        4159, 4249, 4250, 4248}], 
      Line3DBox[{3953, 5491, 5881, 3952, 5492, 5882, 3954, 5493, 5883, 3955, 
       5494, 5884, 3956, 5860, 4065, 3957, 5974, 4412, 4415, 4413, 4608, 3958,
        5564, 5912, 4131, 4244, 4132, 5938, 3959, 4530, 4133, 4529, 4134, 
       6027, 5577, 3960, 4649, 4429, 4648, 4430, 5979, 3961, 4420, 4423, 4421,
        6026, 4609, 3962, 4531, 4135, 4247, 5885, 5526, 4549, 4261, 4281, 
       4264, 4274, 5941, 4136, 4263, 4137, 3963, 4554, 5915, 4161, 4553, 4162,
        3964, 5913, 4138, 4160, 4139, 4265, 3965}], Line3DBox[CompressedData["
1:eJwVzTlOAlAUheEL2DskSG1j4VzpAqQwaAQZLChZAHYimjiCqKHGhTAlLkAS
wipM3IbyUfw55/735b6N2lWxnoiIMzwsRzTSEX/rEff6jf6vP+pNPTIRT/qt
ntCf9Ts9qb/ov97+yBaqXG7VXZxicy2ix7Xt8uYLFJDkr/lXfmjeWYkYyF3Z
5afud+y2vSvzWzLFj/k3vsiVsMSNuJT9O/+9uKV/ck27iXnPzZk8lxXkF3/h
0H5f9nGAIcr4wpHdpRzhGCfI4sMfc+u1J/k=
       "]], 
      Line3DBox[{3992, 4146, 4171, 4177, 4176, 5918, 3991, 4183, 4283, 4184, 
       4169, 5539, 5916, 4557, 4279, 3990, 4653, 4667, 4654, 4555, 6010, 5533,
        3989, 5529, 5902, 4145, 3988, 5528, 5901, 4534, 4536, 4535, 3987, 
       5579, 6029, 4612, 4438, 4437, 3986, 5900, 5506, 3985, 5899, 5505, 5862,
        3984, 5898, 5504, 3983, 5897, 5503, 3982, 5896, 5502, 3981, 5895, 
       5501, 3980, 5894, 5500, 3979, 5532, 5893, 4165, 4166}], 
      Line3DBox[{4669, 4971, 6252, 4880, 4668, 6149, 4881, 4670, 6150, 4882, 
       4671, 6151, 4883, 4672, 6152, 4884, 4673, 6153, 4885, 4674, 6154, 5582,
        6043, 4675, 6155, 4886, 4676, 6156, 4887, 4677, 6157, 4888, 4678, 
       6158, 4889, 4679, 6159, 4890, 4680, 6160, 4891, 4681, 6161, 4972, 4892,
        4973}], 
      Line3DBox[{4683, 5583, 6044, 4682, 6162, 4893, 4684, 6163, 4894, 4685, 
       6164, 4895, 4686, 6165, 4896, 4687, 6166, 4897, 4688, 6167, 5584, 6045,
        4689, 5585, 6046, 4690, 6168, 4898, 4691, 6169, 4899, 4692, 6170, 
       4900, 4693, 6171, 4901, 4694, 6172, 4902, 4695, 6173, 4903, 4696}], 
      Line3DBox[{4698, 5586, 6047, 4697, 5587, 6048, 4699, 6174, 4904, 4700, 
       6175, 4905, 4701, 6176, 4906, 4702, 6177, 4907, 4703, 6178, 5588, 6049,
        4704, 5589, 6050, 4705, 5590, 6051, 4706, 6179, 4908, 4707, 6180, 
       4909, 4708, 6181, 4910, 4709, 6182, 4911, 4710, 6183, 4912, 4711}], 
      Line3DBox[{4713, 5591, 6052, 4712, 5592, 6053, 4714, 5593, 6054, 4715, 
       6184, 4913, 4716, 6185, 4914, 4717, 6186, 4915, 4718, 6187, 5594, 6055,
        4719, 5595, 6056, 4720, 5596, 6057, 4721, 5597, 6058, 4722, 6188, 
       4916, 4723, 6189, 4917, 4724, 6190, 4918, 4725, 6191, 4919, 4726}], 
      Line3DBox[{4728, 5598, 6059, 4727, 5599, 6060, 4729, 5600, 6061, 4730, 
       5601, 6062, 4731, 6192, 4920, 4732, 6193, 4921, 4733, 6194, 5602, 6063,
        4734, 5603, 6064, 4735, 5604, 6065, 4736, 5605, 6066, 4737, 5606, 
       6067, 4738, 6195, 4922, 4739, 6196, 4923, 4740, 6197, 4924, 4741}], 
      Line3DBox[{4743, 5607, 6068, 4742, 5608, 6069, 4744, 5609, 6070, 4745, 
       5610, 6071, 4746, 5611, 6072, 4747, 6198, 4925, 4748, 6199, 5612, 6073,
        4749, 5613, 6074, 4750, 5614, 6075, 4751, 5615, 6076, 4752, 5616, 
       6077, 4753, 5617, 6078, 4754, 6200, 4926, 4755, 6201, 4927, 4756}], 
      Line3DBox[{4758, 5618, 6079, 4757, 5619, 6080, 4759, 5620, 6081, 4760, 
       5621, 6082, 4761, 5622, 6083, 4762, 5623, 6084, 4763, 6202, 5624, 6085,
        4764, 5625, 6086, 4765, 5626, 6087, 4766, 5627, 6088, 4767, 5628, 
       6089, 4768, 5629, 6090, 4769, 5630, 6091, 4770, 6203, 4928, 4771}], 
      Line3DBox[{4775, 6204, 4929, 4773, 6205, 4930, 4777, 6206, 4931, 4779, 
       6207, 4932, 4781, 6208, 4933, 4783, 6209, 4934, 4785, 6210, 5638, 6100,
        4787, 6211, 4935, 4789, 6212, 4936, 4791, 6213, 4937, 4793, 6214, 
       4938, 4795, 6215, 4939, 4797, 6216, 4940, 4799, 6217, 5037, 5038, 4941,
        4801}], 
      Line3DBox[{4800, 5036, 6265, 5693, 4798, 6106, 5644, 4796, 6105, 5643, 
       4794, 6104, 5642, 4792, 6103, 5641, 4790, 6102, 5640, 4788, 6101, 5639,
        4786, 6099, 6098, 5637, 4784, 6097, 5636, 4782, 6096, 5635, 4780, 
       6095, 5634, 4778, 6094, 5633, 4776, 6093, 5632, 4772, 6092, 5631, 
       4774}], Line3DBox[{4803, 5645, 6107, 4802, 6218, 4942, 4804, 6219, 
       4943, 4805, 6220, 4944, 4806, 6221, 4945, 4807, 6222, 4946, 4808, 6223,
        5646, 6108, 4809, 5647, 6109, 4810, 6224, 4947, 4811, 6225, 4948, 
       4812, 6226, 4949, 4813, 6227, 4950, 4814, 6228, 4974, 4951, 5002, 6262,
        5011, 5012, 5006, 4952, 5023}], 
      Line3DBox[{4816, 5648, 6110, 4815, 5649, 6111, 4817, 6229, 4953, 4818, 
       6230, 4954, 4819, 6231, 4955, 4820, 6232, 4956, 4821, 6233, 5650, 6112,
        4822, 5651, 6113, 4823, 5652, 6114, 4824, 6234, 4957, 4825, 6235, 
       4958, 4826, 6236, 4975, 4959, 5003, 6237, 4976, 5030, 4960, 4977, 6261,
        5010, 4969, 5007, 5020, 5021, 5019}], 
      Line3DBox[{4828, 5653, 6115, 4827, 5654, 6116, 4829, 5655, 6117, 4830, 
       6238, 4961, 4831, 6239, 4962, 4832, 6240, 4963, 4833, 6241, 5656, 6118,
        4834, 5657, 6119, 4835, 5658, 6120, 4836, 5659, 6121, 4837, 6242, 
       4978, 4964, 5004, 6243, 4979, 4965, 5005, 6244, 4980, 5031, 5039, 5043,
        5040, 4981, 5691, 6245, 4970, 5028, 5026, 5027, 5022}], 
      Line3DBox[{4839, 5660, 6122, 4838, 5661, 6123, 4840, 5662, 6124, 4841, 
       5663, 6125, 4842, 6246, 4966, 4843, 6247, 4967, 4844, 6248, 5664, 6126,
        4845, 5665, 6127, 4846, 5666, 6128, 4847, 5667, 6129, 4848, 5686, 
       6253, 4984, 4849, 6259, 4985, 4986, 4850, 5694, 6267, 5048, 4987, 5047,
        4988, 5044, 5032, 5033, 6254, 5016, 4982, 5042, 4983, 5029, 4851}], 
      Line3DBox[{4853, 5668, 6130, 4852, 5669, 6131, 4854, 5670, 6132, 4855, 
       5671, 6133, 4856, 5672, 6134, 4857, 6249, 4968, 4858, 6250, 5673, 6135,
        4859, 5674, 6136, 4860, 5675, 6137, 4861, 4989, 6255, 5687, 4862, 
       5688, 6256, 4990, 4863, 5689, 6257, 4991, 4864, 6266, 5045, 4992, 5046,
        4993, 5041, 5034, 5035, 6260, 5013, 4994, 5008, 4995, 5024, 4865}], 
      Line3DBox[{4879, 5001, 5009, 5015, 5014, 6263, 4878, 5017, 5018, 4996, 
       5025, 6264, 5692, 4877, 5000, 6258, 5690, 4876, 6148, 5685, 4875, 6147,
        5684, 4874, 6146, 5683, 4873, 6145, 5682, 4872, 6144, 5681, 6251, 
       4871, 6143, 5680, 4870, 6142, 5679, 4869, 6141, 5678, 4868, 6140, 5677,
        4867, 6139, 5676, 4866, 6138, 4998, 4997, 4999}], 
      Line3DBox[{5050, 5333, 6459, 5252, 5049, 6372, 5253, 5051, 6373, 5254, 
       5052, 6374, 5255, 5053, 6375, 5256, 5054, 6376, 5257, 5055, 6377, 5695,
        6268, 5056, 6378, 5258, 5057, 6379, 5259, 5058, 6380, 5260, 5059, 
       6381, 5261, 5060, 5797, 6460, 5262, 5378, 5806, 6475, 5431, 5390, 5420,
        5263, 5467, 6477, 5432, 5433, 5391, 5264, 5334}], 
      Line3DBox[{5062, 5696, 6269, 5061, 6382, 5265, 5063, 6383, 5266, 5064, 
       6384, 5267, 5065, 6385, 5268, 5066, 6386, 5269, 5067, 6387, 5697, 6270,
        5068, 5698, 6271, 5069, 6388, 5270, 5070, 6389, 5271, 5071, 6390, 
       5272, 5072, 5798, 6461, 5273, 5379, 6478, 1724, 5392, 1708, 1786, 3811,
        1726, 5393, 5274, 5073}], 
      Line3DBox[{5075, 5699, 6272, 5074, 5700, 6273, 5076, 6391, 5275, 5077, 
       6392, 5276, 5078, 6393, 5277, 5079, 6394, 5278, 5080, 6395, 5701, 6274,
        5081, 5702, 6275, 5082, 5703, 6276, 5083, 6396, 5279, 5084, 6397, 
       5280, 5085, 6398, 5335, 5281, 5380, 5807, 6399, 5336, 5394, 5421, 5422,
        5381, 6488, 5434, 5337, 5395, 5282, 5086}], 
      Line3DBox[{5088, 5704, 6277, 5087, 5705, 6278, 5089, 5706, 6279, 5090, 
       6400, 5283, 5091, 6401, 5284, 5092, 6402, 5285, 5093, 6403, 5707, 6280,
        5094, 5708, 6281, 5095, 5709, 6282, 5096, 5710, 6283, 5097, 6404, 
       5286, 5098, 6405, 5338, 5287, 5382, 5808, 6406, 5339, 5396, 5423, 5424,
        5383, 5809, 6407, 5340, 5398, 5288, 5099}], 
      Line3DBox[{5101, 5711, 6284, 5100, 5712, 6285, 5102, 5713, 6286, 5103, 
       5714, 6287, 5104, 6408, 5289, 5105, 6409, 5290, 5106, 6410, 5715, 6288,
        5107, 5716, 6289, 5108, 5717, 6290, 5109, 5718, 6291, 5110, 5719, 
       6292, 5111, 6411, 5341, 5342, 5112, 5810, 6479, 5343, 5397, 5344, 5435,
        5470, 6469, 5436, 5345, 5399, 5346, 5113}], 
      Line3DBox[{5115, 5720, 6293, 5114, 5721, 6294, 5116, 5722, 6295, 5117, 
       5723, 6296, 5118, 5724, 6297, 5119, 6412, 5291, 5120, 6413, 5725, 6298,
        5121, 5726, 6299, 5122, 5727, 6300, 5123, 5728, 6301, 5124, 5729, 
       6302, 5125, 5799, 6462, 5347, 5126, 6470, 5437, 5348, 5400, 5349, 5438,
        5471, 6471, 5439, 5350, 5401, 5351, 5127}], 
      Line3DBox[{5129, 5730, 6303, 5128, 5731, 6304, 5130, 5732, 6305, 5131, 
       5733, 6306, 5132, 5734, 6307, 5133, 5735, 6308, 5134, 6414, 5736, 6309,
        5135, 5737, 6310, 5136, 5738, 6311, 5137, 5739, 6312, 5138, 5740, 
       6313, 5139, 5800, 6463, 5352, 5140, 5811, 6480, 5440, 5402, 5442, 5441,
        5141, 6490, 5443, 5444, 5403, 5353, 5142}], 
      Line3DBox[{5146, 6415, 5292, 5144, 6416, 5293, 5148, 6417, 5294, 5150, 
       6418, 5295, 5152, 6419, 5296, 5154, 6420, 5297, 5156, 6421, 5748, 6322,
        5158, 6422, 5298, 5160, 6423, 5299, 5162, 6424, 5300, 5164, 6425, 
       5301, 5166, 5802, 6465, 5302, 5384, 5813, 6476, 5448, 5406, 5425, 5303,
        5468, 6483, 5450, 5451, 5407, 5304, 5170}], 
      Line3DBox[{5169, 5355, 5405, 5449, 6482, 5814, 5168, 5446, 5447, 5404, 
       5445, 6481, 5812, 5167, 5354, 6464, 5801, 5165, 6326, 5752, 5163, 6325,
        5751, 5161, 6324, 5750, 5159, 6323, 5749, 5157, 6321, 6320, 5747, 
       5155, 6319, 5746, 5153, 6318, 5745, 5151, 6317, 5744, 5149, 6316, 5743,
        5147, 6315, 5742, 5143, 6314, 5741, 5145}], 
      Line3DBox[{5172, 5753, 6327, 5171, 6426, 5305, 5173, 6427, 5306, 5174, 
       6428, 5307, 5175, 6429, 5308, 5176, 6430, 5309, 5177, 6431, 5754, 6328,
        5178, 5755, 6329, 5179, 6432, 5310, 5180, 6433, 5311, 5181, 6434, 
       5312, 5182, 5803, 6466, 5313, 5385, 6484, 5452, 5453, 5408, 5426, 5314,
        5469, 6485, 5454, 5455, 5409, 5315, 5183}], 
      Line3DBox[{5185, 5756, 6330, 5184, 5757, 6331, 5186, 6435, 5316, 5187, 
       6436, 5317, 5188, 6437, 5318, 5189, 6438, 5319, 5190, 6439, 5758, 6332,
        5191, 5759, 6333, 5192, 5760, 6334, 5193, 6440, 5320, 5194, 6441, 
       5321, 5195, 6442, 5356, 5322, 5386, 5815, 6443, 5357, 5410, 5427, 5428,
        5387, 6489, 5456, 5358, 5411, 5323, 5196}], 
      Line3DBox[{5198, 5761, 6335, 5197, 5762, 6336, 5199, 5763, 6337, 5200, 
       6444, 5324, 5201, 6445, 5325, 5202, 6446, 5326, 5203, 6447, 5764, 6338,
        5204, 5765, 6339, 5205, 5766, 6340, 5206, 5767, 6341, 5207, 6448, 
       5327, 5208, 6449, 5359, 5328, 5388, 5816, 6450, 5360, 5412, 5429, 5430,
        5389, 5817, 6451, 5361, 5414, 5329, 5209}], 
      Line3DBox[{5211, 5768, 6342, 5210, 5769, 6343, 5212, 5770, 6344, 5213, 
       5771, 6345, 5214, 6452, 5330, 5215, 6453, 5331, 5216, 6454, 5772, 6346,
        5217, 5773, 6347, 5218, 5774, 6348, 5219, 5775, 6349, 5220, 5776, 
       6350, 5221, 6455, 5362, 5363, 5222, 5818, 6486, 5364, 5413, 5365, 5457,
        5472, 6472, 5458, 5366, 5415, 5367, 5223}], 
      Line3DBox[{5225, 5777, 6351, 5224, 5778, 6352, 5226, 5779, 6353, 5227, 
       5780, 6354, 5228, 5781, 6355, 5229, 6456, 5332, 5230, 6457, 5782, 6356,
        5231, 5783, 6357, 5232, 5784, 6358, 5233, 5785, 6359, 5234, 5786, 
       6360, 5235, 5804, 6467, 5368, 5236, 6473, 5459, 5369, 5416, 5370, 5460,
        5473, 6474, 5461, 5371, 5417, 5372, 5237}], 
      Line3DBox[{5251, 5377, 5419, 5466, 5465, 6491, 5250, 5463, 5464, 5418, 
       5462, 6487, 5819, 5249, 5376, 6468, 5805, 5248, 6371, 5796, 5247, 6370,
        5795, 5246, 6369, 5794, 5245, 6368, 5793, 5244, 6367, 5792, 6458, 
       5243, 6366, 5791, 5242, 6365, 5790, 5241, 6364, 5789, 5240, 6363, 5788,
        5239, 6362, 5787, 5238, 6361, 5374, 5373, 5375}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1844, 2318, 2102, 2261, 2103, 5820, 2262, 2516, 2106, 2515, 
       2107, 5826, 2375, 2373, 2374, 5831, 2726, 2727, 2394, 5952, 2397, 2395,
        2535, 2536, 5986, 2128, 2278, 2129, 2279, 2547, 5990, 2135, 2546, 
       2136, 2432, 5961, 2430, 2431, 5837, 2735, 2736, 2453, 2457, 2454, 5845,
        2571, 2574, 2165, 2573, 2166, 5852, 2468, 2466, 2467, 5857, 1936, 
       2066, 5859, 1946, 5884, 2073, 1956, 5889, 2082, 1967, 5896, 2093, 
       1979}], Line3DBox[{1845, 2718, 2361, 2363, 2362, 5821, 2517, 2518, 
       2108, 2264, 2109, 5827, 2265, 2521, 2113, 2520, 5983, 2114, 2387, 2385,
        5950, 2386, 2728, 2729, 2412, 5956, 2414, 2413, 2548, 2549, 5991, 
       2137, 2282, 2138, 2284, 5926, 2559, 2148, 2558, 2149, 5838, 2443, 2441,
        2442, 5846, 2575, 2576, 2167, 2302, 2168, 5853, 2303, 2584, 2176, 
       2583, 6000, 2177, 2481, 2479, 5969, 2480, 1947, 2074, 5860, 1957, 5890,
        2083, 1968, 5897, 2094, 1980}], 
      Line3DBox[{1846, 2509, 2510, 5822, 2720, 2721, 2722, 2377, 5948, 2376, 
       2522, 2523, 2524, 2268, 5920, 2115, 2270, 2531, 2532, 5908, 2530, 2122,
        2402, 2400, 5953, 2401, 2550, 2551, 5992, 2552, 2283, 2139, 2285, 
       5927, 2323, 2324, 2290, 2150, 5839, 2292, 2566, 2567, 2565, 2157, 5847,
        2460, 2458, 2469, 5966, 2459, 2585, 2586, 2587, 2307, 5935, 2178, 
       2308, 2592, 2593, 2591, 6003, 2183, 2492, 2490, 5974, 2491, 1958, 2084,
        5861, 1969, 5898, 2095, 1981}], Line3DBox[CompressedData["
1:eJwV0DFLglEYhuHXBr9q00hbrTa/wE0Ea3OrxbZoqiUI/Gpta2vqZ5RzP6Al
nbUfoEKIoI0i0eblcPO8730eDodTucnanVxEXKCeRAx3Ir4xwHU5orEdcWZu
omE/lSOMMdnMzit8S05Q4IrY537s55hiwd1yv3KOS+5RZmjxz/IBsRuRwz23
JZd6dxiWIlaypFPGnznVyeQ/irp7KKDDP3FdvTd8oM29y0PnRzhG3l7jX3QT
c8qd4ICryle+z3/hiutt7vJHNX7mPZ/mNW62KBc=
       "]], Line3DBox[CompressedData["
1:eJwVzDFLAmAYxPFHgrSiSUhcgjanpmrJPTCHkFBbJNpcinIxlwZtsEAIhNqa
ay7BLdxEt75CDSEILa31azjuuf/d+26cnJVOExFxQLvJiOFyxJjfZyLyvLAU
8c6P5X1e1u+lIqp4GqvIVSrrjngFv8I/+cf/O/pai2jIM3edGnZzrOafNt6h
a7rQfeN1/IeadpdU9F9L13L37FL8V+7jbf6ELdqfy7dyT9+RX/BXOsQHvK/L
8q5ux6aJb/FtetTd8Tf9Db7pXrd7xhfkMZ6TB/Kq/OBewSY0pRH+B5enLHg=

       "]], Line3DBox[CompressedData["
1:eJwVz7FLQmEYhfE3CNQGpyhwa4zWIAvqL4iGhqTFsskcVKjtbiYEIUiUkFvN
jQ1BS6RLOLs2C5II0RQE/hwO5z3POXyXu3ZWO6wuRMQ+7aYiBvS+ErHH35Yi
hvxhVc+PMhFfvCQXeFE/sj1IR5zrTuRTKs03fKwr4xP6xio0xRryr/uCErsf
rOKNW/yO7mnDNxJ9Hf+jht01dsWbeJM/2S3zlL6ja+EvWFa+lDvyjTuNfdAx
1uOPeI7/+25bv+2NLcrT8/x/+aLtp82Oe93mFc9iXfcm9eUZu00rnA==
       "]], 
      Line3DBox[{1855, 1995, 5824, 1856, 2005, 5828, 1869, 2747, 6041, 2748, 
       2749, 2750, 2406, 5955, 2410, 2407, 2540, 2543, 5988, 2133, 2542, 2134,
        2427, 5959, 2424, 2425, 2733, 2734, 6034, 2447, 2450, 2448, 5841, 
       2569, 2570, 2161, 2299, 2162, 5848, 2301, 2582, 2172, 2581, 2173, 5854,
        2478, 2476, 2477, 5858, 1942, 2187, 2313, 5937, 2188, 2331, 2332, 
       2192, 5941, 2341, 2193, 2253, 2249, 2220, 2619, 2620, 6009, 2196, 2744,
        2197, 2743, 2623, 6010, 2229, 2230, 2232}], Line3DBox[CompressedData["
1:eJwNzr8uQ2EYgPGXxZ8LQFKKEFWLpspWCYPRICQ2jdFAYiARYeISNLFUQsRS
EYZiaU8TiYjJ0FGvwUoHv+HJ87zv930nZ3x7b223KyLWsdQT8YlkIGKZW3jT
q/yNd73J9f6Iy8GIBido4qAvYsXuiA/xiw527LZ6I/50iX+QtavwFb5889g3
r3UHNxh1N42Ce7fmIT2GE93NpzzJbW8n+M6c9g95nOkR3vf2XL84r2HD/MxF
Z4uoOkvZJXyPjLMpPOgPTOsLXnBnRpd1gbOo62H7OT2PR3MNT8iZZ/Gq/wHN
ay5y
       "]], Line3DBox[CompressedData["
1:eJwVzjtLgnEUB+DTZLlnFGTYUHYFEXI1bA/cGntXoYaKvkfNBQUR5RCNDUZ0
sYtSlkM0OTUKfYQeh4ffubznz5tLtqtbQxFRpZKKOBqOmBiLOJZr+m+amYh1
2eNVvSF/eVMnsk9LXZOb7jLu/2TC6EhEUV9Tn/DIA5Nmp3KHM3b58UZDvrPi
7kOeM60upCP23eTUd2ZPdGhywZTdiyz67lleMqvOM8Oe/byco253wLjZlTzk
lk9K3i+Zf6mvWdSX3SzIe32LrH1Xtrlh2W7VN0uD/+Qfufsudg==
       "]], 
      Line3DBox[{1976, 2090, 2228, 5893, 1964, 2079, 5886, 1953, 2070, 5881, 
       1943, 2063, 5878, 1933, 2056, 5876, 1925, 2048, 5875, 1917, 5843, 2042,
        1908, 5836, 2037, 2557, 2670, 2669, 6019, 1900, 2030, 2668, 2429, 
       2667, 5960, 2666, 1891, 2022, 5989, 2544, 1882, 2016, 2529, 6014, 2643,
        2642, 1872, 2008, 2641, 5904, 2267, 2111, 1861, 1997, 5947, 2372, 
       2371, 2635, 2634, 1841, 1988, 2202, 2235}], 
      Line3DBox[{1977, 2091, 5894, 1965, 2080, 5887, 1954, 2071, 5882, 1944, 
       2064, 5879, 1934, 2057, 5877, 1926, 5850, 2049, 1918, 5844, 2043, 2564,
        2439, 2679, 1909, 5962, 2678, 2677, 2440, 2147, 2676, 6021, 1901, 
       2031, 2428, 5867, 1892, 2023, 2534, 6016, 2393, 2652, 1883, 2651, 2650,
        2273, 5922, 2120, 1873, 2384, 2383, 5905, 2382, 2112, 2644, 1862, 
       5982, 1998, 2370, 1842, 6030, 1989, 2316, 2203, 2354, 2236}], 
      Line3DBox[{1978, 2092, 5895, 1966, 2081, 5888, 1955, 2072, 5883, 1945, 
       2065, 5880, 1935, 5856, 2058, 1927, 5851, 2050, 2572, 2455, 2687, 1919,
        2686, 6022, 2685, 2456, 2156, 2684, 1910, 5996, 2038, 2438, 5872, 
       1902, 2032, 2545, 2411, 5868, 2660, 1893, 2659, 2658, 2277, 2127, 5864,
        1884, 2399, 2398, 2396, 6017, 2121, 2653, 1874, 2009, 2381, 1863, 
       6031, 1999, 2514, 2360, 2628, 1843, 2627, 6011, 2626, 2260, 2101, 2333,
        2317, 2204}], Line3DBox[CompressedData["
1:eJwNzC1MgmEUhuHjDCoEg8FAYkqxafqaRYWNOTd+NotFJ4wCkbEZLG4EmUIw
aTYrSJRmtrHZnIVqUjcDV7j3nOc+532zp61ScyEiKpgsRWwvR6TXI4bmnHmU
ihjjjnuRj3yGH5hTKxE7fE+/59fksT7hX3Hr5gZ9u7Tdkd2TPsQzuvwi3+Wv
9PCmo1/y/zjkH7hfrok2t8X9yB5/jaJet2tx3/jj6v5q8DVZ42Y4N8/cbfIl
ecJ94sz9l77BF2WZ+8CuXrWrYI8vcO9I+CmX998BEu4NF/y+PnWbYNXNHApZ
LaU=
       "]], Line3DBox[CompressedData["
1:eJwNzC1IwwEQhvEbCH6wYBAsKwaHRQSbwoaaHDgR+cOKGEQx6cbCEERwxTlM
fm1JNIouWge2ZasWsa0YTCvCfuHh7n3e42b2ytvHqYhI8D4asTgWkZ6OeLNn
7QsTEW3UuJb5zGf4e3tvPOKKv7Pf4kE3pStxXd2NnJa35Iz+Eg00+RG+yV/I
Kbencp2f5/7NJ+4Rdf05Trgj3cB8kTt4xTVX4f5Qln/9meN2zEOuj6o/fXmW
T8xd7gcH/D7W+CKfcF/Iyd/8pn9FFLgPnPEb8qfbPJa4Hpb5VfcrKOjXMWkf
AmMdLLI=
       "]], Line3DBox[CompressedData["
1:eJwVzC1LA2AUhuEjQ3SCCIIuGQzDJoJtxbbgBEVdkiGYZnFuzLA6V5wThCW/
tuAMat4PsIgYlw2CTRCDySJeCzfnPPdz3nd+r7R5MBIR23gai1gej1iaiLjB
Nc5SEX1+gb+SX5MRLe7SfoF73Zxuh3vWdeQZeUtOD9+jhTY/yZ/aU7pRt8dy
k18cZvsj94CmmxPUdSXdn9nha2Zb/jUT+grKaHBl7geH8re/CviajShynzjy
voq62303RezyH7i1n/N3Zg957g15+zT/7q8sVrkB1vwzxefMDTfryPAF7sVc
4bvcPzuKLmQ=
       "]], 
      Line3DBox[{2756, 2967, 6149, 2757, 2981, 6162, 2785, 6048, 2996, 2800, 
       6053, 3011, 2815, 6060, 3026, 2830, 6069, 3041, 2845, 6080, 3056, 2860,
        6093, 3071, 6205, 2875, 3085, 6218, 2889, 6111, 3098, 2903, 6116, 
       3110, 2916, 6123, 3121, 2929, 6131, 3132, 2942, 6139, 3143, 2955}], 
      Line3DBox[{2758, 2968, 6150, 2759, 2982, 6163, 2786, 2997, 6174, 2801, 
       6054, 3012, 2816, 6061, 3027, 2831, 6070, 3042, 2846, 6081, 3057, 2861,
        6094, 3072, 6206, 2876, 3086, 6219, 2890, 3099, 6229, 2904, 6117, 
       3111, 2917, 6124, 3122, 2930, 6132, 3133, 2943, 6140, 3144, 2956}], 
      Line3DBox[{2760, 2969, 6151, 2761, 2983, 6164, 2787, 2998, 6175, 2802, 
       3013, 6184, 2817, 6062, 3028, 2832, 6071, 3043, 2847, 6082, 3058, 2862,
        6095, 3073, 6207, 2877, 3087, 6220, 2891, 3100, 6230, 2905, 3112, 
       6238, 2918, 6125, 3123, 2931, 6133, 3134, 2944, 6141, 3145, 2957}], 
      Line3DBox[{2762, 2970, 6152, 2763, 2984, 6165, 2788, 2999, 6176, 2803, 
       3014, 6185, 2818, 3029, 6192, 2833, 6072, 3044, 2848, 6083, 3059, 2863,
        6096, 3074, 6208, 2878, 3088, 6221, 2892, 3101, 6231, 2906, 3113, 
       6239, 2919, 3124, 6246, 2932, 6134, 3135, 2945, 6142, 3146, 2958}], 
      Line3DBox[{2764, 2971, 6153, 2765, 2985, 6166, 2789, 3000, 6177, 2804, 
       3015, 6186, 2819, 3030, 6193, 2834, 3045, 6198, 2849, 6084, 3060, 2864,
        6097, 3075, 6209, 2879, 3089, 6222, 2893, 3102, 6232, 2907, 3114, 
       6240, 2920, 3125, 6247, 2933, 3136, 6249, 2946, 6143, 3147, 2959}], 
      Line3DBox[{2766, 2972, 6154, 2768, 2986, 6167, 2790, 3001, 6178, 2805, 
       3016, 6187, 2820, 3031, 6194, 2835, 3046, 6199, 2850, 3061, 6202, 2865,
        6098, 3076, 6210, 2880, 3090, 6223, 2894, 3103, 6233, 2908, 3115, 
       6241, 2921, 3126, 6248, 2934, 3137, 6250, 2947, 3148, 6251, 2960}], 
      Line3DBox[{2770, 2974, 6155, 2771, 6046, 2988, 2792, 6050, 3003, 2807, 
       6056, 3018, 2822, 6064, 3033, 2837, 6074, 3048, 2852, 6086, 3063, 2867,
        6101, 3078, 6211, 2882, 6109, 3092, 2896, 6113, 3105, 2910, 6119, 
       3117, 2923, 6127, 3128, 2936, 6136, 3139, 2949, 6145, 3150, 2962}], 
      Line3DBox[{2772, 2975, 6156, 2773, 2989, 6168, 2793, 6051, 3004, 2808, 
       6057, 3019, 2823, 6065, 3034, 2838, 6075, 3049, 2853, 6087, 3064, 2868,
        6102, 3079, 6212, 2883, 3093, 6224, 2897, 6114, 3106, 2911, 6120, 
       3118, 2924, 6128, 3129, 2937, 6137, 3140, 2950, 6146, 3151, 2963}], 
      Line3DBox[{2774, 2976, 6157, 2775, 2990, 6169, 2794, 3005, 6179, 2809, 
       6058, 3020, 2824, 6066, 3035, 2839, 6076, 3050, 2854, 6088, 3065, 2869,
        6103, 3080, 6213, 2884, 3094, 6225, 2898, 3107, 6234, 2912, 6121, 
       3119, 2925, 6129, 3130, 2938, 6255, 3176, 3194, 3141, 2951, 6147, 3152,
        2964}], 
      Line3DBox[{2776, 2977, 6158, 2777, 2991, 6170, 2795, 3006, 6180, 2810, 
       3021, 6188, 2825, 6067, 3036, 2840, 6077, 3051, 2855, 6089, 3066, 2870,
        6104, 3081, 6214, 2885, 3095, 6226, 2899, 3108, 6235, 2913, 3165, 
       6242, 3166, 2926, 6253, 3171, 3172, 2939, 6256, 3177, 3195, 3178, 2952,
        6148, 3153, 2965}], 
      Line3DBox[{2778, 2978, 6159, 2779, 2992, 6171, 2796, 3007, 6181, 2811, 
       3022, 6189, 2826, 3037, 6195, 2841, 6078, 3052, 2856, 6090, 3067, 2871,
        6105, 3082, 6215, 2886, 3096, 6227, 2900, 3160, 6236, 3161, 2914, 
       3167, 3190, 6243, 3168, 2927, 3173, 6259, 3193, 3174, 2940, 6257, 3179,
        3196, 3180, 2953, 6258, 3183, 3184, 3186}], 
      Line3DBox[{2780, 2979, 6160, 2781, 2993, 6172, 2797, 3008, 6182, 2812, 
       3023, 6190, 2827, 3038, 6196, 2842, 3053, 6200, 2857, 6091, 3068, 2872,
        6106, 3083, 6216, 2887, 3157, 6228, 3158, 2901, 3162, 3189, 6237, 
       3163, 3233, 3250, 3251, 3191, 6244, 3169, 3235, 3253, 3254, 6267, 3252,
        3256, 3255, 3224, 3248, 6266, 3249, 3243, 3245, 3244, 3181, 6264, 
       3225, 3226, 3185, 3228, 3227, 3246}], Line3DBox[CompressedData["
1:eJwVzTtOAmEYhtHPVmnoTIyFlYmNlQVxBRY2SEJjRULsoFGRAhAV8a6IQqUS
4wVpTNgBO3AFsgN2QOKxOHnef/7JzFKumC7MRMQmv7MRW4mI5HxERsfOw7mI
ReeJPbKX7an9Y6/aCR2zZi/ohJS9olPW7ZSW9cM3N/RT+2TZ5YJ9z8+1xjEn
bHPKnruGHtLklTNy5N119YsOB7R5o+DuQXe4YsAlda55//+/d260wh0v3HJE
i5L7R72nyjM9nvjmD6dHLg8=
       "]], 
      Line3DBox[{2954, 3142, 6138, 3182, 2941, 3131, 6130, 2928, 3120, 6122, 
       2915, 3109, 6115, 2902, 3097, 6110, 2888, 3084, 6107, 2874, 6204, 3070,
        6092, 2859, 3055, 6079, 2844, 3040, 6068, 2829, 3025, 6059, 2814, 
       3010, 6052, 2799, 2995, 6047, 2784, 2980, 6044, 2755, 6252, 2966, 3154,
        3187}], 
      Line3DBox[{2961, 3149, 6144, 2948, 3138, 6135, 2935, 3127, 6126, 2922, 
       3116, 6118, 2909, 3104, 6112, 2895, 3091, 6108, 2881, 3077, 6100, 6099,
        2866, 3062, 6085, 2851, 3047, 6073, 2836, 3032, 6063, 2821, 3017, 
       6055, 2806, 3002, 6049, 2791, 2987, 6045, 2769, 2973, 6043, 2767}], 
      Line3DBox[{3258, 3453, 6372, 3259, 3465, 6382, 3285, 6273, 3477, 3298, 
       6278, 3489, 3311, 6285, 3501, 3324, 6294, 3513, 3337, 6304, 3525, 3350,
        6315, 3537, 6416, 3363, 3549, 6426, 3376, 6331, 3561, 3389, 6336, 
       3573, 3402, 6343, 3585, 3415, 6352, 3597, 3428, 6362, 3609, 3441}], 
      Line3DBox[{3260, 3454, 6373, 3261, 3466, 6383, 3286, 3478, 6391, 3299, 
       6279, 3490, 3312, 6286, 3502, 3325, 6295, 3514, 3338, 6305, 3526, 3351,
        6316, 3538, 6417, 3364, 3550, 6427, 3377, 3562, 6435, 3390, 6337, 
       3574, 3403, 6344, 3586, 3416, 6353, 3598, 3429, 6363, 3610, 3442}], 
      Line3DBox[{3262, 3455, 6374, 3263, 3467, 6384, 3287, 3479, 6392, 3300, 
       3491, 6400, 3313, 6287, 3503, 3326, 6296, 3515, 3339, 6306, 3527, 3352,
        6317, 3539, 6418, 3365, 3551, 6428, 3378, 3563, 6436, 3391, 3575, 
       6444, 3404, 6345, 3587, 3417, 6354, 3599, 3430, 6364, 3611, 3443}], 
      Line3DBox[{3264, 3456, 6375, 3265, 3468, 6385, 3288, 3480, 6393, 3301, 
       3492, 6401, 3314, 3504, 6408, 3327, 6297, 3516, 3340, 6307, 3528, 3353,
        6318, 3540, 6419, 3366, 3552, 6429, 3379, 3564, 6437, 3392, 3576, 
       6445, 3405, 3588, 6452, 3418, 6355, 3600, 3431, 6365, 3612, 3444}], 
      Line3DBox[{3266, 3457, 6376, 3267, 3469, 6386, 3289, 3481, 6394, 3302, 
       3493, 6402, 3315, 3505, 6409, 3328, 3517, 6412, 3341, 6308, 3529, 3354,
        6319, 3541, 6420, 3367, 3553, 6430, 3380, 3565, 6438, 3393, 3577, 
       6446, 3406, 3589, 6453, 3419, 3601, 6456, 3432, 6366, 3613, 3445}], 
      Line3DBox[{3268, 3458, 6377, 3270, 3470, 6387, 3290, 3482, 6395, 3303, 
       3494, 6403, 3316, 3506, 6410, 3329, 3518, 6413, 3342, 3530, 6414, 3355,
        6320, 3542, 6421, 3368, 3554, 6431, 3381, 3566, 6439, 3394, 3578, 
       6447, 3407, 3590, 6454, 3420, 3602, 6457, 3433, 3614, 6458, 3446}], 
      Line3DBox[{3272, 3460, 6378, 3273, 6271, 3472, 3292, 6275, 3484, 3305, 
       6281, 3496, 3318, 6289, 3508, 3331, 6299, 3520, 3344, 6310, 3532, 3357,
        6323, 3544, 6422, 3370, 6329, 3556, 3383, 6333, 3568, 3396, 6339, 
       3580, 3409, 6347, 3592, 3422, 6357, 3604, 3435, 6368, 3616, 3448}], 
      Line3DBox[{3274, 3461, 6379, 3275, 3473, 6388, 3293, 6276, 3485, 3306, 
       6282, 3497, 3319, 6290, 3509, 3332, 6300, 3521, 3345, 6311, 3533, 3358,
        6324, 3545, 6423, 3371, 3557, 6432, 3384, 6334, 3569, 3397, 6340, 
       3581, 3410, 6348, 3593, 3423, 6358, 3605, 3436, 6369, 3617, 3449}], 
      Line3DBox[{3276, 3462, 6380, 3277, 3474, 6389, 3294, 3486, 6396, 3307, 
       6283, 3498, 3320, 6291, 3510, 3333, 6301, 3522, 3346, 6312, 3534, 3359,
        6325, 3546, 6424, 3372, 3558, 6433, 3385, 3570, 6440, 3398, 6341, 
       3582, 3411, 6349, 3594, 3424, 6359, 3606, 3437, 6370, 3618, 3450}], 
      Line3DBox[{3278, 3463, 6381, 3279, 3475, 6390, 3295, 3487, 6397, 3308, 
       3499, 6404, 3321, 6292, 3511, 3334, 6302, 3523, 3347, 6313, 3535, 3360,
        6326, 3547, 6425, 3373, 3559, 6434, 3386, 3571, 6441, 3399, 3583, 
       6448, 3412, 6350, 3595, 3425, 6360, 3607, 3438, 6371, 3619, 3451}], 
      Line3DBox[{3280, 3621, 3622, 6460, 3281, 3623, 3624, 6461, 3296, 3625, 
       6398, 3626, 3309, 3627, 6405, 3628, 3322, 3629, 6411, 3630, 3335, 6462,
        3631, 3632, 3348, 6463, 3633, 3634, 3361, 6464, 3635, 3636, 6465, 
       3374, 3637, 3638, 6466, 3387, 3639, 6442, 3640, 3400, 3641, 6449, 3642,
        3413, 3643, 6455, 3644, 3426, 6467, 3645, 3646, 3439, 6468, 3648, 
       3649, 3650}], Line3DBox[CompressedData["
1:eJwV0bkuhFEcxuH/NFMJLaVa5xpELBPLRBARkclERGSIiAiJpbE0lsbSMBpL
Y2ksjaWxNLbC0nAJ3AHPVzz5fXlPTk7xVeaGsoVUROR5LYn4KY34pYZJJmis
iOjVKaapZZYm+4zmmGOeOv7KIxZ1gTxLLNNA2p1VXaGPNdZptmd0kw362Ure
sm8nb7FDkQFa7Lu6l3xzwD6DtDo71COynHBMxl7QU85o4yKp/VyHueSKdqrs
N3rNCLfc0Um1swe9Z5RHnpJ79i594Zkx3qi3v2s3n3wwTof9S7/pIVXmR5Dm
H8OsPHg=
       "]], Line3DBox[CompressedData["
1:eJwV0TtLlmEAx+HbNN4lcnb0M/gZJDNEfEU0QyRDRERfREQERTBdMhcPi+WS
tpQuHha1JXVRW3p1sQSPeSqhPJun6xkufg/87xtueDIrEvG6lBBCG8lHIfx9
HMLD9BD+aTatbJKXEUKLvqSdY17zhE626OAVbzihi6d0U+L+tr6lkh5O6eUZ
MXu/7tBHFQOcRe+wvYvewCC/eE81HziP3uHMkObzkV2GqeETpfYL/UwBo+wx
Qi1x+5heMk4hk+xH37YJTTDFFdMU8YWD6NuZGa3nK/+ZpZh5ntsPdY4GFrhm
MdrIsn/T3yzRyHduyLEl9QUr/GGZJla5JdeZH1rGGkf8pJn16K79TjcoJ9U/
TuMBMe4BmutWpg==
       "]], 
      Line3DBox[{3440, 3608, 6361, 3647, 3427, 3596, 6351, 3414, 3584, 6342, 
       3401, 3572, 6335, 3388, 3560, 6330, 3375, 3548, 6327, 3362, 6415, 3536,
        6314, 3349, 3524, 6303, 3336, 3512, 6293, 3323, 3500, 6284, 3310, 
       3488, 6277, 3297, 3476, 6272, 3284, 3464, 6269, 3257, 6459, 3452, 3620,
        3651}], 
      Line3DBox[{3447, 3615, 6367, 3434, 3603, 6356, 3421, 3591, 6346, 3408, 
       3579, 6338, 3395, 3567, 6332, 3382, 3555, 6328, 3369, 3543, 6322, 6321,
        3356, 3531, 6309, 3343, 3519, 6298, 3330, 3507, 6288, 3317, 3495, 
       6280, 3304, 3483, 6274, 3291, 3471, 6270, 3271, 3459, 6268, 
       3269}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
QlNzA3K12iDxD+9c+TIi9esDiTdxSk68HIG/eeGcFO3CFZJLlriFMW1ZJvkP
j/35qPLaURLr56hLgR2N19LcQH6xnYL9zh38mEai8Q6GMeyvi05KYff5ZhtR
QeoffupsCzmEN1nqTZzZ/dHn8VK/+5dxAqa10lj//LyZq6R/826LTZ9N8N/u
mSuM/8XnCjzPzsLaN+nL3Ur/Fy8TpSawgvAmLi4KnJYR/tXPVZfjxwmampof
QUOOxjtSPhRGXXT7tc97ids/dduwdlLF4SHiW8vNW464PKPpuSgT8Jl0frNE
ufnrLxnPf+tpV1f07GzKA+y3G+Hk+wAaLx+vXJ89uFwS6ycnQm0pTR+BL1E6
jnIOktdZLnY337Gl8W/lDQTuPyRL8iQafPQ+Q6Tx47s1Pq4RVJaa3KJU0vpU
jqbbeKGKaRNLopQ5z5XcLe9iabxp14XsTjoWaf2j1/eHj674tz6u/NMXpUUf
tdQ2bzL8t57z+30zpRPD5xq5P6X+i19yj9S2kmDBk7g9q+G3nouLrmlheaoE
ssj6Az2nTxL++Z569eLiAV53b8LUZqX7q5t8CIULP/ni1z5TYum5NJ33ZP6j
8wb6dK3NEhMTSUFBd37rmXgj4sxh0QcSJFL4CHuFP42P9LVK+lDEIFlfX8/2
9BQ9TR/XRJZQoZf2ko6OGcuZNtrQeLaEtY08NSTJffvHhBbCumj8qFrGfICC
gtTiIhJX33iMptubOD7vbo03Uth1ZQRuvKLxPNcMzVWUGaUnJq4+OJmyjKbP
mlcK26V3GUk/efLEfd+h8//Wjd3wWro0dj8jdza9/7f+q6iflhN0dJ4bcX2g
/5eeMO6vq0Y4o9Muy555gqbn/QUwFO9+QCBu02dfohVIeDD/k9dTW1TTHSki
qIefldMTLyEw0/3kowZbu0ITvtN0NvZs+MFj151suX1forNLj4v+gR9Nzxj6
m/HbrJZJCh88yBe3i46mj13dxWhUZSvp7a2gcNfzKo1ffy897Sy5RzI2Lq6u
9Eo7jTe0vWAup3Rcai3r/V69u7I03RLlDbZ2346R0tDU9Ao9EknjbzAmvI6y
Y5DOyprtE7Ojo+mzXjLZMXjDBWmsn+U3lurQeAeP2FSL1PfSGppNIgbpif8e
t+8u+S8lYPzZFoNFGr+w6GplSFUhGF3qH5/pVqDpGb6ARrIHHhB0nwZFzdf6
E97+0lOVCayrfWoJpzdnRj2RryT47/l5bsXTiruFrRcXCE/GBla3HlwCfC88
f/DB5+hXCMYJon90TvSLGv+pc5hRzSS9pJ1hTOlY+iJN5zG/DSwvBq0lxZMb
DttVWNJ007Mz+Px8d6fkydFj3SZHW2h8L/NK5ov6R6Sw/6PQiYfwe157+bG2
ESOlJJJPn2A+FEbjWyKvBnhX0kkXqFj4Xaqeo/Gl1iHuJ0/oSI8UrjZbs0OT
po9vaKvSrvFEvH3RMsdYGi98POdY6ZtF6cR1WaI8W7/9ezzTRVsoEvZcM7wU
x3aMNm73Li6+2iAbSNhmEDOcmuRD0Pg130P2ufKYrawlROmzCS99W0bYqPNT
z/uj/QfX31sOtieTKr3n6cEY7fnBPzeWE9I7KQi2Qm6nCm4JQU6BeCfO86eH
rdty4gJNZ/WDz9pmf9iNVNN6uquS84uu1W6BZjTdSoYDOO7faZU8tilUVfhw
I423rzu+nE4GpPojmLgD7ovT9Nkp4m64606YVPVxbRXGluc0Pm6vUQ3MzUnt
y+TJeXvmK40PzP/y7NByTemMQcNt38pVafoIhrskM/PEStccf2rOOhpJ41VH
CwVZM2cwXvtGk9kUjec4wTph1XqUwJ85SE8ZI9D05Ft0vZlY4ENgG4zQGJj2
IEz/0tN5/WLRqZByApejONoYUkgo7fupZ4/Zyv02vAzwSGTnucVnS0Bln/IP
fnnDBy0P4mFIL91C740OAsOFhQKcZ/rAskx7WgdWk7hyYqX1IO48XT1+zoVM
zste0Slvms4hwQf0jX/o3JSyhKtJckuJdUuaXh1Nz12Xpk69IkhI+ZIdkfBl
EZo+cpuawvPZg6XmFl0tCaOPaXwQ0t5hKv5VanOJ9UJk2CSNv5n1aL+Aq6p0
gXWIh4uY0r/9fts9g0jp2UXXsM/uL2h8nf6t24eLJ6XZS6xT42THaHy7T+i+
0i5pgpqmZjY/42GantzNJ9GgoQdhCVlsIfCFC8Hilx24+Qyii7UKCdRglkGJ
5hzCHr2ffOyeQmeLz0tA0SVadlPUN8LwqoAffGpzNaEgTQRWfXM+oh4sCJcC
lOtwfsPI1zD2ECNwEbqQpZx+Hu55j6yZxnWWic2Ebe5gNh5q/br8FlTUOnvp
Y/wWGT0m5/YEms5GN16zrJ38ofOtyVIRTDcQe5MuRNNHtdAieXrsMa7nRP3b
+zReILP2vMWZSalvi4saDqpjND7PkX/U8boirpvj8r3HaPrcOsYfxHoqVPr7
IurunHhC4/UC8k0vEkew9otmMw8oNL5D2XudQbsIYW5xcV4wTZCmJ9ne8IYe
5w1CyaLrBgdpe8K7X3quiWpbdsX9IyGxaNGAjyGNoPTmJ7+9Q1V6x+IM4f4B
vXSma5OEzOiCH7zMI+mLI5WCsG+GOTDtLQ9U0Lf04fxU6EiWxAkDkNh18cvG
V2ehYkIhD69zrsH8+tnIqDdEKbwVyn3iAXTHp7OWYbyl3u5ZFe8wuNvH4Lrg
GAFDySvVjKepMCvULeBsUkHTeYVOfgnzEdw+u/n53sV1dKsaEr5H0601VDF4
X+gozs/tKOmn8fcOSHTSGR/FdTnvfY9A04eBnLBcrvox9ttt783ZQBp/M0vD
6t6pPpx/5wo9NF6B5JRveEwA1zGuPGsvTU/5I5JKfg22hK7FRfmWN5aE9l96
Ru9IjlB7mUJgbFsUt7v0ljDX/JM/LXrKzdrpE8Gz97K72/khwlxr7w/+lv+4
DmffXiyfVSaHsXPBjhyPyR/nLkUe2NbYcRbE5B9Z8Wuow+FSg3X4uUK7e58G
hZ/zgs3TXSsLbW7C5iB5eg2MD/wWeWW76WsYLzn8Qc0pAnLdb13W/kSFUnH1
3cuI6bCEvUT3hE4WFEmcqxNKoILc8V6zl+okms5qqrkryQPDWBw1XMa+GtdR
Rqb/Jommp5brjukwbmlcH+YLXaI0fQQyvYOi5wLw3zneFd40vtpN9eVXzi68
/ZNvcs00PrvxoeKlqd2YjrlaX+7toOk5wKObb61pTviyuPikW8GYMP5Lzyoz
RqUJhnjC4pTrftWrUYRDYz/5T3G95bm+AwSvzdeXJrUTCVv6J3/wiuXVn59v
2QGvDCWQ9fONkJUz9e3HuVeuFcueZKsB66iaepmpAizLviyI18GefPtC/lTn
TSiZUmcxGrQDG8cLe2Mx3mipEWrVj4KrdTsVCU+CIb7pbrYPNj4doTt/aE8+
BMUc2zi3ORO+tAaOr7uF2YdgNraitFLoYxSdlLWvAgWBK/Yvvcah6NvGG2ae
wzSdu1TNF68OkTC78XhkebQIrgtHwrAgTZ+sg0FUad472G+ZrOIedxof6fv2
ucWjRlzPe0XqNTT+sKHe8zF1TlzHEKYPG2l6eve81d3nYkjA/vnXD6TOEWZ+
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
Cl/P7+K8eBTLE//hp3w1t05jeWLLR/WiuVcJNH71qVl6mUnMbm8q+Gy9pojG
07NINekEUuEAo7q83tcmGv/t8sAZ/dXj4FLyykpMoofGj12VfRY7PgL3ohWr
nPVbabzbVfnGASzeZst9PCVJ6f69Xnd5ar3M8tE/5ol/df6r81+d/+r8V+e/
Ov/V+a/Of3X+q/Nfnf/q/Ffnvzr/1fmvzn91/qvzX53/9+js8ut96z/8P/u7
/qR//JiegqfI7/vp3Dy+9Dt1BJib2n2QfDyNb9DVv3ZzivpH/lCC9gXCqt/7
LdPNaxdVgnr/yP/p/v/r/fyp/7/9/O3nbz//937+v7YPf2r/p/v5Uz9/sg//
9f/60/38V3v7t/3f9v8n7f80Pv9rP/91vv9t/7f9/0l7ev/h77BYTuPlDw7e
TJen/uX/X/iMRjPYqVhL03nDQF+o1uQ4dDTcfbOW4fd+MDkhrQtbxAb+2P5/
qv+/1/173b/X/Xvdv9f9/+e6f+rnT3HdX/7/mf+9X/cn/xMm/seey5/45OOW
h/pO/N6vfu8Qv65GT9f/On3+t/F/el5/av+n5/Un/f+0XvGnfv4U9/6p/z/F
w38ab/91HeNP4+1P1/2vev7X+fI/tZ7/X5/jf7XPlqXbnHJPU1BAT6YlhiDo
4Ms3Y9AEj9t9Eo7upqD3X+cQhqBh0bA/sqQZrFwmDh6O6UW8cq/MMYSJPmFL
AY5esLXLtN+6gwRj67brYojojlV8kh3uA+XuW8dcyknAv09WCUMk3Kuh2VhE
hiq9CelWxx5g8nMwwhDRf90zFrHQD0NRW1mDpFrg0OWUQxgiJTrNiWj7EXC/
rGCMn7foTKfnjZ+3qM6xyg0/b9GCbaCMQ6UWWPPsejFETiWLS2vaxkBNuriU
NTEHxE9r0LMl5iArArKy86HC535GB4H828B/8lY2hsj/JR/9/AIVKJIrltaM
vQJ/BZWDGCLjw5t6/ahUkPyg84BD7jKoq6xuxRCNuB96MrZIhWX++q+F+O/D
/OapRAzRTjK90bt5KmzewS65+fhxGKD6zq8/fhzVF1Zw/Kj/kErqk3lvAzkB
tzsOvbdBkSWxio34d8ceLO8nb3NC/JkLsu88OJHtdMYM3v5GkOvHgnRVWP15
TkI4RRVVWN6sm8d4Xf17sVeYPhG4crilq2ImcgTdO3+se5SZD+Y0qvBC6rKZ
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
zuM1Y7dRTJG9cRr2Gok9NkJFr4D/qnX16qJXqPe5EuMiHtdymTlZnJmTlZg5
+ZeJ5LkdCySo9Lgt+3ychB7k3TLrxPXon5jTtdF/yeBLPlvQV0VGu4JJWhvw
9YrEUVJd/XxS0+Gns0rc88mCkbT/rk/IPxWariewBeIkhKcX121BzW7k/6xP
2DYD7vtzdcF+3aKhRo4u+mD/1JbI/zsvpzZMv3WCwe5OsS/xTkj4/bbyeuw/
7Pir3FwSBjHhThGnisJQIMe677o4v40x860fM996M/OtedINnqLKdtATYMh9
cm5HuzZHXHilMwqunuFyv+pJUPXpPkuiPgltcsict6ihQ3ipSqVZKgUUVkdk
yF4jo7PmLL9OH6DCmy0topmOaZov7Nme9p5KKyhp/W8e2zzf2cs/Pqi5RkLY
Q7xosIBfY+I/Pr/veVunlSAcvKl4YLu0IGo4vPw/OZ9TY9mX63NaMCtk6Pmk
UAuxn+FaQ/gBtQ4T1j/XYGeriUtXwjXEovTJgIJ9aQmN5W1OEHyNCxpIeByE
VtxKaQ/+wwAdZl51/D/yqmP1Zt/ZvWUweCHgVmJkCYquPOnwWY4BNg/PBxDP
yXIJpLgSz8laxiuhQzwna1BG1GHtNjLIn850163oQydWrCjdozQAd17Qby7/
TgWpPaJeJv0kVB+ztDo9kQKdh7eF/1Bx1Sy3r+lZ+9euoIOZV4MaeAt0ddM0
hUJilspvxRUU0pl9+Mvev+v6MKDpttb96/Ta7oIi4en/eIc09Cpw8wZos/n7
yTWPF3XfGv/P+orNYkM+xZcPQY38pEp8twZ6YMtnT3gkUY+Of7cHf1kzL6mQ
C6hx0KV5DPsYlr8lEaYBsPkDD88jIz80bnmgzRKPg1+YebXy/8ir/vv3cGbd
/AScQt2y47pvEeNPsO/iKAMemW0zfTRdCgEOa0088wrR6/esPgrHGXDqCtvy
q3i8vg2PVukG9KMGWTBiPBoA48ExsV1vKtCdzPwA+TcVUP5Dq4RGnYDLtiPx
XKWdwKc2oY6J+C/LTkbpjcBrLWNRDuxt15lns2MfH3hS7jX2d/wLA4nnhr8P
mS0inhtuMqiwhXhuuEZRDjljDwnqZa9MYKKugkgPVpMBOEDuvmZuTUJXxr59
xgQJL5vcUP4BWJduPkj4sjwNKQvsG8KD2Al/ldxvIVjUAtmB58c2FrUg2ZvF
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
xFxnIJm5zsBx5joD7sztJZnb1zO3N5e9lPzGMw/mArZILx/IRT7lwgFZSQwo
Yc43t2bON/dlzjd3YW6/LvC/2z9lbi+5ea7K0J0C/c4JxyfcKUjkbv6xdCcK
WC62c8tMUQBCj93zxPXpRr5Rdws5GlzhL6yC3BBYYlHg3J8bgpZSpuunFxkw
Q34S+ZQtBsyRTw4mElo84Eisx7JtxeHDzSNxoNrES0keiUPbd1BV6n8xoNmF
tNpi3xfY52N9T27fF9T/UnTLbTIDEpzygul/s2CDTmFj5N8s1OYpYhb3jQES
fTr9fyS/AnV/H+md5Fdk8XVx2al4Bvw9q39TczERYH+9yRw9EQme9triw2BA
Yc1n7dL2XHAwnHZJLctF9vIPog2SGdA0zxfo+xmB2MSnU+Y+CJkGLG8Xf8iA
Tt1Y9eLnpfDldvOzBNdSVNNox14iy4An1NIJN+X1+yp09DxujKzd9z/rxC6k
f8o40Lt2nz69y7p6I98/X8YibqQk7L9vZ4uZztHGJ/+887Jbdm6VT/YdT0jO
8VZ89M+zFh56tlCwuC8kanqwUWPun1+8sXzz0ZHZfQfCnKe09v365x39j7Uc
c76oNk8ji9/5bKv2P96qe/lwQq6NWrVHsWiBj9U/L7KtfXNeY61am4e9nvNA
5T8vcMbr6/P0MrUqD8MOQ4Xif342w99vQUhOnfJZVn7JXEr9f7x7d0F+APdm
db2ljOuCDUL/vInNu43vy06oDyzBx00k7X9eeJElyG+5p3riQTWXLFn3f76u
VO9yK88XdQNpx0KhtKR/fkq+zCZzw2f1vdPBPEv8/+v/XPLhlb7BpXHFUFZg
4PcKjf/xzz9L3dijwKnhb0+uUZX+X192Ts49LuycRor+67uRp8z/+SoPjUU9
Q0uNZiiKajc1/ecpSOBAf0eKhk37Zv4/nR//+eKlr/373ZM1Np/p3fNo6/t/
vnJp/Pe+z/MaOjzGRw57Tf/zNR48B7pv/9SQOqN4t/zI5D+fufQlxYVfTdOg
nZPlZoyy5v/4uCUdZPFaRvPn6b3J27fL/vMtfx2dyr5f06yjjl+uPO2oSWGu
Y0Bestp4IEJb894H2RtH+fU1l5h+WdLA1+4F14ITvZuRwytvzbNM/6i/56kS
PXBf75rQjA2zvv+OnynVJasLZ5epifOkSVd6//7ntxR1vkqUuqJW2sS6nS37
wv8eV5XHlS8uNKpNrua0NBqu/ecznl+rcg3co/75TcSJ2Myd//bXLj1eba3b
/upRZCNhtatP/nnRzUeLX2j3qK9JePiNItP+z692sbmip8Ol0T15PfhExv/u
R6eDYVvvVp/TeK44o2lu87/7cU+Q5qr/j703j6by6///k6IBZR4qSdEgJRLh
XK+KUKkkKXMqFMo8ZSxUpsyiItIgpMgsduZ5nmcHx8wxZEjhdyk3v9/7u+57
rXut72etz/qt/nqu9VhnnfZ57r2v/drPS3tvRXGEZOIzsQRizAovW9RkPyI+
T3guST083TSzwpsXfXQ4mU5hmYuM16JIhBWfKReCb5dSOmAPxeI3uqH72LNl
3/JNG+rjFmIwhy12F0OUP2K3l8+LWPNC/1rCwsdMLVHfkCMKuVii2x8uXz1Y
mtZDIb55XOts+fqFFT/3ieb50xbdFZ9dDGSZbLi94pt4ZVRc6eZa8buslgpv
QitX+K2uMk5aN2EJRZ2jZgR0ZMWf3obw78FbfCWsopomLvt5rvBnQVP0M097
JR6li8tcU+1a4TF799io3xMk3NkVadVfy7/iwzrxOKsXzNcJ01t9qGwpVVY4
/7q7abUX4ghB4rvcrZpXxz/x7XSm4Zt5wuOoktOVhat+tjmcGJkslsTyFtOO
ra2BFT9LFoQWRTqcMMrFnGCLw46Y2rKfad0Jh4ay0zHdJt3SdaHJ2I+YP3zg
R2FpsA4J21JVf17qAQnjDx3/zYWCDrltHGnOTHgvuD1N5RdmPFT8m6s8ebbg
ed1QvO/WuZhJdr0V38oOKtVtP1QnTvOiIsz0QdWqz6+tko9xiUgo6YbUH/kl
uOLPk7cZbxUO+Evsj2s9qW7kvcJLbRsvBVgPSTQ70GjXSfSu8No1Wy7enxEn
qDV+Ev1qfWzFhwK94J16DQ8Je1xf7dnAar/C9UMaz+4e/USIvGCQt87qwwqn
umKsSaj/STDY8eGoOP30Cr9ne+ZSjbwkphZyT8zAEVvxc8Ni3mjvgDP2ZIgu
jvjIEbu47GeWOvmhDU0WZrI7w5vuTDpW/uQPr6hQydDUm8SIwk5NmTCGcY41
/OY3iiwKe7LYwE9m5lV9OBvEXZb4fd7L9mf9XlKSa1D49jnl+jeHYOgT/e//
T8pSyND9yr5OXJkpg3csadXPn8NVV548EZEgXFX2vHFSaMUf9qEoidIGf4nN
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
7sPf6RjFjl9WZmQQW83r0v1EjvnTeYjlMK/Pd8lfzeuKxr2/0Ef8EhNSzffj
413N5QIdbI7nSuuKe01vusz6ZDV/+zZnbyKjUSbuW/KIK9BlNWd73pborCnI
JxFza8O2kmDelbro1o5qjJHVQSL+p/OX5lTr/yMfk/9HPjYwsedzq9ZGwlVj
ykKMvJqThHNeHd5vfZ1gO/B+6/s9qzkJ0dy91C7oM6GvhtWebLi6ry/ocMhq
75glSNy+SJfR+H2FxzXsmMgXOo7Z3HUrD6I9tjLvijKHdyfn38Y+sIvK2zHo
YcPL40pqwJOyv91LzFbVfiR9fDVfmu+S/H5VcY1485GpY1aWq/lSOEl91zFq
fXFZM5UrGS9W86VD05SWzhVV4gZclCgofDVfyimYz1QUEZSI07wzSbF7NV/y
97gp5HbNXWL45ulmcHi0wk+dPW0idLVJIp9LlkIgs/b/yJea/5Ev1d3c9IwR
XSeo5ZWn0l5Y9W24ixQWFxxH2OHxPrr4zWq+VNIy8/1J/C/CEfbCo+V6q3lI
oyFKPXLzJHa7Uap2a57Eim9rFy7c1TGwxXTyzco3vLDCIpd9GzWWZum9+A5T
WdPTfc3nPeZO/sOFK8+GeCoVZcpf3vM7x1vU+MPr1r400OykEDfQeedptjC/
4ucd/cc9OQl3xXVSXERG81fzpdJCzZvKozXibN0VxkyPVvOlNNWRW5NnhSWy
pQd8R91W86XJR6k5bu98JK70trRI9Hqs8KIXMZKC1iQJFy8dpnlL4go/W0bz
3HuXAGEuZODTPtYD/0e+NPWPfMlmzSG5PRBHoMEex3FkrY7Dvv4c04Wr8wQp
9n35iu6rfrY6mCVTqkhiY7eC5jt2rOZLZZynu4UnH2KLR+bzkrrtMf1lP/0f
CW7ZMZeC7eBvDw5WTsRcvv7hTZQS5pKyHdjOQZctrQGd2E7in3sc7ioOT4eP
LmRqWBaFLuV48yU5v/nzqIwdvFcNxTPONVszMazmS+JGDxnVt9eJP1+/4dBn
k9U8xHDs8S7z6WMS7+No6z81re7fGcRVDzYS/SQcsOfFHUdX9+/vv+434Uoa
lAgK//rELYS0wicSe5m4rogRonK5tGX3Cq/4kE5ySGzY6Ejwo5rf5x1ovcL1
lvOlD//Il2yo2wPkk38S3pJyzvnNrubSjIlK9yYYJbEk/TSX6Z2r+dImaknL
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
23w+F0w6czkxs0GgXeYLy/zeMtfR1oh6SlkJEwt74q3PFKBNtcO6XPdG4Q5/
+0Vmji7ULfyclOJUje5mZcvOJvZDQeDeax0HukC/uTWc2FUBIVVmC77bBqBo
mV9Y5qHLvPajrCf1mSZIvysmfEW6Chin+po02IdhdJkXLfNNy9yxV06u4ykR
tO5lRYbX1oCemuK12cZ+OGh6yk1jtBOiGNbumuSpBQ0H+vQLIgMgvMxjlvm1
Za7QQ+rn/EUEIT6eqz8318Cey0GD3+P6QW6Ziy5z3mVuzM9TvjnKfHn9W7Om
e7nuqsj6857xX5x78j9z9xCH3+8f/8Ub4dd/5PHRFb/fS/6LP3WW+Y/82Y7d
k0vvK//FR2rz+/8THy3L6Vi6d/hf3HRbHfPCf+C3Hm3jRMhshefNvmQl4Zyh
jVNbEq+f/8Un3a9sm1747z9vvU6DJmYmaoXvvey+Jvz7v+d666O1+6KyVjiX
U3lqYNy/586MpzemoKoVbhYXEB+TOfpveWmsjpZlbPMKN2LTebWHZeTf8rVW
cDXuWMcKr3ucM/KWPAStPdunqRJaVzgpZ5J1KHgYOmr1gPtM5Qrf2tcTojQx
CvJxE+d3dnehf3HvjHtBvbUD//U4/G/H1X87Tv5v9e9/21//zv9/5/Nf3/76
9te3v7799e2vb399++vbX9/++vbXt7++/fXt/65vNMt/j/0v3vfXt/+Pb3/9
+c/+/J13f/35689ff/7689efv/789eevP3/9+evPX3/++vN3f/q/2Z9/997/
L//L/yf4//Q4/HffH5VG8Yj+fOnK5yN3hUydECbDvGqUgYjR6t+r8KVf49Hd
O/j3838///fzfz///9vP/7u/3/tv/67v3/H/9vv/p9vzt/1/2/+3/X/b/7f9
f9v/t/1/2/+/rf3/0+35y//2y/9m/r+tX/7bf9dvxJde+CIJ0V53pcMVRic2
p7M9qoPEup3iqYY9KKO0mAFXcGC7Qla2bgFX1cvdjrFEyAv52IEr4p7+jBXP
dMNm9iF9k/oE2Htw/zNcUbVj3KxbERmmb0k4i9cGAWm9Uxqu6PjzvphDP8nw
aeCahGKPJczxUoVf7rFEStzKb1MWyfCUWUquvVQB7vVknTMuVUCXrfYTls75
NLAXu3zm0T4Q2XWVuYBvH5oRtx5Zysc2GOgNvSOQ0N0Po4O4wnjovXThLfWA
vae9JGRIhBim8bO4Iouu79Mj2j3gMXlyrMg/CcQvbWUt9k9Cx7be6lj7jQzN
H4kzTBkvwP3EjA59xgu0s3vW79cPMjx7H2TPZGsDjbYhpz3u26AB2Q/Pwpfa
SXqGzHyUQOvHzTIbOiVE8f3Q9l8416VwdSndcQr6B/eo1bMxZPaOTXxcaufk
iTpn58hWSAz4UYsret8iYMWU2w9pTxSKawVJaDbyRCGukGEzd6FTqx5cfDqd
+remQErG45GWrSkorKFqVCaZDPeOKJQJ6IaC8uUgwtqboUjk8TObglkyaNGw
eUwGOgC6PFH62sIeqXucC3uM/7t7RHsCa2iNoG9yl9SnOxKZnlWyPWSce6dd
oyve0w4WmgrncUXH36ptOdLeB9wbtS/aXyLCLvPririimrNjLnJBPUCr2M+y
kb4K1Q1esdlAXwWLrZ9quSNG4ATNHe2l+xZJBSJSS/ctdvdYxizdt5j5STIX
+ElowtcM4Qo+fbKJC+71UO99Xlqnrge1O+1SxRU2m5qTzv1oBF+t62V5J1tR
a5CdQP7JVmjOk7euX+gHVaWraWcmGiH5430rXFFR8tZfE/GD0HJAt8W4gwgK
p3LrcEXTVfemul91A60m5Y7GTUTIvHuBG1fEKnP/I5GGBM+kjtdobmiGNRxP
T+GKHpynIXYfHAT3fSHE2YOlYHVcLq3+YCnySzk3PnV7FAy2X5e2OZoKibzr
OX/wpaK9XtqCFz6Twa8w7UpmQxhE6bFQCJa/QlRGQ8EvZ8iQ4WLacD46ADwI
R16uzbieqVu+W/vAAhm4le4aeegRga/o6ZKiWyGd1B13e4CfHHhVp7QDFDaT
xHBFvN95Xnbm9kKCV5A3vXEbZBncb8QVuSQ+r7l2vh8ubbtPyr5fjC74Xm3N
ul8MHw52O/sFj0LYd8a4Q+w9aB2PtC+uYFcktj5Ppw1mzEfNag+SEAtHpAmu
UOSlk77Hqx7S1TT3yOb3oEJfJIwr7N+b7ySp3gSn2Ko7zctbEISPHrcobwGK
U1S+B2EAbk/LpLoZ1sM49wUbXNE7+YIDusVDkEQsK5NOJIJFoncYrmgL/90v
eUPdEHheYer+m054ILCJ1+JNJzonP6wtG0uCg9US50blmuE+F/jelWtG1cFq
Nz9sGgR1cYfGseNl4DiswqCwrwwpplDliJwdhSDmFIp9p9JhgvvW4LuBFNRU
ez1GIYoMxMffXZlPJcHlcoZDUh52mYW7+A7MdZLBca0901bmToia46PCFQkq
plt9fNgLTUxsRce8iGBnTFmCKxL3Ox+QfKgHWOWnfsrktkG2cIWgbG4bcjAZ
djfj6If9hT/tOxgLkXVtblQ7YyE0WlQ2VTaOwiedXV0h/d2odPxjEa4gIC2R
H6rXDq4qio7xV0no1xYpe1yBqonX68apOrjeezNxprwHtalbFOAK7zhjzWn3
NEHB+k3yxza2Iot9ppm4QkJZQ+xzzgEI99vDtft5LYS4LXRwPq9F0sUbnnXa
DUOkVOQtx+dEGD280fz2cyKigCMP2bb1wCmFL0ixuBMME3xV7As7kYfV/UPU
5iQg7521uvu2GYbeC6h+tG1Gxz/otjT3DUDOx6PmwFIJ55oeS9nfLUWz6L7r
PZ5RSIgQfnKjshIOO+Sn2C/4ZnaUbDwo0TkKmnOXnBfP1MNnztDruCLqQJ95
u6YhMGvzbzYUzweH+IVoXFHTYz6p9evJ0D7e0tHfGAP1TuYBuKIjJ1K2fieR
QSXLgp5jXSfs1LVejyvKygoernjeC+uyZLd7ZRDhNB0dJ65I2mUXA2VbNwyz
kz8s3VM85qj+eOmeYg+G3bZL9xQjF4cBxs/tQPSlYWD63I582DNfFDn3gdPI
do2LmwrR1J58ywubCmEDF48zahoFrQLjr5I13ShlOiICV3hxUkhVt6kdSI5C
IgXXSEgh8dmSwtA3sT3xx+ugwfpRwNueHhT9gmYSV4iRUcv09m0E5mqI9oxr
Q1QZdgMRcW3Q0qSVP8PTDw997AesL9ZC4bCGRsb5WrT5k78POWgYejqdO9Vf
EMGarbtZ2J+I0LDI4eydPZDsacrbxUeEupifIqptnchaweteJAsJSp0sD4ge
74KowS2HihWISOSViezpkm7Ysj507YM17RC0LWkuwLURcVs+/TFpMQAaTy1E
Rqy7oHdWMlL8c3imfsiOOXeuQcA2vI0aa4yFsu0qN3FFI9w6YcJd+Dp7/MFd
izkf4PmWIIYrWrw/Y2Y9T4YdiYkxeYodEKe2NgBXJBpjBiKsfZASJNT65TQJ
5bqZlxtJk+Bev1fpcFkdJIQapw6X+sLXb1sf44qsNrdOS+Df86vpzq9YYRMo
qHPNwxVJzQx41OPrC+3gBX1i3CegbfU6gCv6ZuK+0QOfp5wGyevUuEmoxa+E
6Sm+XmdUr5u2tqyHvMH3nREVo+AV7K/4+bBRZuBTnyZr2SrIad1+58qwMVy2
ThTEFbkFHmtcuq8ht4NHoOmeHBhxrKtrvCeH9ogV6i+9v9YT2nTndYgv3D9M
PIYrCuXtKT6Lt/OI97e5Y06f4J2oUjyuqKpuzrsfb4/OgXu38i/2oKZyA/vT
9SRg4nW8lSLUAPfsmSkEd5yFrRN7A4/sOIu2nqCOXvr+gbpNhKMFXKDwymJW
qIAL1UwK/T43tbI9vnYi3whYKz5Y4orePC6vXDqH/HiJpJ1Iqg+4XTnufSzV
B43ulf3gjreHunq9EodNLAiLyrYw2sSiE9+u7x7E+6sp7lJoyFUiiDDE1sSf
J6L6Axl7lQJ7QI0nch97YCdiyZ+/egtfD2QdtUkx+5uga0J8nLZ8O3i9MPfc
UL4d6Xo5/1hqT73F7cfiNSNY+N4SOF4zkpkg9OfeB3dpNCe+RgamW42pBdbI
oJe7bGaWflfg+omkU2fuAXUqkzPTmXtogoFDqRvnrZZN84c1vcH5lTAVScMb
qbJLkvrw9icE9yR6l8WAyk975V8lMYjgeGphYy8ZEhtq3mraZ4PMW89EF5ts
VPrFSFb6MhmG8qf6s7hrweu5Keiz1SK73Ib3ElHDkPjG7LpqVTu4sVH1Cr1o
R55dKicSHftAdcuQyeIbIuwP/fH+1n4i4v+gYNts0gOCijftr98nQujhzjSM
qgNp3Nzgp9RKAmtHWjvDS43oxo1XfepHe8HRpfN6nm83cCaWiwoPdSFt51Ch
9loSaPOqF9o8boFjBpaSKSYjaLj/uF+j3BeML22hXm9zE2Qes1/w2NiPUch7
3JPZ0J8ZOvHnvoNzwe0JtusSMKbQfIsxyoTMobI/72djKiqJVH2sIMUnzejd
w4oUyl1/nw/ZVJdVx/FGEgp4nplyhUmiXFMpWOKXFyyEnwTrwXaGmZymp3ro
TKj18NI9GsOkn4fTfDzhyyOab9+tPZFVffpeObx+kKtbSyedFwX7xyJvfg6O
Qovs56SSB8gQq6ERYiSVDXwkdZs0qmxEWfHD9p0yGcYFZu98OFALYqGxziwv
apDV9R8ezpnDIKExRtHxpAMmv5/4+jmlDXndoDri7NEHNPtY2OOzu+Ct8YIW
b1gn2pbI8GC2uxvazl65b3q3G6QvebSf+dGGBFmZ1T679YBnh+uGu5Jk9L74
G93cAVds9tMhM4ULJRB5YNxOKiEW0+lns8oVi81c6PrjjxTtTYtT9N1Y+0LO
/f6PXZn07X/OjfTp997+PIwRLrFLtB9lZ0Sb1zH8PjeShN0s2pJ8AsQC+qP6
d5xA6eHHrJe4rbMCQ4yDLiQbuNPlaOkgvZm77kt1LJZyK9nuoDu8JZDvz1i6
Io6z5kff4r7x3E5SFI3+AKzjt1Uifd8jjiO9TGtGyDDFyOVVqZQDXJanh4Wv
ZaFvEUJazlfIkFrBt635Th20hQTxjSVVo0fZBsEl+PjU+DLKF/q8E1yOHujx
4G9Dr6OoWkm7++CJkIzzfpUuaGuZ6lT5RUQnU5vzRBi6ge4ZlcvW8Eb41GGm
aVBHQtRtxSLUPfj+qDlSLUygB812mi0qqncipQXfnQ+icd8nAs5f2kdG/k00
ZYz+/plVut3Sb/jLgO57kUFWN14/jLs/wRV09GITwoIaIUK/hOfK4zZkVmX8
DVeg1T93swb6wSFshle/pgFK3zUk69U0oLFfVgupR4dA2XbHJp46ImjapFHi
itJonFyD4vE6rcEp6z4XEZjnt5bjinhzI9HbgR6Y2zBW12KXBO83h65rtUtC
R7JuM7rg+6PhztTbN7qew1FiUCSuiP/k9xnlOTKEN7ZdFvtuDT60Ut+Of7dG
Jq+pSqOX+v3jXi03I0WYWGzh4DRSRGdGH35d2h8Jfya9VH17AO68u2nme+4A
ohfjGFzqX52efVUKmbTQeqdrjOltfSZvLdfvcXLmg9xDTJWEOvopbXCFnujX
PpU8dcCfe/tOEAsJDUcE2+MKWh2Nh+/iz+2YWNFHx/F6SWbYzBZX5OmeGeOA
10uPOm6F17qmgd6GgSpckVRDtK7te3wfF6y2cNc4DLh9tzQZGIehT5tjutzx
ep4h2Oddj4EjsBDPKewxcESPiS92WuPtcdK2fzj+SwWu605cobNTQW2P1+gt
nWOZTXZ5HHJOElqx4ecbpTYj22OCr5faz5Mql/NGjISyqrTKcYUm8/UGirz1
MNAWnbGfA8GOFJDew4HQ22MLrPyP8P3FF56bgYsRsOkJmefNQgSq9W/9YD9J
Bq4hfrHgOWcYaepIojVxRlv0Isz249/v2xaeIBNtDE3t2lVGR0+jVtd7NMM4
p2bjdew2DQIWV/uk0BMWaM3gWqqldSepp2P6GXcq3DJpvZh5NwyNT7Es8NeS
Yaa82dipKBcEVI6ewxXtq5Q4uJ6HDBbXpnkfkepAxGyeBlekr2jYLU4xDAPL
ddrIP+o04S6rvUzfiSDI/40bV+TPpS/JdL8btt4MtXOu7YAy3vSXuCK76PJp
IdQLO6cmfCXkc5BulWaLuHwOPI8TS1WQJMN0MbXm4mQ3etQRa4ErrEM9RmmH
2qFMWNetT4uEkH+S/4AW3u8k2vBoci0o7jN78nMNCZl6JdhwUpCgSnzzk7yy
BqCxzci0/tGBXmgAX/1iB0y0r1H9+boXbDbfXMsqUQcRqlPKM0O1qLW46AHH
pWEo+0c9dmy5HpP7xhz83rkHFLkZwq9StqEXPnvZjlR2g5DetjW7CUNAsWbs
sZR3RKbKD3V+xZJO2OL0lF6eMhL047VrL1JGIkdlhokp/PnDpy1BbpjLAlnh
2SpckXFHrMxXNXx9qfks9WCxBlQ9juzDFRU3FpzOShiGMaVbvuSSdoiQSbfG
FR2SvBToadIHyV++fZ1qIgKbvucXXJHj5martg/dsG8kq0YuqRPYvQfzcEW8
9B48Rb4k+ETO3c0n3Y2mTordJEh3g2KQ2AednE4YSeGMKr5EQnuasPh7CiS4
a92zbaNhHXTuzrTN2UtChIItAVcOkaB116tOu5f1cJ6/M5DBg4iMGU3GQ/D9
9+kCXln9wW7wepqpxHGpGkzSo6KmrxcgotVwjA77KDy8xkhxajO+nq8V9Ip5
1IjkOY6/1nzYBa89K+lHE0dg7J0IxnzrM8JyIm880muAND5OuYCOCJjh4OfA
FfUa6699h4//oeqI8oLOTIAZdz9c0c1kSxh7TAbTF9aHTdmqweEqkRFXVFBb
/jBYcQSsxWM6ii3aICndCOGKFuwGcjrP9AO2syELPhLhtmAvJa4oWJv/DuVc
N+yuJXaLynaheAZaL/ZzXVDvzRJxtLELXJgTpciHSOj8B5vUsFMk2K014+hy
tB4+OqZod20gIR1P9MraiQQqPm6SN4vr4MLIZ+3urk70XpXZtcawB46+z9j4
Y4gIQndEv1JMEcFvkE/6KWMO9CiHTeTSDoI2ojvwlA/fx4/WHBCZikR8FSwt
JznqwGvAzlJQJQzu1DidwRVJJ5QmRyzlDNfc33IopoGmQooMrsj5MjrfHYnX
exGfF1We9aDtCzZeuc4kONOyRyJJtwHy4/jFmfS70b573Gf2UfTBBrldckJf
6qBS+vMce9ZzeOUvdJMu6zli47lB1sWf5yd4HPv7zyXBYvZXJeK5JNR7RmIm
NIsMbc9MT5bQdCGNHYI6R/F9Qjy12C6+uCagCZytfru+Db2/mtbLvXEQ6jdq
zD080wDbXT92V+cEgOr+ZKnLWQGIolCgSO4XGV77X86LSPGBYveroW9dfNCh
r9kNvvhzKcA2VDlBsBM29Mnr4IrCro1LUV7rhbUdaxcMYxpgrZQhl1FMAzId
OCGVcnoIVPhebT6a3I5So8TuCiW3gz8X5HPjdSNdke5JVbzOEXbivYorilXt
01zzvReMCSwJuwzrwf/rz3JcEUEp3taneAhK/CuZArwqQcKO8A5X1HjuhGVu
wQg8i3f/UDDZhnjeE7lxhQ3aG6anf/VB3OeUi0bs3eiS6QELXKEiWnhz7D4i
DIkqOZwPi0AVU6M2l8IiIDCDQew7Pm6l5h4b3opvhdTxsuO4IgZpIQ21zH64
vH+Im32xHfbG+IjgikYjWLuQfB9knphJf8tXB1cXPapwRRbrJMeuyg7DYM33
IqZtZcBZ87mVeVsZUor/mNkuNwoVr098ocM5ddSvvC04n22qs+7AecfLgYKv
H4iIXqvLB1dYuK19SXQNXr9dd9uXgXOdvU4TS/xkWNo7EZyLVjx95S3fjfyf
eGTjCpS8x9Ntojvh29UzE14438Iow7zELd2RnB3OzxxVSgrONgdfSV7P+9nm
6Ir6j4pcfN0Z32bQS5djDnp3JDLION9bbVO2xAeGKWXzYzvhYjuLGK7o1HFL
cYNQEtA0kRWX+LWStTJLPHbMZe8SN3ZTmXjLUgtT0j+cX7PUIkHNYqWYmGG4
WDe798jFOriz86UnrmgqvmTsp9gwnGOdWKCeJqJbCuRyXOGVmIPOfYtuuNDe
m3Vzrhv96KBpxhWiD7Il1NC0g2rru/MRgkQkY7jTEFdQlkt8mF3SA5pRwfI0
Mrnorv4NUVqZXPh2qeFFzmEyOJDel5zTM4L5NX3cQnpGaNuVu5fa8d9VuFC0
STO9A7zuCDZrpHeg0jcxWpmVvRBL4ZjT8a0TJmf6Y3BFjTcCylUfkmDkqCBh
E0UNaJwcEtu5UI3mZsRL928egX2i009OujmjC7Zv1gq7OcN20Sub+fHv//6E
OpjqGhHpat43xRV0nqcdPufZA9MVAnvjtpBQ0XV+Llxh9tXP0ze0G2DYs8Uo
aWMHch5NzcEVUu0ypD+d6YMxU2ED0bxqcCe2hoXkVqFyRgH+k9IjMLiXpv62
bhlcqPsYLhSai6J98hlnk0bBhvMG3TGuUmi5yn3uDdcXtKEcGctzkWFzxZ86
QWq5TuBdrhMavYu7pR2zEOHg9bW4wu0KnmRtbTJQ5S/kmV/sQmNeJu9xha9m
TkqjpV3wMue+Hsc+Ekr2mtHGFaYnGx2c4utBfnkdN1pex/uX1/EJmz/ruOPy
Or6+4886/u70Z6+f+QVQ49Chjys665F+X6pzFGaqvyZrXGiG2ES5u7iiN1UR
XeX482lwe1OcDjO+L7VqOWfOnA1Paj4x1Kjg++K0oSny9R5kwnKlM9OgB2Q7
MZvxjy1Q1RpkEKyJ7zepZmueaRKRPudhKTvHHmhW3kVtlV4P7FeOnxJLr0fu
Q4dznkQPwY12Xrkjg2VIjyMa6ySXQatqtq6k0Cgwv91h6T9RAvTdLD/8JkoQ
Gyby4JPhKCRS8WZSEJpALfcR36JEE+pyo2tCXoMwaqu865B1PTxC6gLqevVI
vdSBw7FoCN5Fj79I6m5AcsfXHI451whiFVXMjixDkGMpybuxpQGNClRv4BYY
AK0gul+mpni91eZ5+VU2XpcRQ6Saa1th/GZFvZ4UEcRvDjvMNZRCKo1ocElD
KTLLfNRFUhwFN6fryFW1Gcj6samfVJqRyuF10WqUg0CPl3vb2xpBbYenDLtP
A+JJPCIVQD0ExQGWKqGkJnTmscaJGI0OuGDWdkw7oR/8WzVni/H1wt3ajnZp
vTgWacPPj68X7996F2ac/QjuQw8VLk31Q08urYPVeDdIXGsJ32BUBOK2Nzof
3ylCwSIvgAcfh8R55xqf5Aq4tW5obcnHCiTkRyoV+DECLwu6tPdENcKc823H
FwGNKJJr5jFr0yCohR9L0rvcAidc7+jKH2tBA8+p4/JdB+AteY9/vEQnfNw9
Zk1t3oSY3c3uUVr0g2nvKbV1c6lo4NhEiPqXFrA67Lfp14dhmDm9r5G8Jw+l
K92r4cXrpHQJqpwvGYPwpTRG48xAH9J75XOrIqUTdr+IKWCQaQbR0/d0npoO
ohHqoAmemw3A491AvHmrBTw/7atkl2mA17KRFiIP61H8+SCpPc+HINiX5gL/
0Tboq1Z1v1DVgppo2xlfNPZDWn8iw0lyK7iPCl7f/akGFSmV1DQWD0LZ4WRN
kV8fEFFLx1GOFIQuvRh/sw5fX87wnRF/rkhCzbNR71w6CkCZNEzSYusDuatU
rt60RLj/48mDMa921LBp/y1nlV5Yk05/p+PrKKo4KZxnSf6Coot/0PYyV4F9
NXVW6IMe5PZpWwiuIOLBcrOJtgX4H+hwnztJQidIwXtwhZd0B64zTdYB5Q/T
jWoBPGA77uBCu48HMRPSft+nzDteYeDeTAM9AYFHc3Z0ZnxtO/x7HzdIKUvx
mq8dTmsl2MX9aEI/jmZ8ZKMbWKmr5Zfr6pDlutq165TmQ/U+cLns+0RsrAo1
Af9Q2lg37Ayv28c50AfZ36XVq4fq0TTd44t8g0QYNxTZqePVDaHzt768tmtC
leksdH5dJLy+Mv0wFF4CltfyTfzxui3jYRlT5dERML3lKHOBohIkA6J65h70
wZvONtnSQz3QN/Gi/90xZwi6cWAU434HFZJSx8fxuot5dFttDj5uhV3lp+Tx
cfs6sXxwadwqYsp2O871o2cZVdK/tnZAV2J0asS3Fqhl7/1x0Kod0TS15hob
9sGPDZwb+fd1QCbhi8IcVweapf9W1q/cB0XHiYcvZ7UDBOt0j78eRr9shwhb
j+RA23naYnJvM5yOZ1Bvyx1Fn3oCeuTbTEGY/Xx3n18VlKi+rjpHsMBE9UzL
PuebZ+Yu/38BQZFX3NzxJljLvAi5z9kks26Zn8y0Gs6PH4LeqQ0mAl7F6Gjm
zdLrfG1Qm352l+L8CFpsUJWy90+Dn1qcqt/k68B8DWNgbKA3Iu8zOn31aB+a
GZDttKTuhfnLH1GR1Ahw2jiEjo+/ROvduCmYKppAlAj1tw6MoCSOE3mnZwpR
wXeTH8OHG8CflunJGrzunT/27Y0PXvd6Bz95lYfXvY+X+9dnuX8bl/u388EZ
RQwf/1aiPwO48fE/zxuQ1ISP/wsulfEzPz8gS861isb4+N+W+bRqafxHzWtl
6Tj1ofHrW79uoGxBT2MmOVvmO4GPxtOTJ3kIyazZPOg2U4VYWsVomKya4WvD
PNZ+qRsyxTmU950lwqZ4wreErC6gcQ/kWqrPLwVHznrh7Zx5sPbsUjufBkys
DcHnV2HXtJMbPr+GHQTWaeLzy53QViBaUglxaoytO78VIFM1bR7986Mwwf58
71I/Xtzbt3EL3o/nLrzkmsT7MWE37UGd7A408FD34sl1S/taZuOeEz1QNdoo
e54xDwV+Uycr+PSiVnE5R0b6Xhimf6YsaNiArEmdv3CF/KJB4x3XhyA/S57g
0hwLfN+lrjk2x6IbImMBgl1kQBEMI4com8Dv/Fn6w5RNKLxmSHdT9CD0DZhG
1rPj9Ub9tzxcEdvVbQwea0fgksTJ3JuuxP+HrjMPh/ILH76SlFCyUyEikYjs
89xKpZQtCaFIkqKSPZIW2ZdKqVSUSJGQSOIglH3ftxkzY2dkj+J95pvf9F6/
93r/+lzXp3ONmXueOc993+c8JzRCmL6NE55tL1jfrEqBrZ+J6V+8WpDfyQdY
rlcLfDdIWnxiMQy9N3XmrszGg4XbDXvH2Xh0hPnBgUA8/h7yM2Qn3TZYSqz/
gxPpaYVrWwYNQTRnU/C4SwNE184l4kRrbhYwhVFGIIIla9Nq2XpkX1FszyJb
DxICW2dC9EehUoMp/bUVCb03bXbFCVZWd/Urb1Pg4BYWjAvPbwckCg034vkt
86EMGXp+yz4c1YEdaUNtWVtPw5E22OA382AucAhWpOqYMnO1wr7s2LU4kadV
yUKk4DAkbb+5csnsNVT90RBcMHuN4lvCd3Lg7393h+wxet6b83CHGz2/zZcM
ueSD57dyjS07Qt2IUG1MFMCJHF43FntMU0H50AbxCTzvVcsl/qrH89t0fYFq
en67TybKQf1ZGwTbr7qNEz1gWm3JcmYIHmc/tH06UwlU9kKDmJlKpM16cF7T
aAwyQnrTY8Twv1uTVI0T2Gt/Z13hI0HM6sPPr397h/Q03xT4fXsHdyIPVT0c
pMHiS3njJfYqsHvtsI2Jowrt9z2pGqE/BrrjY+8cgIxoHPMlOGFPxppH8/VE
IJ+1283KmoYuqq6TZmdNg7HVcYkNPTSwtGXeFXy/Fp5fKA3AiWxadvf9LB0F
20u1H1U4iUiUIBmME7SzdQ44h/bBBZO6XNGH6UhDvPHbn0fp4ODUUgZtNHCt
X0z02kWEoNHesk+Pu1FrkOTLc/N9sHq5z/Ntuc9zZ7nPs3+5zxO63OeJXu7z
PJKYOWXb3wCcj9wTcKLiypNXxPJGIOR2wykLGyIaFCjTwwksDqocD7n7YGE5
DwxezgOXlvs5x+rU3Opc89E75gnprQP5EAIN5z2CaKC83J+Jzbr4X3/GdLk/
E7o8/7gvzz8ty/PPp/l9xXp7e6Bc1/oJTpQRvfr9WYl+WM+9dtNi1mdU4BZ5
mi/7M2TNMrkc/kgD2mmx14exBkiLKgs+hDWg4a8rLvvOjMAHTOTgmdhutG/8
S4FrbDfkLgRavIroB0eWC/ubWruReELCqj68bhjh4J78vLkfSMU+9y7lNYNN
Q2Mv/48qZH1u9a6rcyOQuEYuVym6AP3E3JYSVb+DCrlz/IcCDVTNMeMG5SYw
lDmkgRPVVbwLl9o/Ao2hlIcFne2w64ClB07ULHUNyykYhJD97ttcb/XAs20h
QWa3epCUW4IQ/1wfNIzljpb7ZyF7Zs2HZ8KyoJvFN2BfAQ2WWObLA/G6nljk
nx/E1gXTa+477wkdgNifK3JuxLag0keNX0WdesGAT9Na2qwfAghImJvUCHEn
Dfq5SI3os5yyz8qzI7A9sc8h4Fk7/Oortrv9rB1NY/3XFkiDYF7KxGo49xHF
EA7w3h7OBBvJrP6wChpss7yFyj06UcaV8z3sC53wuH7Yd9OXATiwf5WM5Zkx
2MqdfqN5Ig6T2+R+4yJPI3B+fGcaKz0C39xWo1n9cvjxuyBqAM+7+jk05TyG
R6Fpj5VwsPUnOLR0zefa+mawfXe76atLI0QEi1lddWlEt+RU5vJDRkB35xXe
YDzv3fnqzfo0PO9l6r1yg573viVa15/wroSVj5vyT7pUojxytJKu9RjYmJzb
mGJLQmnZLX0bVlLhisK5kdI8IuxJDc6MxfPh4bZrOe/xfDhf2u3sWTwfdgg7
pkbA82/PeiOeC9KNKOvzz5/WuUMgMJjs5uxNgu8ZkqvkOUoxz8y3LJerhuC1
2ro19HxjZ/BmXXq+YWqsXuSF5xs0Tq+5K/j40/76rc6pNVjv02Om9PGB3xo2
U4MoqMrhKOCEyMIK6asd7RCgiantzu5GvOltTxWyu8Hai3VW3K8fzhR9Gnqm
2Iy0rBRPPFdshkfCDlJOvcMgwD5tfyWmGfbfbtqLE03x75+M/jwMUd2hIyWR
DaiTTHpaGtkAVy6s3FPTPgLGVXwqxbjnb79IxQkttGNldN87iN28LdCJTv4o
FMUJX0JmRTn4BiEy5oWlhXw33JPXtjXxrkJ8cTqcUZp4/bKW73647Bj8Od7h
J3Dsaf4lYfFcPbzOFwslBlzG87HnpXUv9PF8LMsvWp6ej5UI+RxoOtUA7Hf2
Odt9ykCOTt/5y8+PwTHiKQV6n+pn0E4det1RzD2aR+9TOZIFp2zOfkOp9fcN
d33sgVPKOglup4fh5Y7aE4/xvKejJebDHfYyOLb6Y7KLEg0cwbepc/Uomiy4
wW1uWwxR41UOfbRWELV/Pq9zowNyewILHmXUo0tmq7xvmQ5DWXMKP/EOESTE
Tgm2tTcj+4ST4wKDA5A5EGbCE0IBRWMvByG5NsQz4LeFCa/Xy9btzR6OHYbu
tKk5g4/PULHGmbSrokR4UvqVdwT3MQNBwla4r9qdvobun38ZD+dfV4yyu94E
T4QTYWfmKq/44SHYdSw0ghv3oR/8tOm+vcO+ke6F7KyY3hKG4KnDG/4Z7kbQ
f961IvdVNxCZUy85CruAr1/RgzStRpjXcPg2dHIMDrOovCxkbUdYTdYZvex8
SHx8ju/3/AiAmm/fBrzuKCx7t2CL513zm94iet71k9m9OgbPi24HLxgH4nlR
wbFDB6zxvMjiUdFjev6zo+roLD3/UdJy4/mJ5z+PzPJ4zyo3wnS2s5r6mz5U
Ykm+a65CgadF/b8aLRqRa+UJLZzQuvp1vUbUCNjHTyiOMpeDQM5KFwu5NDg7
Ey16eD8N9l//oqW0fggN6O2SH/32HX70fmi+8ZgEPJcem/4IbkKjv3VJ5gJU
FC0ybWJ2hwov+LsNwxSo+PeRaoYTXN77M0dcbIafoe8F2k71Iknn18dwAsc2
Ltba1F6IVa0c5JprgwZ/thCciGvpTeyCEv77cuF/8H5lKTTsOHk5ZWUp2hiv
I83DRoOpt3o3e66QIGSo7wZO5DP65S2XLQUGi3bGbljsgtG46i84kamx64qg
mX7YNHdbXLzzBzz8+vgITvS1RnEFrXgMmOq19SUelkNElME1nEhc79PZ7Edj
8MYj1yP1UR088L5/Dydq1tE/Pus9ChOEDRFH/SmIqBd+FSdklPFJ3phtB6Ux
laxFXQpa8bU6AifcWEfcTDToBKl0ycarb8loNG7Xa5wQnJbs/D6lB/YZk/hd
cL9VZ6if7t/JHxdLwX2z7cYDOnd6kavnJnecwPtWPvn42V5oUIokUOLbgU/o
9QqcaO2WgiL57kHw1Q0emHdphT6n2ac4EU9L7SnR0SGY2FRYcHhdPfhnxh/B
iawPfNr9xmwUckVDTY7invPbJeIR3EsVh9sn4l6MEuPLdZMEEj1N3jjRmHoD
t6YOBUa6n0z3ynYDk2L/RrJsN1Lc7EPZ2NYPBzos3rGbfocn+uJVONG5axef
0YbGIDUup0DDsAIypUf6cSKRzGu8fLfGoCRNv9/YsBb87xWsOG5YizhF2CyU
2kbBzSdNMsuFBF1bVu7GiV7kvrLac4oC0Te+NX/CfaYEby9OZMn5tI/u84O7
5+n+s5z8avr4sfAvSXQfM0lpb8imoOOHHItxwlaLDMqO3Db46qFnPK1OQX8G
b8njBA6xutObkzuBkqL0kLOajCavr3bCCTabLl3aMtUN+sfvDxgZU5Ficw0N
J6wVvF3pYNcEstnMrXT/Xn1vD927zwYYXsB92+sLmmy9vYgkfvwcTiDPnXj8
+iUJHOuC6OPQvuPf++jj760P5qGPX1zz3Bf2FsP0bYX72N5i1G12TVdTngYa
fs/ajz5qAIUj3t44Ufg1R3Na6wiEH9tZ8TuPBFtzkopwouRrstLQSQape28D
3mmSwK7ztCdOxG02IiCWS4HNQedcuaNI4COeeAEnUvbg6MYkKaBwy25JrpME
WqlBTLs6SejMbIZMQwIZbFmWeuk+e7c4BSfKHjp+mu5fhd7Qe+HaDR6Kf87h
RGl+HgcMkvvhXLLkOH28QKvuT/r4TVcu6NDH35skcbisLYGbusYfr64tQQH7
lWcTRWiQ3a2kJdrZDWVm6po4Ub051bPPvh/elOskiOB+7T69lzhR537WHrq3
FQxbNVFTAdIbg1lwoprppcuJLmMQV6Hrdr+wAVDCTCBOVPLwo+eO8hFgGar5
SX+dONumUfrrvPB+kEJ/nc/Wq7gV8LhtkG0WxIlabTlXJneR4ZBudMqmYSII
7XuPcKJr38Njm4AKFPEPDkF4Xcqq0uOGE30aRzO/4inwQjXseYU0FW3i+BqC
EwKMthuREprhxQf5F3Sf7H86lO5V9M8cpXve3QkCSmeoyCqneDNOoESYqe8b
xeffF0/3GitTUR924ihO+FYxNXJcpxmsM/a/VNSloi1cLUk4wc3Jmefh+yaw
LHu2LVWwCOI5IiY3Chah8zxoV/BJGvxudHZ6j3vhFCMNun+Qu5ZA928TFUbi
mImQ7lCuHsVMRCzzmwPvxPSBwslhZ0P8unYu35GrNNWNXp8vbP5p2g+RBdfb
8vpJsCZvfTdO9PhnRXFeJBlM1nn53zEmwWE1vfs40YisiQ8ligK91m5NvosU
JNbvVYwTxigmOd97WuDUOWIkiYuKzof98scJv1dEHHxs0gJGi1fKjByoiHTu
WzlOOEG6uik3oxEcs0poZfjnjRTVm8YJJZsHXs0mNYHztvUuT6dIsHZRlgkn
er5Xi22zFxmcrx+vamUvgUOWCsLBbcXIXL57xl+MBqFMzflXxwvB5ETsonNM
IeoKjtC9bk0D1iH+VZriPbBjXEzkhkAP+kjgKVfV7Ae/wZUy0/j9MsffZm6q
5zvafiQpuaNrDGaX90/S/tf+yeq6+dtfD9fC/tK3djhRaqQ3/4qOURiczLE6
4kUCg5+0czjRxaOXbeOOU8AJ6zNVxT/vu6SX1jghMocjKOxjI8wur6cHLK+n
L+b/XU9//+bGA4NjVPSn2+gNTmD9tJDr4tQExkffZX8upqBzzKY5OcUUEHCI
l/Owb/t/1t/PLq+/K8t9apb3JyNpizd5u/3JIG+xO289Xh/eWN4/sHd5/4D9
8v4B1jMnKmQtMuChaEEiTrTlMltFSRMNfJbHE5bHOyyPz+iyPygZVQO963W4
cSL/3HiSyp9RaOmRbIz6QAL99e0tOJGNc7w1aZoMN5fryvmHf+vKquW68n/H
gWl5X0HEcr05ulxvLp3/W29q3D3qprGPiiKsHhtLalOh4ZNzI2GgCeKF+0XP
tpCRXkHmutWtZFCMXfPxTlE3cJ46oa2mRYLc1m8H17CTkLE1WWgvkQK3l/cb
JC/vN2hd3m9woGLHRae2TGAyC9yLE6VWcJp6l9GgUfA258qAJnh7XXRiRUAT
0rS1jf6+bQT22vyxNRCtAa1qJRWcKJPnmrMp+xhwvkE6eipESAx5uh0nuhIq
xmpq1Aftv/mC24NJUJ7zIRAnmlLVv39EmQJJyRIbfluVw8+2spo5q3IUrP4t
IfXZGJSHOZZerSSjx48JlWGVZGguT7nA/bsbEtNz8rjekNF58snE7W/IMMIp
x7zvcw845AxJ1JUTka5xkEpHORG8JmK8K69SQbt/wixIgopW8Pu+MT5KhUw7
u+IF5WZYvar8RFECGX22Vg1OLSTDlvOprSe9eqBkgiAr1BAAK3pvXDXLSwaR
P4QUBzzPXPecd4tldDVI+hNGLKKrEZEyMda3eQx2fW6KGjDpgTMmx07jROtl
NvY58+HzSZBPCH3d/9e6vRfp6/6VHr9m6Ov+2fzi3KefEEEhcobX6AkR3ZXU
YzdC+PuUn39CCyfBaOFFxZFwEmrfq2avvIsCGw/ynpO5TYKUTJtf0bdISOLj
Rx2h/RSgBqdZlN9ogMt7mRWMbjQgpSvXUl8RR8A/vpZgVUNGnKZ9q5SayfCH
8OV0d0c3/HGsi422JaPoofaimPP4daJRqSLrhb+PGxw+9P0GHhuWJOn7DTZc
aHTc09oLT6KSp/LTexHNQnlC6hMFZlyIrCXmPTA48PxX/5EsODjebU88koVq
Wa79pq/L+zpJLti0V8Gzk/e0cKKfH/FCas8YHMVMtY3keiDwHZfofrkedNdJ
vVFRoR+8h4P0d893wC4drFB2vgOpaqZ1/pIchGIn93XHJbohOYZw9YhEN9KX
OX3Kt7sfBhS1o1zI+H080k/+SzUJHfD1u+WYTAar7NyPp5yb4MwTrEP3VBPS
VWBJfaMwAosPHk6G4HFIXanT9dmFAvf2KLB9U+qCuNlVK/ZxktHq1IMVG33I
kHuGiY2vhAh8ob0Hr7wlopflLCJu40S4M3Goad9lKuhqCDJdMutFH/7c0WdL
7wWD4l/Zi2d64fxcPYm+32C7l3E7fb9B3zMjkduHW0CQ6lsyYt2E2OWawjf4
DYLSswd3s4SJUHbu1tzlygwQ4RB5nVGegSZWafLkNNDgcMnV+MuhOaCn9pK8
JjgH1aS+OMaaSgNLDvVx+rrYWnW/tZUtlWg6Y2cTfV2M6asM56ReFtQv/lJe
dzQL2dqPlz7G4+9VKKxksoUENyaPUQ8Jk9CpY59PvqFR4HQg76mPgj3QdsLV
9DR/D5J+PbVQBv0wS/ZxofcZUqafOtH7DDrH6g3ofQb/B0e56eM5Rsjs9PHD
U5Sd5fj44w0R72kOvTD/ejK76AkJ2ab4/bQ/RYaBw9lhM7K9kOp5dW5sHQml
CWkGBHNT4FTnrgT6Op2/ziN++jqd2m+zE/R1OtcftWZjmr1wcLH4poQhCQFB
cbVMORlaC0+ueUltQ7xpa+U+nOoB3t6tD20zByD4xL6eZFsSEpz68Jze39D6
anT9ex4RnqlJJjd++AD1o50hftYf0ManjlHdRBokH0rn3RucC+XxnJqemrko
8ox2adpLGjwb6NOXH/kE6xsPTWzK+YRUr+gZaRXT4OsP/7GYeiLUxMPtR6+I
qPLevmjmUCqceibXprOVBOa0VRvYuono7E291qHNVLi4tNF95FYpHJfVZRfi
K0XJB3TXejDTwK21xDJ1qBYkNE691guoRQ9sZkOFv47C1870U136lRDwuBcW
v1WgsaOEFSxOY5D59eJWbj8yVLUUWTYsEFFPtDHFrq0XRo6dY3n6jgz8Rd4u
ateIyO68uudXETKIttJmOPDr8vs02b30fg9SuPAj+TlfH2TqBMt/XFUCw6zu
dT9fFKGAkScqzqo0yH9p+zEsrwr+jLQYKxDK0Z7AzutNjmPw/Qxhd0UuEc4b
UTCc6PjcAKd2MBXMmeXYKx5S0OhlijROUHChhMrdb4dv5PevJiqI4CqTG4IT
TZhvWbXemQosFjaCm78TwUBw1TacaIznknWsJxVCysdOe/wuAFqD6A2caChT
cPHKJRoMbdz8glmcip4LXAvHCT9+lwYea22GHMOZou50CrqBottwwlC1psR5
UhscFk595RdCxOunsTCcKMJ3m+7pRiqIG5iInEshgTSb2zaciK3nUuXtBTIk
Dx1KnyASoSf2bBZOlBew+88vAyrIOHjqfnlWCMJOqhdwIp63e2+dt6VBrHWt
Qhk+z7CxlV/BidLWxT6lP3fW7JRnayaC3y8kBY/hBLeAdWLnJ5uhJCZ/kr6P
xcwmO4++XyXp3jwzfR9LmvOGy2xcdahsrW/DWq46OHH/sTP9ebTv3sSa3C8k
mF7TVocTXRlPZeHsJcP8j3lT+j4ThVwOXfo+kwfFDVvp+0xIPNXHdSdawfPy
z404EdvO/o/058tCNXfpNs4XQrwKW0DDfCEqS74eSd+n51TOH0Xfl9JokiVJ
35dixVLjQd+XcjPkjiv9+bLTxm3kU2vakcRziQ0U2SEoTBfKHO1qh1tVbixj
Xe1oN8liw6aCQeikndXxwa/vdxIdXDjB51rJeiJen104yxl3ansj0nbbKoQT
rm9h03VJHAESOdov/C4FPWwxj8IJ4kmuFk20dviVXjWwaj8RYIt0DU508d6V
pUqsD8butx3U+dYGhEZ1HpwoPLd3/W/9ITh1WIfNOaARfoeEe2j5NyL02keJ
2X8ENizxrlSltsKp9gG9IEoreq7rb6WUMwSEtbVCvodJgD05uQEn8jCTK81J
wOvcePvND0xJICOdwI8Tpe3wnOMIpwDxMJVqsq4TPvO8KMSJZp/RLl7cPAhf
yrTWXgxug5O1W6kXgttQyFT6aMKFIage5jxN98UT4+o4UT+HSjHdh0VFcD6U
agfv2O/HcCLhUzFkw81DIAWGBQ9wj/QDV0XhPvLT72Aj3MevF7D5oE5EZ7Cm
3ThhQ5ON/cWjfaC/uvjbQng70msrMsQJdt4rb4wNDIK77qXHv3H/eIvTNpyw
2MO8ke675fNW/mSmIpNKj9lxZiqkvPhcbJzTAo9r+rcMFFLQ610b2HHCl8Qj
rzq82oDFdkaK7pu+beGl+3MB++zp/pqxZ629MwXVnj9BwQkDpXczjl/ugNnu
qRS6J07VF9D9+svqd01w3xo0vtK7pwc6dCsOOPX0oOla1yfB2X1QZ8z1usK6
Cw6s+jpSYt2FKkzK7BRMB0C4RWeB7jn3T2iX4t6/WUqB7qVSO4PmFZogU/zM
9K24RlTo515eZz0CuzIefepZ0Qrpfp/HKZ9bULjN1cMG8sNwX3H2BN1fTosP
o/tDpyZc6P5Ge38IsbYDTPY8uYwTmbftGmghDMKK5f0/asv7f6SW9//UnE+p
vFDYAu6/n77DieZm+bKjNYdh9dfdlHLfdqjMZfmOE5kOKBOVf+L35+V9wgr/
a5+wLnzI+eLXBSPFxCGc6Jsd81SL9gBoa2wrOY7XfTMfs7NxgvD7nnAasQVs
D4Xp2jhS0F4J8h6cMKFkdlY5rAOatGa0DWopaOXcYSWcMDP7TUlauA2Ml/cX
XV3eX9S6vL8o/DDbi+/N7ejY/KbQseZ2GH2WN13xbRDYhLUdDTXKUB7BN2FU
owzkLMYOK+eOgexdJp8nCT2QtGnq1uu4HmQfnJQdTuoDw6ZYe8epNmgT+cmu
PNGGRGNKVp1Qwa/b4u8SF1q6IHhKMX1rYxdyt3r58uX6Afjh3Xco8CQJypI8
9m0STkevPnOF/K4cgoaeffeSX/SA8M1rPLJepWiBr9H6BQxDpLi59p2nHfDG
5Y4ETsRau470zGIQXFtlG6pjiuHmsHIaTqS00nusdjsNSrcuNXc3kED8oWI1
TsTLVzDVl0kGi/7zvgZsVGTuzstsyEaF4Umbyd8hLVC9e4NoxjgF7RJ8naUw
h8ftsJDyCslWWNw4aZh0BK+L+M8c0uzsQc8yxg0FPPrA/c/FYc6dHXDoongt
TlRXszju9mgQ+q5VL31XLIYN4VNdONEx3oU8YwUaGE2LXpreQwKBa2J2ONGD
PEEj7VIK8Ktl2vKXkUBX4ZYPXxkJ7Qi9NmL2gwysm+9x76NREM/QEf0beF4V
l/JCgftwK4RdHvEcjqMgua+Oifp4fXHciuOK7MZWuNsf0ssc9A0++CTF4kTn
vnnfGsRowO60bcBZhATV2VmJOBF7hOcH02EKsHZdv9W6iQhaW2sddwoR0akV
6z5d9eqDV7SqkFtNFKQVWS8qitdvhe/MU5caW8F89a13xhEkdDVF6tym0n64
/ClMaWdgK1y6fPzm7PMiGGYJqxh8XoR2NG4caTSkgTGhXyqbnwQuJkTPV/wk
lH9pfGoNHlcf7+8VR94T4URXYKSOKxHJbzu2R6mSCi+MK9vULlPQoy2kr49l
qGAs+v1uy/Y2SKw5kPzToR4dlaoIddQbBqOrBYJNLR2w0enaCXr+KfX8Muth
PP9MLMjfSs8/BTrExvn/tEHfFnmxm5Q2dGKdetQD1SE4F1d0xO19E8gn8uuw
vGxCowaOi/aCI4DGLP/McpPgfUxBqrJGFxqaeFMfWNoH5U+nvF102mHCz9nz
kFobapWev5JrMASK/b2PBXRaoL9Gx1L5VjOqGipD9H1NIt2hYYrTHaBsnhOx
+WQrmr2qlqTPOwSZO/cHha1vAYUMS506wUbEbLpCM1x4BNo7uAof2bVDkfvm
7N0jzcjnlrhUYdUQ6ETLv720i4p8z8c9xAk5xmzxkd7N0D4YYaqY3Y3GbGVy
dmd3g0j1kAZ9Petcopr6LGcH7N944QlOlDQQOHEmcRCem6ZnKv1uBu+l2Z17
fjejbUk33dMjhyH9Qu0oZovPo7wSnScso8H0SmZQaCYFCtbNC/GtK0b3Nfsv
0ddTIrLtYujrKV3XmTRPfq1GaWRqZvvMIPB4Z+x8xUGCzwueFvrj2fAue9jc
9NcAFHYr2Bvg163OIjrYcPcLOth4eamkZxBYei6m9Ab2wjjf9sUy5Tuw5kLQ
ij1bE4HtZAFGX8/KUev9MOxUDd9z+vYe5ixHVr8DmFzOjkFGl+Xt1LoqFOob
5Srt3QAe3oGrjoaPggRU67y1a4Hnwey3XFEJEg7+Y9J8aBSWnrlU2XOTwauN
nfzJshM1HJ++l+pIhVjhxqtrokjQJZDx4zx+fzdnenTk6bt+uOKr2U6vp36K
1A/Q66k45ql++v5t0+0GAuVaPagN40sUsuuHwzXtWwp8u8HUX9lworcN6Xw9
X3QHn++2sP/REAY8fyZ2EeU3k+D6aJD9mlwyMjUwrpv36YXExYcCWvT9PNf2
sNH3s1H9t0jR9/OIfYqT9PeogknNVk1N1n60n22Q4jhDAScxRyfdAyT0PMUk
FSe4/KzILEihgOnmW+23mjshJHHsF050nKX+6PG3AxDimNRoOEBEg6eK1xsN
ECHr1amwQ/upkJVxQ8EA9y/fxTjihE6VNqkjuBdyXTFuytGJ50dR68w4OtGK
oaHDRzcNgjH/7d4TuH+mxLeIE4mvcSHSvW9epFf54yxYc3xgZ9XjLLR27vOG
EYTn1d5P+C1Me9GJ9qKDOEE7p1Hqdl4vuOU6yPTc70K3a4Ne4wRji2D3ctUB
aHt//zT93AOD2HOu9HMPinRqNennHqzL8AvKDOiCnaI7EnEiuawJ1ycwAGqK
bzrFMqvBrW/XBE50f/FdAUFoDE6v/qZgjeeZ0VT+l/RzDK5ZrM2gn2NQxCUX
cE6MCMX3TyfgRNV3HsYuXukDsrSxGf18hhsUMRX6+Qzn3m2bo5/PkMQR9NSO
nYp22xe/xQknRFfyrb/eAne33fH9JVsJpix7TFtkK9H7DyI99PMQeNu+kNvf
d0D1+tNMXu87kE1hqbyMEZ4PMOVZqXcRQTWu3gEnau0bGek0oYLFI54Yuj+/
Z8cbug9LnQyh+9J+2c7hGjLaGHQ2ByeYWH53uzfUDbqtww8iFakoV//yc5zQ
MLX1pqFlM8js2xtH91XZxW/p/rnQQ3G6D/Ev+apcVgNnufoDw3JrkNOHL+Wb
ZkdhcCFku6xmF5z44b4xZnsXOvytc3GtywD4ckldp/tMzePn6f7YwbkKujd7
yHzuD35db3rSQcCJ1GTiBV6+7ofJulBZupdrOruK7j/cziDQ/Uu5vqpnCXVw
krf0A06051co202PUThXUBr1lJ0I0Zd8EnHi+d0mhbzwPlgYObZizoIEppeO
cOBEmieO+L3E8/erAZ4ROzaTkdGvdXU7N5PBqWzOyUKUBCI8O0Wd8bz69C/X
lnN4Xv2q9ca8AZ5XP9nOw0/30k8sq+leu7N1rSHumcntZ5P4evDrxfkITiSS
4Ph03d5+aFruix5d7oueXe6LvmYZ/WGHv58Lh3Lb75wgoQqHXwXZIRQI8ZrZ
v6qFCJPiFe6dDUSEqa7PlDxDBRRka5W+oQ7GCnq1cSLT+c/MmnidFZv58p72
QRIceOt6HycSq6ZGiiZToOv8h2PezGQUqsXcbydLhofe2yKHZfA87ytXw1WB
eij19MrGiVqFDGPpz+lkxmduid5Hgn4BC557+0jo4tt33IfwenS8d2hqlUQJ
rMnYsqS4tQRZ2x66eW0zDVZXCnygP19D1bMMpz9f82xFRP7cMAlio34fFVav
BS+bE1VC6rUo2Jegta8Hvx7eV3fPmzcAr+ppQZzIpO+kovboCIgVO7GJX6iH
lsxNmTf069FL80teXjAKjmsjIxZaKoFmVpNE7/8YhBCK6P2fcUK+C33fyI+D
ZxecXRpRdo2GMAoZgXoFAYO9qwrg+UnZ9dMrCpDS1yP2Zb40EGAu8TLk74Uf
AXtmn3gQkX+L3JepOAq8Lt/k8mGoFh5K6r3VD6hFQwub99L7FXy5GXXyo2S4
Wm/is2EbEUVzxalcESfDV2Y70f26tRBtz8nj8qgSLeSlxbJsGgPtruBvVGUK
+uyePogT7KQOV/0p7ITyvd7RXr5k9GBb/Q+csKjkZKAORODZzfROI/QHWCV8
H9YM/YFe/TSvmqgcA67CuqZtqlR0lPtiH04wW7dpwkmtGVoUTJeK3pNgz2Ly
6m/vSejEjp+XhH6RgfPzD+pOdSqiPHKawgnjJ+aukKWbYTUvy3ayNhXNmm+X
xwlCVfY5P7ubgLstNY6+PnUytSucvj618BGp0denXsYvutLnJUPrKmP6vBTh
dOIYfV7afxLLruamolhtkbc4IcZ+o8JbPM+oDPoVLneRgnJZtd1wQoPNBiPD
qA6o2xqj8x7PG5dezaWn4Hnj5/Vy3Ee+k+G35YlrdeUkEDMyPIgTvaRdWNAs
wecbhZ7IcHMSRNBuBeNEDlPuhE/BFFjTygn1Y0RI5/qogBOVPbLeNaJGhaLw
k3p0L1G2SP93FP3qngDd//+eQzxZnVJ+XJ+KTPs0hnHCb4q3NmtYE1jcE2lf
UUKClg/VvW+KScinweDBIj7/lRy9cNL8Fwmc3z7vU/hFQqwqhwKvXyGDkliu
Md3f2zbSQ/dWHxKj6N7lMk0n7TgJvhFCMJxorkUqc/g+BXr1vM/+vEGEN/vK
zXCicbm0thYqFZ/HP1U4rSeBhUBXIU6E3tj+vspChelew0rDThJwWJsd2F1K
Qs6Pyn48zSHDiPGFUIMRElg/4G750EtCjuK7LeTukSGa56ZaKpEEhZM/D8jX
kZAHSbQ1K5kMJ65+Cu23JEHcwIM7OFGFo/1hdn+8Pt4t/j3qNBWRnuz49ew0
FcQvON+4s7IJJCx3PWeuIYFquobRt2oSmlxXJNGfR4a1M6bdZ0yoaON6FXhk
SoXJlxwbBI82Qe/JnIcue/DrU6X79y8XKoiiPzP3zJvgmtzMS9EUEvwqHnp6
PJmEFr1FRT/+JkOQQaShdnAuvG06aHdNMxe5kjiy6X1IDokn8fQ+9pfO2xi9
j91u1W1P72NbxPknvcbzXlO7xDyhDvy+ea/WTFCWCmxbXpVZfMfrr3MJ1gUB
PWgLz7qoq9194PorIvdADgmGXDV29h8kIvJp4mgfPxWUr4ffovcJi2XfFpfc
70GzBtn7X/D1Qa3L60x6Ptbh8Difno+NN27KpOdja/xfcOhkdYC8q8NOd3Mq
ijBveHHRjgxDFuuCl44T4Wdg/1pNBwoyqVdVHnfF86iyz1Mf6zJgaxX+AnUZ
aGdX/8ZnDTTQ4RcLOhuaCOvlb+biRByhE08ExvH8hFXyWHNZOrBM7nDCiXh0
j341b6VBtYfkr/CiNxDMv3sAJ9rUstRwYowGZu5ETkv1D4ACba7Lqn9ApOgt
Yp4kGqhuzDvDcyoJ9ipUvSmwSkJsd2ySHEdpIHl+KJO+/pub3niLvv5bIkpS
oa//Kl3V16Cfp/RCdIGbfp6SZHz4qhk8f2hzj3AzPJAE4QM24jPCSYj7s7JH
Ov46owNDFwxw/1jDmnca99W6VZ50n/xxk2j29m+gvMFno1R/ETpbbTDefogG
K5Jt45/eLIf3rZNqYRfKEalIronn6RhcP7xvTXFzNxQcWcf0uIGCxHUtTaxK
e8E//+MvcxU+9cVa1TjToY3qf08/GwcLE4PJ4wMP1ap0t7yXy7uv9j9e8JWS
yIR1pLp5SawyFIUwxmd2X9hmu2GVhj/5d5rbMJMGY/xdgt1TW1eNyhA//15h
Z4bPPSWx+bAUSUPpOjubUUInw3fLCD983qijGa1iwpFTpa35P55FSyHyj3qy
pg05y10nMJHhBZ98Liy/upZwpHaj78k/qwj/45m16vWddWwJOWav+a4Wn/7n
/Vh58oyyCT4c3VOsOh//+YIPUzbtLFiWgMDKUsOV2L/xSb0qN/Wwm6tivpvW
H8aWlp8X2L/EtCoixh/zvBmD8X6/i7Et+w8rx6ZXngpRTyAocYiKB/yLJ6/I
R4U13OrJEfO362U2MHzSERHnBCsmDW2fjn2aAQsMf81BMapt3xWNu6INsmeU
LjLi8yTJJYu5ul1j+qChz8GjzQyf/8IrYunwPk27b0LnZfdhjPjIHu+abn76
WjPoo9bh3Mk4hj8vNZkQyM9MKNTZca917xLDt32xO98zZknwJYfEzz8yZcSH
xW9x4FNxOoGdu1UzeTjl//LJ8UEXVmB813KT3J1+MzwrU+Qw4ZIudtGvdzOp
+wAjbrDILWjbEIrd8Dnw0mAmEHu4+NeX3tfoDaovwFw91+w6WV+ItTn89bcD
mOXGA6by/+dcvoQ31P+8kMerHdOvf6m75lxhfX97mhE3jkiuufAFf/XzNI41
9iG3GD59WGdbK+m8xs++GU2JwrOMuIkcfdF5l7NRwx5FPViMq2V4o6JMvwP1
6poSan6t5wSVGfGJK9p97HL6c82sIdOuAIPHDD9YceVSpfiCpkXk7+RcnhmG
P5guso9y7jjB/0+do66fISM+Oo9rjGJ43xLEBXfoqMm/ZngOJqaU0sU5wu6k
5O8f108xPJufnsjhHm3ssOaR3LOzwLg+Py22t628Goit33xRYGHsNrZmOc6B
nDvyU8JLsGPjAttLrxRhNcp//UBmXvWH1VPYXb5FZ1/TaeyrR/l/3kjisnMP
jyTj/MP7sTZzdM8cfOngNa4zGqK+PsSVG04x4rPB7w53F++k+pEtQ5VckzRG
nHPXzU7UuVZq3OY8x3rN/ztjPJuPG5J5sVuz6F1pv9p9OUZ8dFg1ZFYqR2mG
Tnd923MtkuFXSXezvt4xoXn31yMv7/OjDL+jnZQ4MatL6HilrJCefIARn5RW
hZv5HnEEm5a4BNFDTxm+6BJ7YITLOOFSvoMWWWCI4XmZZB1DEtQxkqiCWA7H
HkY87ZdcvkSq3sQGvj/0SsC8scDleO6x0pilKhdiMgct2bljcrHDd//6DHWF
lfrP57DpGQGVlUVTWLMi+s+rxgUWflHcCq1GL02wIHGoFeycontn1vBAa5tj
jDgHWUin0s8XmrZwGlFBRRpBJSvzi/vzGXHbKnor2cvGTOPeKxOnFI3jDO+3
/1rF199SmtSN1md8Xooz4mMqqr7a7laQpsdUtDXX5zsMz0tVOzF3u08zsfZJ
UIhE77954POxH6/dtQhHHgul+BuqM+JzxUQudBX1AUF7Q4pJTGAEw/tK+R1o
LycTVp+mPYnb3MPw3fZfV68Vkcd0pd36grdLM+IZuzR5S8vADfPq8ap5FXwF
a1iOp4BHtLL9jSzs1dGCAz3u6Zj+8nlBvwXkVM9ZT2C1txICPwyMYGNNXf95
xSMeaQcubQNLjzh77e9isO5Z7yTdO8TuUqYZHgZP9Fpzs/0RYPNc95oeTy+7
cwb7qz0YcTYl3Yminzd1ftuJzSvshDXbtLSEy07yMeIQ2lR2j4/0SUPn+6FO
wT/pjDhbWYmmFkX4aDaHyItziXgwxtd2PnDmKW3VjOjefOlzbwPD37HRk1nZ
oUC4pn2FWnVelhGfy2wt38VO+hNmDgy+W9Hox/CbJSWz58SaCJoba37P+NYy
vLoGKcNESwx7mZHwTfG9ECOe73iMQq8L22PbtM/MPvxkg00ux7MzZTbUQ+Yt
JuxAbTgvHY9Zjf/1JiW0K7k/qZiHTxbF4AMR2y/693wh8xwar37iZuDl81ib
0cgHU4kB83QvMxWy8UjkUQjrGG320taBi5tzU+jxDD97YXW66kVg0rtn2F7o
BNn60w/7cL8uJ3FF2uHHjDiHC4WsyvhDgyVbmd7ayvOah9Wcr6uuPsuIj1zy
s0fhAms05a7Wqgw/Z2Z46bV33ooZlGgeZ7rmu5GzkOH3JWPDrOFbCEyU7WY7
1AUY8YmRCd9ioX2VcFYt2Fj1vSPDMx1yuxO0s4jgybRpzA6+Mnyzic0pQS5O
bIicZhK+iZURz8vpkwEZ0cexZyZUlWtGBtjicjw/Urec+KMRjTGZPxvYf/0e
9vH3X3+2enZ1gF0TRnIe8CmZrMEmlf/857NelBiXv1oPhtsd3LdFsELqGu9F
uk/wJgpxS+6DjbKxtMmTGmAw0utL939SCe+FY53gsR2vzotke7C/wxtEP+dq
Yf6o5RFCAJRJfxHUTQ2CqV0pvI2L+HhhRRmr8Y+MOLM/eX9ycz8NTn13TJ8Z
fah5YaXfeH3qPUbc5pvvLbqKDGry+BE/DC+RGV7AvOnWxI89miuZtVSTsxUY
3q1p6w7Cj3BNQa01sD8/kOGxr7WnHc0mNFWYmUw8DP/Nw/45Gzna1+4lCDG5
leu0/ps3OLxlRjy9DhNKVvh5rpbaz/Dyx4rzZ3Y+IGxm4qq/QAxj+JcHZZ5w
GTwnxKwo6O4cf8TwZw3EJwZ7SQRhv1E3Z/8Ohp+PLHKwIw4TlFYwXZy7T2V4
M7YlpegHMhgP06MDHjQJxvfbdTSQ26Z9D5bHxLQonyXP8ElDQra1d5yx30uz
W/eoXcB6l7/3EfczPlZbfLBgJj9eD4Ib9nHZp30zln6tnYFJkXgjYsbeYfU9
f/3Q67ZVl2/mYXqlSzY7WLIw3eS/fvZ6nOVRdhrmFlkilBDSh/UuDvx9nQ5D
gujSHPZLzip7nfsE9iXh239eSUObK/rINqDtCR8p890CbryHpuk+NIpgN1wp
D9Fz7JFZqduhYmULhe6nbx2XKZQ0hQGVMyttHA3BZt/hdvr5UbteDOeqH7WB
cHG7ab5Ec6gYP1Q4h/syQRPrR+q3oYHF90qiszdk7dju44r7KPakx8MjgdB4
KFWh4NFtWHFgJncV7jMtzWYXxRPh8/Rio+KPOFDQSjAfm8TzCqttC/qBcfCO
wnJj0fMVDKavMTo7Q4P2V2ZTmrRPkMBhvi5ZMAc8LD0T936hgdju7l3e9hWM
63bVyaLv7Pto8BT7Kj4vQmT40YHoX8Pxw9A8Uc31kUeZwMNkfuSRsQLj++Vh
Ckl9856oKcK0oIjc2xnXoZdrtDr7kUACHxMWi5puMcZrCUTXXJVrJnAz+UpL
//o3r4btHhgo/y6KbWIaYrpkKMi4HvTYajol/5zF+JhqVWRlTmMzy987YaT1
5Yb4BGzlzxuLzQ9jsfKpv749QWtbhV4vNq3J+kZDox0r5577z0smUAMiQBDY
B8aM6/K5QCpO5/d/80mJrZi44FEQrJaWJ1lrg/FwXid9Xk2r7Apg+uYJDnwE
w/sNV6D02tWF7/Q8re96jMXzOLBn630W8PgReIm3PE/7RYNndW5Ge43yobuv
6Fr94CfIsn6ex5VEgyrt/QoOr64TRJgs3g0Q3Rmft26Hssbz+zKELX6FZUbh
2/79Tm0nX7l4lROEmfan+G0vZvibWsr64a+4MSkmTuVXVzkY8bnjrwdEcTOM
myld2qPSCPuzHJ+NQtI1IyGPsfjfzJIS3+5hF5bnSTF1+wvrHzZiLLvifMmy
Vdj923/nSf6rVuKapuwwYHPxyspXzBDR3PzfPFkdZr5WpgnAxuniyoDbe2C9
XV78f78vnU2HBtodIedgX2X+SlvglyKZjtLnSdWagRMZUZCrZyY6khQMfcS+
npf4fWfgzKPi+YtZ8CgMzFXfpoBeRWtsbAP+u3attYyXzidIMWWypXVmMT5v
2bvOiypazgQ5JsP9LQEXGF6CyfP1xBgLJswkMWdkycSIg+rbtTeb/HSxLUwF
KlcuajPqGuU8PXLNvWDszeL6owd5b2PTy3WN3moJEzJHKVbrIee+Zj4fu6T7
18u1bvPxUV/E7O0WbQcyprCiTSn/+cq1l5a2rVGAhT2VJ1OTJSGpuZlK958t
fqwoMT8N0SLJE9eVj0Mg14NI+rlqt4Pd4lP1AsCmO97mF+t1WCeTEqaN+yDx
1ecUzZOBY+wQX4t7HIjlczNtGKeBApMs+fL6WYIEk+OPiS0/GZ9XnEnIt1Ii
jbCHKeOWzukkhrdTd3/qcUUDk2Y6EWazpMiIw7YWuYunZb2x+0sGC7/PumC5
y3HwE2t+InsqC8u6MrswIvcBC67765M50dylsDFsH6mVkzeXgol+HPrPNwcP
z0dpi8H2aEqlTjYfjFYZ/3c+J+VA1cDbjYaQa3pTqfb8fmC7dfch/feyuMqz
O8rbE2JebtU/0OwE5Vdt4irp8bGqqTAUeQFyHcci19++B/fl1sftXaCB9umn
H+xY8iDU//DoZdY0OEMR2smci99PCTqEKLZGaDhn+vF7bAnMRS9J9vePwgvf
3NjHZUR46JtSEXq9HpQ8ldiOxw2C3LjtE+e1NMZ8FdsQ5li0owaer7hsNCe8
A1NiKqgUmdzKiE+0iclFFck+gjyT6oTQGSIjntr8gSsdPjngecbpdUnaZ7Cf
y3GTka3l2SCWgD2rr3m4Re85ljL913/5XF1XNdmJxdg0rhK524BFaS785xda
gpnD/TZATHx9/kAoCxTd/5tv8I+qaHEoAjR8sBv681wR5JQ3JdP9pxCP+8Ym
52HPoSIdvX1WMHzO3X6Sfp7k5QlrKkcEDL8bl/FKuwlTGt/eFOD5Rpis2y4f
6gfQ6/p2hJf5Jejdv6MXPkwD7/T687uPlsFrrya3bcY5sHp81aaLe/A8k3Bj
6m1zB9w/9O790IkyUOtqFBsXHgG1lWqfAqJ6YVJkvIB4vwbkj36T3Nk4ACmC
Muz2XP/imclTmtb5rhr2qrGETdmbYPpMSXvGrPUZ+di9CNfdTIP3sKBpuDxc
HYhJLv++snj6T//gKcOSrj6/TqAUYPbCf/3Rnlk/T+M/WJmVVvOjzZOYhsPH
/3y/y8rGyUBZ2A8N0iEUMbh98eAY3TNx+vbsWzoB2vvqsqT8j4DgZLkC/Vx9
0tx0uYmvLxwz/5meqeIMT1k7Tn6kn6Ob+uhurkscFP8a7nLaew8Czu4Vjpmn
QY5kuGjz3q/wk6uZ/XPPO1ghP5IfVYTffy+1b4tTrgfWDLanzXL5cGw+TSXR
eQxU9XOLyG09cGr0+9fbsiXw0/wrLysMA3v3Wv1SLxLs6U/IZ8r+CrvOzzfk
RA7BkYWRMNb0RmROFpdFdxBK/MP3SGr1GJiPr9qjkz3GiGfT490eSRN1wHR/
664pTm71o8bm3BvV//Wd3leNt9VZRaoPBO+7Nfj1Xx+v9YDbjeR1qzTitLAi
l/5/fbwOKZmKDCtXjZ/bd3JR+P718YR+xQ3vECNpsD1wt2OO+dfHUzo15yRZ
rqOZLNTtPFH8r4+3flIirdNmLcHdmfkHRvvXrzsdUfHpnYotgT1IxnzHu3/9
upX1zI8PqWcTanNWiF9U/NevW/V71wo7xIKdORL2i6z2f/Xrfq9c+/C4Hnbz
WbZjx7t//bq9AccnB138MRFHXtbfz+5iHMt+Q+AhI8/Kz/mpDT5TYnussbC2
v56VrD1lepxJY0hhWtnT419fzqlTfMhD5YqG1qQNQV7sX19ONen++uGsdo38
U9mHqKr/+nJFE+ohT5X3ab7wWnArE/vXlwvOO6s0feO15tSpZ/Vnu/715daR
qXHpT9IJBqFvkstf/+uzrZyyf1evvALzfbV3wzT/vz4b22eRCilOXey07aKJ
Yfi/PpvcYlFIqHEodpbfhHvP3UDs5fLvZVVtO0efZwEmWR8+cvJqIbbxyl8v
+7mmbnp6Mp/5u/E9ziYHbK1g/99+0Y/TtuZjDRq7yDXOPHf/9cceY2cKzZ+r
a6Zd9+ixGd3DeP/uweJmFx2eax5qjk2Z4f7XHwuWf6z2s35eM/M07w7V+ul/
fV0/12zmk9qYgt3jPz2b//W10pqNiQffBWA1ZnaT8YdvY/zLn8srs9BTJ6cY
k5LnGL+dXYhJH1yeJ3lma6eEJ7EkaNxoYD6F7T5a859f2xbA1PFRAlFl4mZZ
LqZjOcF6/91f9mhYyLaSHmjGYE/Le5T+9Z1+mrcodlX91Fz1cntbdO3Iv35U
92krzECXkHAZ5Xls/dd3MnmZ1UbiL8CuP1kh01uag+U8/Pt+tB263pPTZzDD
xUvl5psmsbCFH3+vqy2ul+5EiIL2jkt+x3LFoNW4aobu5xVbavXXGyJe6+Mf
WxXHse01qxbp9ztV0YPS/hFAOKniOOa/R43xd1XYKy4/Id8nFAhdfik0/K+e
2v7+fUyo6lZ4vyAomiGyBfaH7f/v/O2OH1yl6kIH4PPdcEeplIPgul96A90b
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
QQYbhzvRGbJEaCFqPcMkevelVCPLwU4QdXJ4HGCUCetWnKrDJJr82lGdGI/Z
56mOJ3KkA23tZr2MSehKjA76LFENbqhdlI1wO2rtTn6HSWAzdz+QvA6LHzvt
Z63tOXB3z54uTKJHOyKZ6nwxv/UPj6uczAMHJifyl8k8dIOg+MMsYwrI2p+e
79JCRFXiWr5cbiHC+uLTF4iGHSA/WRB0y4eM7hy4GotJYHZ4N1xFaYD5u67Z
O/2sBvHD2hupdcgvP7is2TDeB1xVD9+qniBBUETxG0yiJ17OEwp3IoOb1DMT
Fu4yaFvTvZmVuwxlvjTacEt3EMzvPH92OqIZrba+rI1JEDF4oJ0t0w0hn7pE
u/PIaPSmxQsxCcVPdkc3Yu9F5p3HX4yVk9HWow7FmIQHoikXucXrYcFS9R8t
zHUgKWOzjvy6FhXdtC1Cb3MfmO64ucvsLBlFxNvlMQns8gdPbL3ZCNaf7qxg
yWkCeSj4yZzThPKuiUkMf9UNNuBOmNDpQKsR585JnQ44uzeN7e29aui8ZtVf
cZcEZxVdkj7fJaHVRaI+I+JkLB8OMRnIdqDOA7afK2U7gP24y8HK4zXw4/EK
x7vDpfC9TXDiznApugxRuPLMehC015y95sfagZ5WOPQjja8DGsMm9eR9akE4
DD2skdeIXtVdKPi6Bnu/jNV0q97ZDOw3CZZniooh830Cz+6iYlT7cWjMWeIg
vGztJStZk1FlkZ6q0L864MLaIt7adfXwTlxx3vFNJajzKkXTzWJ9cOCdJCna
sBXa9vLeWn7rC2x4GfAxXOALqq425lOiQe2fL/7GYUUvZLGMVW+9YIESCqSW
qLq1gU3v8LSvTBVwrtz3aKPNF9QlIFs7bLAfLINXZ4cfagMzb79wsacNaGLP
4Y2dtzvhaXT8jlZHEnznKr5ceLId9RvZeOnglTZw+sVvsFuLhFp7/7yNSYhQ
eL8VxeKrJIZvYCNrPUTs2cW7ibUeDavsO8WZ2AvB6j67C1Ib4PQuzZOYRDvy
x6/crO2BH/JCbJUnW4E1UFgJk6iW6UHer5xdEJ3jbvwkoxmYtLXlMYlyEvzF
lop3g0PT2t5HvkSojPnIEu1LRLe/eGKr0tABHK9G1kadaUOzvnZ/izzTBgGV
u7fduN8GntHMKvGKJPi16eMKTKJN/GEjHzC/03/5qcG3sAoSdE6/8aXWfyrb
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
qm53D0GqnGpo+EDbLB+uKB0fblmX9X5B4hQhwUW2uDFgjIY3vFq3OP6tOrLk
7PqQo/sINDtw/LpsaTPpimwHOYk1ZGckAn/e0xem+s4VJiDzTCP/kjmbiPD0
zOJqTCjX9OY3OQs4PBYerclGnkfN4h9xPlwhOj5cC1eLyjeH5VXjeFR3s4TO
/f+yL25nbeDnIFWZMPvdzn/dpOEyIhUJAmydqj4SFckJPXP7WJU735LY7WQI
PoXdGbbK62nP1eI+y5M7fOJ3ntxPNWqWWzd6Iewdx8y8NdyRU/hzRWgx6aku
zUTec7VdKlR/ibi/nMXXRqYXHL3ahhS4p2wM5GpHOCZGZ/AJx/mHrES+5qib
eVv77fqKjMxrnK3jwnly3el4clNdhL8oNPeqXthyUvdkdsecn5dHuN4hKhNU
S2MThUPlafrLTFbeP0a4QtiWpGFzyfvy3H89OH/uOjr+3EsH1wyvCviK+Aov
2nHMdwDhWtY6g7c/7924MYYfpkOtim8bCkDvFtLMuqyw8Pn0Z8fVaGGNr/+y
vaIwES4ww3vbsnKWP5efjj93v6jKIS1ff8Ii1iWfCYreNHznhxxj23MlBFGd
fU9+FRTS8OakWV5dGTpe3fnsazkPvwBYIRCj/iJUDXxKdFyouI131C5JQz10
2/NNgejSbXBGNz+Wuk4NCM7y6q6i49VtkxQpjdm3CMmN19z+c+N82vx+2D3L
t5v96Xe+Xcr6vJ6dPvZouXrY9qijJ4Aonb+5lZpv2Wf/F7vE/fv/YnFpszy8
W979zsNrg/Pw/iT+zsNbJhJ/Uk+OQJhgrWrJZFKg6emqHih4M/A64VtcnZaZ
01UafjGIK2Gisorw1fcu0sUxxz87cn80s/+tENJR+0zo+Ye5faaBTrFI8+79
yHvUXGHqhT6Np/UL+cG0h/gNJGvQNXFdlTdSjq9TN3B+3lw6fl7eevUuU2xe
mNjZBm2XiEB7puT4zH5SvNSV/Zs+JGibT2zl3gHsLDV6M/03hF21hnocoXhU
4S4Hpy1IrwpYXoLhz8J8TiT13wOWmF9Xk1uCYE97v5A3tk/gNNhuzDedCLHr
m+63NT6F+DV2zNt7sH0szk83SsdPtxXn5/1R/Ds/r6PpqZ6CfV8IX1vjIsR4
PtLwNfm33+w7J4h8bY1Zrt+7mGaf7q3W7bFB+5D2SMJePvY5+6SeW9rRFhCA
iHxfUCrJ64t44vbp7L3HdVE3F+Fg18gVc36FLA2bxbVw3t5yOt5e9mt6sWfm
2YO+mUqRirQVHFF4ZNGI4bukEotNXoRAZEFe94viW3BGZt7+Rdj+edM46UqV
+HNYOmnrTM5/Cq7DhlumiRTYgvOxLsP5WA1wPtaptbP8vF/hd37e8wfRquxC
A6S9NYpvffxu2vvFg/nPbBvkbiKdyywvbV55Fcn6F195n/+Nvr15SBilI1Y4
6DWyM2AWzzXXyTmiNYA8vTga6XmMjDwQ65/BY3De3ut0vL2kPUPm5z1TQWxL
aPRI/2Oor97mK9hNgQacNzaJjjf2u55syp2XFaAvojJ+j6sEFHx6wYV7EC7h
vL0+dLy9l6vupTnG5CBVrcYHXRxfIH7xs7gft6jlirMDiPLVL7VuomREZu2s
nmW1Vyvzsfx1wsmbO12KC7wOJczUS7Tg/LMH6PhnmQf5YoULPkPyz/b8x/sL
gb/GLXqtwyAUhU+FX1vcCB6vNTpLXb/AC5kVNqwufbBO3bRQZOMLMEnaUUo8
VAeHtUVDnJ0H4CjO/2tKx/9buu7ThJ8eP7jtX3dmGFkA6vl9M/ps3BUop9Us
D4aPrl09XfwXvPBbXEPF9+C8wAJ0vMDj/HKpQnoGYJ/XlzhepwV/tVxQovqb
JP6/1T6p3/+3+ha0etMoD7+yhuEhfj7lxbT9xspjHL9CYj7ANQf2sR/KWcB8
4EHhxFoK9BfM8oG+p+MDfcvdaPThah7wb1MJcl/9HCS81iQKY/N46/pV6avb
qmDl+2/9lWoFwBcfnLpwfACklydMLFhNhKwDerrm6z+CWvDxQME3vaA5khl+
oJkI85ff1J9SKoCn90SLThT2Ag/OtxuM8+0a4ny7a2LExo+Pf0GjGxSZB7Jy
wfN0guf67YNgazfLoyqC86huxHlUd48Zqg2cyoVq0y1TTPolYLxs6ZmfXBSY
h/Oi1uC8qG44LypnnVJvUWszGF3eqNRWnAa8q3o8LLb2g4zcperzPgfhwI27
vksUo+CKUNpaErZ//sCAd/JfPJKvcR7JXziPJB+D/xRsGfTlZnS9M4O+2YzG
+cSgf/Wfjm9F1496Fd6P+k/ve51BH+l/lz7edH2k7fE+0v8uPZ8z6CP9361/
GV3faVu87/R/93PdY9Cn+v/a81LK/r7/9j92mLXDCQb/XzCyz3+a3f7Jt//k
2/9f/f/T4u5/6nkXMuD9+b+Wb//T8ur/tef9dz3X/5T+f6onI36EDWeCFCts
ymm4TpOt7LjAf7/+f6pnWiazD++ejzQ8flX4NzV5CkwfSTirYDPXT1j67UGJ
U5K9/zY9Genzp+Mwwv+37Lv+yQ//N/ODIl1+2P0fmh8y6fJDHJ4fmIx/zw9S
/8vyAx+D/dLDlWnvu67P8doQqpGcXPN+4FEpCFlvPsdf9jK5vOaHVD8I0OEZ
OB5NN44qPk4befl3jow5/q/2gpGlfff74R7d9YBfz0k3/it8fME/vK8+XX/4
QLw/fCtdH/vFeB97Rtf/u8aRYrA+CtHhe3D8T+8rymAcOQZx9+YP/fzfZQdG
z6vAQM8/nZc/xf8fEVC5dQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{290.6366321683415, 284.2889734989375},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 0.4}, {-3, 1}, {-0.8442841560477581, 0.7259089290109064}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.2509492546897034`, -2.4397972754491564`, 0.6562139190254062},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.763150805351835*^9, 3.7631508177367268`*^9}, 
   3.7631508514333925`*^9, 3.7631512128855658`*^9, 3.763151248452176*^9, {
   3.7631776940404034`*^9, 
   3.7631777007192707`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfWm0XcV1ZvlMd3jvoQkwkt6gATAzaJ6QQMPTPA8PzULzrKfpCSEBxhjb
gI2dpLvTcdzdbttxbAxx9yIrKzZO7HTadtxxPCQ2AWxAEkkaM/VP/6Xr27t2
DefWvXrYyVq9VvPWq3vPUKdO7b2//e1ddYa7YufpA3uP7jx9cPfOMYtO7jx+
4ODuU2MW9p/Um9IPKPWB8bp0jlFYflcp+XhX/797LT6w5f3l95f//11+BF+p
2rdv33/hDR+hrxxbaEkK1v8zVzlHX6l655131AsvvEAloc9U/frXv7aHpObT
b+pzl2siC5rQJfE697HmLQ6i3w2y/jaKO09fmXr22WfpHKYk2HAL9lFXTnDl
s/RVKVe269hLRxrZsIRyU0Tek9zkGSuMFhp1y0InWKL+JbZj3U3VnpfVTm2c
4nOdisiql4tI7+g0KfetUZ7Rg0ROEmn5OPfleLwvtWZ9qbSw07jIQf18mqPx
07RHjqiXtuGQmDFHt0Cowcmh+FmHtDirb/qU/SUw+TUWJwY4++PnGB45x4hS
VfNN7T7Bre2Jt3ZVs9ZM7xr7+XFub2e8vWsi7Y1qhrKPclPb402NjjTVGfGV
D3MrW+L46W7WSskkSbNOPsDNbzSgiDHDmMg5rjPd8dlDenxrpP5iPk2fY4uw
f2ObniPcFhMhxk7mfOviur8+csQtETCIJn8TnjA9WB3vwY2RI0hveUTAkb99
N1a0wnOuHn74YeX/YT3m7bdaJWURdXWVjsD3Uj7/0vj5WbKaPf/uybn65r01
9ZV7qmrlDZkaOXKk7U9Hs/6UoFSUoOmzxWjutV41/VrUwjkTOnVNPX+8Tf3t
oTb11/vq6tltNfX5dRX15JJCnb8rpw6iczFCnuq17RFtjBjjRlsQ71yX7Vyi
Xh1o1z38eX+b+qHu4bd21dVTG2vqP66sqI8tKNSpWbmaMjqhHrZFzjO7BbHe
y32YG+9Dj1NQh3rzfIf6VN8Y9Yl1Peqja3rUw6t61P3LutWfamV9YX1VfWZp
RT14d6FWTO601ixHK5Q5kW0lbW3lXs2J94oD6RA6yaRJk9Sn7xlD5UnduVdO
t5OeHlndo84t71ZHFnSpP1xdVY8trKiNMzqtJWMdWxCx2ybuyaw4L3N2Nox6
8s6DHer/6PK2Lm9oVV08065e1r156WQ79fLDK3vUmaXdpKrfWVZRD88r1Ppp
nWrCSLZcLKdYaBzXD/bSBXKHGyzTMj2q6S0Ynpl2hO2t7fEDHepX5zrUP59t
V5fu496+cKJde0NdY62msVZVe+/uUltmdaqzc3K1f3JmDVyN9HpZRI/XliSR
gnVmSXakWNSQCCH0gX6n9HkFaRqgfGJDD9n+l6e0/bUnf3d/nYD5X9dV1b1z
ulTf9E51bLr15Fi3iTzZxCGt6DLm8t2fFAerhC1f6dz5NlL0v9zfrl7TSgdc
4OaPru1RPzysnXxnTX1tU039hxUVtfXOTu0hqJ1axTsOjEgRSwuiLN5Sojvi
Et3iSfR2IFGmfmfjGPXWA2yST27o4U7X1ePre9RPj7aps5ouwK1f1D7w5OJC
bdOCrZrSqSYze1Ui8myI83zq4kpLGW6Ny3CbJ8OZOQW5QAJpEgjC3R5ChAKn
gG1gI3GOj2hy+aa2z2FNLp9dVSHHwPblk0ZTi5/97GejtvFlaR4qrr68VDfF
pZpAm9vYMg90uKJtA8ugj+Ls/3KWZUoIgYxF4A9m+h97OQRCvt3a8TfP7FQb
pjvybC5buC2LBx6y3Ygyc30oLtMkH21GngSfbKTM8i3E0CWhlY7AtxAQfnCw
rr6xkwMnAsKO2V1qnabftdM6rc3yiAxbBxXeOcSqa+MyTDF2EQITOdDHz+jA
JcuIsP9b9xn2IRk1wWH763odBfte1gT34yM6TTE2Qjj5veWMwdVTOyURiImy
u4U5ZrAAY+MCTDebS51PyNcz6iOWXj/Xju/EkAE2wxgoOj6ntKFGeQOIAGso
n1rMgXBGV2ItkV2m+80twemY6o4LMtMTBH4P7evCgqRWEGeAlPAlhhIShkSo
w2v4rKg/21FTX+6rEmF/vLdQ93jZRkyc8ujbt8ZEFmJ0POuY7bmE9Dg1n+gl
YPRW6CbDaAc2+l2HveDz/3CsTX3/QF09p/3jTzbX1MH5XerTOvVdP52tAjFg
ldgU26FBWeV2FkgGIrHsZE4LqcQ5WKq3RKqhZKKyVG8ayF3SrI2kHp6PlPnr
W9hb/r02ELx/zdROEi0m1YkWxrmZZbk6jrC7S8nK21aMnG1wnjPpt6w46HMR
SPLGOa5DLoaFGrk+8hsINLCkW/Uv7FZPb6rqUUpV/a7OJtEIGyojU3lB49Sg
LHQDS1WehDFSzS+xsDNOYXVuekypuJADs3FONcmoRmpoggmiSmn6n+/gNPNz
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
+qkdBKScejPaSw94uLmbwi7FJ2sy3s8N+hcTMw+Ugufc8m8srcla7rVspskX
cEwDik5Uk5Qkj6cwDsTUTmap3G3zIR7szcN6DQNYS/40CmiW+kvaktn6g8hT
0rCen5WwBvEHtr7EDC449fieCB3fCS0VFuSlZF5eByRXev6xRaKC+UlAWqbS
z0uSYiZwDM8TxmWu1iYqBMrngN9vNqQq1PMK8zvhlhM9ycwfbvI65g9GoUqT
5pkdcDJcGy/NINtI/LnsgSX+nFOQRqR+vRCPpVkZ7JyikTgFSAIVp7Rawqpj
ZVOXp2dKOUfpXBZBxyo2+0ido+Rl7JvHiKRWbtHtJdSsIEFcNsiMw5u+LAIo
XnIJRWogKfmGwI+19homzbHYTgNKLMmVHP/2DVzKkQGluXVDcg3g8PvePPlf
743kGuUplfsoxzgTTC4GY8cWOYYyz2kNGzQQ5bkfwFeenjM32NoLNPS+PiBv
wKY6jSiTmYgQSQFF5RyZQ2DxUQHHlatY1nRAKScNdoTomkqa1UtLUb8RlC7R
MLMc9kjBvuwdfduGMCuO+YMEetNKbvIJP9dwzJt5aQBRJcNW/PfSaZcx281F
Q8Y8ibPlhFCf2bzgFb6tQ9IPuTRuY5qZ9PZ1YbhSrodLOmBmP0wkjGYCCWcC
W81FHQLmBwcNzOGWIT1lQNVbbs8Sg01/JsybXghJUlCVM99Zs0fgm4VVkjIs
p7QIzKXM1J3XpbFp6A7CcxyxPY9JbKBPGyo3DMOM4wm4bNob5h+pbSNzVQob
2UW/xJGn2+TitoRgs1lQZYdt/tiM0lE3w4Bs9LF1Mr1Tx7VvL3SzffxLMD/U
ofuhFd1+1ObRWY2mFxqiNqWZmfqGQVgsGnfyIF6rN35hemQYg7VfAlUCCLQ3
QKkrhVVWYkOKWAATqQ2YCRPElHhcTO1eFxcdKn2qcuhtTAjNeNCrVkoM/YaE
n2z8HAxOGwCH8AcMMJ2kFhNPkIGx5NI6f0gvjiYpnRvJ1KKh9HlvbhZjd+Fn
unXHH7fvqfNtEKanHDK/ZTI4DoUDNjxiyQ6pKdLJD9PISOPdd72nwuW1Wo3Z
WTlM8PTllG1PlYKTH34EHqnnq14brpZro0lAym1bFYu8xAYk07SkavRWDL1Q
CU+iRRnlRayKQwVfepviSmtMGmDA9I9bENQtMHzimMQ5PBGIIQ+jIMCibgkE
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"d1", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "-", 
        RowBox[{"d1d", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
       RowBox[{"g1", "\[Rule]", "1"}]}], " ", "/.", 
      RowBox[{"g2", "\[Rule]", "1"}]}], "/.", 
     RowBox[{"n", "\[Rule]", "130"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7631509103316007`*^9, 3.763151064229329*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nX+81+P5x2Np5MdmfoUm0bIlSUhyzrk/Zl+/f4SRISLW/IiY3/k5NhlC
mMTGmlFSOJLU6bw/OyzjyI+zHCo/0hJifrNh1rfO+/V8ne6r77d/epzXuc/1
vu/rvu7rvq77vq7r7n7imYedvGaHDh3eXqdDh2+t+L/7awc9snz5hwX/d9C/
n5/z0O3TR7xnvLr7r14bfFr/yv3rbnT5iIVLja/1+Y5XnNCyLH0w4dyf99hv
sfExm3bcc/9ux6ST2+gsNP7B6U9///ALr60r27cYH3LhzQfvPfyS2hJvMn79
9s++/cxaO9XQL/Cvhgy7+fRxfx6o9gn86z0H9H6o7vUBom/8sRk7dZx36cv9
1R/jJ23Yceqzg27ZRf03vuj2bm/2v32jfhqv8QmX7LfRmO5H7Cj+GD/1gCNu
PO+yn/XWz8ZfPTY9etOXP/khP8NX8bPKz/zPOOEz+OPiP3wG/+izkv/wGfxc
8R8+g8/M+N9kHP7H+Yf/8Bn8Txn/W4zDf/gMDv/hMzj8h8/g8B8+g8N/+Az+
0EHHHP/SCxdvD5/hn+TT4wQXP6v8zP+MHz6H9hX4DP7VZ6vKf4vxMRn/m4wj
/3Geg/wn8Jz/LcaRf/gMnsv/YuPwHz6Dw3/4DA7/4TP4rz7//a93Xfe8Pl7P
4pPGaz6DSz7bxy8c/vMz/8MX+Aw+K5P/FuO5/mkyPl78j/OZ658m662c/y3G
HxT/4TP4IcetKv+LjcN/+AwO/+EzOPyHz+AXPL3HEXNm99sJPpsfZf8b4TO4
1rv5DC75NF/Axc8qP/N/zq+W2L4Cn8Hhf5y38bn8p9B/9L9x+A+fwR/M5H+x
cfgPn8HhP3wGh//wGfzj2x5/eMCkh3fO5bmF/szO5bkF/dmYy3OL5T+X5xbr
n1yeW8z/XJ5bAv+bYvtKnJ8g/9ZDOf9bjMP/XJ5bgvwvNg7/c3lusf7J5bnF
/M/luaWYMHn7J9c48ZNdcz43od8acj43mf85n5ss/zmfmxhv4HOT+Z/zuSnw
v8l4h/AvtK/kfG4K/G9JoT8p53NTkP/FKYy3Nuez+VOT87nJ+2/O56ai5urt
D5m79ue7RXtO8zUz2hnwP+5/8D/qZfgf9cX4TP7b5Tjnfzt/4X/kd+B7Cu3R
/8bhP3wO/UGftu8D4j98DuOthc/g14n/8Bn85788e9Mr9p25e5DnJPmfEeQ5
ab5mBnlO8D/Ic4L/QZ5TLv+W55Tz3/Kc4H/ka5D/FPkd5Jn2lSDPKdj/KfQn
BXmm/3VBntPiC0r+B3lO51//j7RZ0557BP2cpM+nB/1s/gf9nJD/oJ+T9FtD
0M8pl3/r58B/62fzP/IvyL/1RND/xvn7oJ9TLv/Wz+Z/0M8J+zPo5/TxhiX/
g35Ox3fcZs7TN1xTE+yNJPtkWrA3zP9gb5j/wd5I2q9nBnvD/A/2RuC/7Q3z
P/IpyL/1QdD/xoP9s5r+CPaG+R/sjYT9H+yNNOrXsysr+R/sjTTj0INuvnLL
m2uD/Zxkb9cH+9n8D/az+R/sZ/M/2M/mf7CfA/9tP5v/kR9B/r3ug/43Huwf
47n82342/4P9nI4R/4P9nLa5o3b/lfwP9nOacevDVw454Ni64A8m+Y8PBn/Q
/A/+oPkPn8Hhf/AHg/zbHwz6x/6g9X8cd5D/9vWd63/jY3L7x3iw/40fk/u/
Ke6HwR9MC+/88JGdV/A/+IOp26af/ezM+xbXhfONpPOQB8L5hvkfzjfMf/gM
Dv/D+UaQf59vBP77fMP7bxzfdbn8ex1rP0L/G5f+xP4xrvVuPoNLPj3f4OIn
5z8p2h3hfCMdsOSZxwbu2M3nSvxe50sTw3ld0nnI5HBel+S/T4XP4PI3Hw7n
dUn+0SPwGVz2/KPwGVz252OrjaO0lx6Hz+Da32fBZ3DtR+zLxqU/sUvb8XK9
45cZl3ziLxsXP93vaN+tXX1zvbE93i2e/OFlPRdO/6fPf7Zua/eG8QO0z/Iz
f8f5xoGDf/LpvmOXRFz7SKtx9mt+5u+gw3cDLnus2fiY0B/+Tv10O/D8HKzV
eDWzN+qNPxr6yd+hf2gHXs322WbjM3P6KdBJ9JO/G5Odb7Qan5ntI/XGc3u1
OYFjl9JP/u7RTH82G8/3qfoUcObR+JjM7m2FTsrPB+qN53ZIcwo48mb80cyv
bKa/Yf+t5/emTz/B4b/4bDw/t6yH32F/aWZ80EE+jSM/khPj1+b0mQfG5e+B
V/N1ZBz5l5wbnz3li1P+vJX5gxylIJ/GkX/6CX7oyHtfXZU++C9mj+46+Oll
Hg9/d22+voyLThU6/s5uW07YoEP7/PJ79d90wPVd9IVx0YG+9VLQv8aPv+O8
ExYNqmO8vmeZs9uwC6fctTny4PbcL7BeaF/z1oGHvLH913X0g/bDwz0I+K4v
bdf6auWdH/H3fF/fdf/5PufGtOf7+m4j32UfqJtz7ZTeXSebL+wDd8947rxt
Ltvccsj/0Q4Af/bG1L3XwXVuz++FV8N4TSfwP4kPDwT+p/v3XvjiZfc/eT/9
Blf/bSeAq/+2E8Bf7T1qWm2fmmrgc9qx08J7btpkE//M74V7XumX5MHzDr7H
vM8fv32ryZFOof734mf+Tu09TvqrflbCd5PkYdKtz222aN+x76fdttjv8B77
LUu9t3jiiT22rKvwM78XXv3kV0tPH7HwA+MXvXTnUQO23LnCz/xeOO0L/me+
aAf+UNMjc1eOCzrzT75ozvLlb6dre2w85L2T+7s//A8dfma88x74z2VTTlnt
u0n074cu3xH9Kj/z///Tz+gfeT6nav3yM78XbjlB35x4zAHXfTK6Qx10i303
2HpsjzfT1ae88033pqM9HvTQi1t1v/H+uzYP+nyFv/PEMduulB/o0/7AD4d+
eu3N95n+qIcn775w+ltpzqT7T97z/Pa/h57oWM/zfX3X+wvfUf8bae/vl9/1
/Qj8GCY5F/8tD+g97GHab5rLv++1RMfzq/m3nQPOd9BvrBPoMF/8zO+nBn1I
v9Qf91vzZbsIPn//m1cfmD7iH2n2JW+9+vQp91ue4P+o33562bw/bO75gv9D
Lu640S6zOlvOkNOaH3258Rdbblbh702vpFPle/ydvut9iu+IfqG/9zjQP/zM
79mn0DP8/rb1zpg7cGT7+oJPo4UzH/w+2CHGD2u9aPLkm3tV1H/j6D1+5u/U
3t/l79B79JN5+deyLqdVb9mB8Xhe1t/zyV/+eMV+ip4EP33CL5fNO2+u+Wu/
/pTl6x5wUy/bIczDez0XXP3+AR2NM18Tu6z/556H9bK+Av/0wCkHPtcu/9Zj
wr2/gEuPmQ7zOeOKqR99c2a7vgX/5NZlz23xr1rTh96dG3fovl5n2xumLzrG
rb9LOlX0EXIlvWT/Gnzb1x4Y+fLVVzEfpiM+F/CL9tI/rE/jkvMq7eGr+Fyl
Pbj4jLyZzqPHXnvl93r2Mz/B129+cZ8HNuzv9tC55bitflH/aY31v+dzo7u+
ee2pvtbb0Dltv+ptz67zdR3rBLmre7TusabOddb/yKnWheWc9l22HjP/8/eu
Qp7cnvNk9BH483e8cMOno+a6H9CZOfSUb56+4rMf0Q56nPuBQ090vC7g0/Hj
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
Wqb7a+L9wD8R3mGbEme8+j+92PH36/bc+oAi2KXpFa2vYJemOq0v9o9Owm/R
d4O9mmq0voL97/NVxjtA+/7+bz5392vd9yiC/Z+e0npkXJNkb7Augv3v+C70
e2fZM121HoOfleq0HoM/lY7SemRc2APogeBPpb21HoN/mtbUuqOfsZ5nxKcJ
D35oqm2rz9mzEvz69OlF5bpzP4W/8tFGbXSCX5/OOGTDiSvXXTjfcD3PiD8m
HDqvSp/32WTwzE/PfLUI51fFcN13hP2r2L88L7X9vK7Oc05RHU5w/V/cofvx
YBcVA6U34E+8P4EOcRzHb7TJBRO2qauEc6f025L+g/w9471T9bKgA37q1uvP
X39U/2q4l0/N72/wyxcmdi3CeV3Ra2rvcc29707hnCS9tvnK+pB9fA+ylebl
4iOu+KR+l7pK4E8aeOVpPSpbbuvvsp/utsZ1nWbds5vxquyWRxZdMfqGX/Q3
nU8kD9MX/KjofPRArwvsAeo6gv9O+CXCw7ysxuepsjd67rCyfmZvn2txbnZP
eV/g/iDnm37/m3s6b7BxJdzvp0Vt9RX7GGceN32yDa+G+Ir08ROnfnHYBhtX
Q/xGOk51F0OcRrp70xsfTm//0fYY/dS9v+UWXPED3seJy1K8TTWcC6V7Lnv/
7++0tI/3RNm99/608+h01+bWG9hRu5511sg3TxlfhPiQ1HLFFe9+5+Tl0W4s
rtP9Gjjr6wTF49F/2hO3SX86yp7v8kGHNw5dxZ/tr37tcN/tr3+yYv2G+Ir0
2sR/3fn+/J0q4Twwva+6fODYvdTrgw72/Nn/eOOP5zQNqIS4l3Sr6u/BH/Im
3ri3rT/VcL6afqg6eOAfC0/CLf/C9xm026Czf7dLNZzDFxefP3T/9fdoj6ci
PvDCtbdb/mz3JvOHfu7QVgdsW9uBspOLDu+VdgjtiRf7Q9fOxde7DfS8u27q
gjNmXL/+19ar6JkvW8Zu/5uN3rQ80P7KsB7Bbyr7Y/tK+pnzKMd9KU6yOKfc
Z21vcw7MeXvwp4oOX5R4btf9s3j292W8R7iXKaqSN/hMPKTii8x/zqXHlvJs
e572T5f3reYzeEX2YfB/FS/XpxL8u+KD0s5x/znvlR+agl9sew86fLeX4jfC
vVuxpLznCvkUS4jT87yAv6q4CMbF/+hVft4qw3uE+/rFxZFa78EfX9H+3rZz
0eC/FzeW9qftQM57OdcK5xvFObIzoUP/idMI963FEO3vzC9xp3uVcQ7eH8G3
KeMlqvk6Yry9fA75ivh3eGlX2B+h/QWyN+Az/8NPfr5I58bzZN+Ge/PiMun/
cG5TfFTem9cFe9V8A99S59jYybkf/UZRfbvUD7Tnu1tpf8nPk1tXrMe2OJki
l7fW4nLFXcC3UxRPyzkS+AnCv/wsx4kLIo8gvxduLS5RnEbwF8xPfr5X595z
ZZ/n8tDi9Yg93El+6D5lnEldfr/cWows44tSHv/QXPy4jKdy/8G/CvdK98ov
27xcp415/ENzcYHiNIJfZr6BH6Nz7yS/II83aPK+n58LNRevKK8w+HHmGz/P
0zn8T+Vf5PEJTcUu5fzazi/kR99YxmX5PugEnZ93eKnUt3mcRnORgn9KvPQG
iusIfrHP64IfnRYHnPGcpLyDvP/1BXEgwb/2OSf46Tq3/895pX8U5exgrfc8
HqO+eKGMr6gEP9f3JsEvLjps/Ux2f3Su/PRzpa/y+I36YkEZ75HyeLwVdEaW
9HM5r0+7KA4knG+Yn+D4xZcovi7IVXqo1KshLqU+DVG+czgPMT99bqnz/zV0
DhPkKlXLfSfEL9WnabLPwR9QfPth2l+wTzjfiPdTnG/cIrsCvg3T/QV6Eny4
8LuF5/F+9WljxZHm/G9Kd8uuyPVnc3pAcSbhnMr8B9d9X9pGcW5BX6VdpTfy
OKjm9JnsljzeqTk9J/skj19tTn3DvZ7uK1Mf6cNwf5c+ln0CH7RPmW/gkpf0
pOyTPA62Oe0g+yTEi6Z3ZJ8gV+Rt9FPeejg/NN/AuWe5R/FjYf9KraUdGOKC
WpP8FMvbE7o3Yd/J471bE/Gi8JP/0Qe5fwe+8ewQP5yOktyG+9zUZUHXNvvH
993qT79383tJ2UXpZzNK+yf3g1rTGadu222l/RPikNOB0ifIj/NdZP8gD+A/
kP1D//N6J119fo5flqQP+S7tR+xc2j/wk//hW4hzSCNl/4Q483SV7B/mCz/9
TdkhIc4k9ZX+hw7tL5Z9wrhi3bOInxRw/M2JkhP4QPtpu5b2QKRz8mv5vSHn
ElsvHPH0ynUN3/AH+8pPzM/JqVfWx/Ykfs1PZZ+A0/4XivcG131QMVD7b4jf
K/4mOwG7Bbta+T72C1yXONw7YOcvEZ0Q71cM0HfBodPx8zLuGvziUH8M/CLh
Q3X/kt9fr+iX5DDEYXpf9v2L2vdSXDQ4dnVV+06IzywWa/8Fh875ipcOeslx
I+Dcp/TVePM4zNZikvbZEE9bHKt9No/DbC2e0b6Zz2NrMSPcmwwTHemfam5/
LixmaLz5fLXi/xrvHOqMgWM/c+4d9HnxQsjrxw7cVPtaiH8u/qV9LfeDmgvi
nMEVV1D8Vvo8n6+Wgn0w7MvOJwr2ieNDwLFvbxYfwv5bfKT9K8SrF/tr/8rj
h+uLt7Qf5e3b733Al4lOnejk9kCTxxvsveIPin8GJ45lVrgvGyJ8SvZ+tO06
++/BHisGax+Jfuxh2keCPZ/+pvhk8P8qLmW+9Hb0Q7pr3wl2e5qpuOXgpzie
BPxs2YG3iA/BPk/40XH/7iD/N9jbCf832Nvp8s3y+6ySyI013PeF+UoLNd7g
96UtFJ8c/FbHY4BPFX5l9j6y/bv0mPaj4GelQ7RfhLyVhD+b5zE1p9O1X4Bz
77a39HZYX2ln+b/BT08/VD5OOH/wuHy/L3uys/gQ/O50hvzZkH+U5ml/yeO6
W9NO2qfy/bo1NYX7uA9Fh30q5Csl9sf8/L81dZLeBseeZ58CP1g4+1Q4b0nD
ZZ8wX+A/0/4V8stSs/Yv35fldprxW2QnTw/3Gq6X+/A6J63cv8Ch8/mXx97c
d8X+BX6j6Pz+08bPV9bRAv9M94zrbHzit1byIcRhppPW7vPH/Ve5R7tX94/H
j7xm7G0r9D/ziz32oPa7kG+YdF9g+4r2jdrv4r3ko+G+EjrUeQv5iem5BfPb
+AMOnacO36BNz4N3DfW1wLk//blw5hF779va10LeaGrcrdzXwF1Hq+F7bfsa
OHWk9pk3qk3Phzzf9JDqaMEfzuefO/jB7a5dsb/8f/ekkc5k0Ql5mukPX+18
5ZQub1qeFQ+TbtT9I/sa5+TYA467UBz42JAPzj0p9Rmwfz5R3Mgi6UlwzjO7
Sz+Ac+5KfYn8fuR1x3WAE38yPuTVQv8vWT1/x8sVHc4rzxPA2Z/zeqrjGnwe
vizHTyIvtUuuB4hv4f4rxBkWh8lfBmf/pC4KOOfGg6SvQrxl0Uv6Cpx43X31
Xd/HKe5F8RK2W4gr3jzknyretcjr249rUFxo8X5Wd9RxravZh5/Jrhga7I1t
tO/B53D+s1o89kThHbrk+CmhThF8OFrnqIX0ZIgTTmODvaf2ri/Euvthzod4
jmf/Bfw5na9+//M8z1R4qANv/qRjsnqejt9ODwX7jbjcItgDJ4T6QoE/qTHg
E0PdoSA/6RrZnyFOPv0u2F2cFzUEf7lRdHg/F5xzwltDnib2w7Bwr6R1lHpl
dS+dv5BGB3tJ69T1fxgvccXoDXDO5eoDTpwt9XMYL/E2y6THQp5I+k6wc9D3
rCPGy75J/Bs4++ytIc+Re/M5Yd4vCvV5wInb+VXA0fc1oT/EgXTcoGwPTtzI
v3vkeXbsJ1/8c/lPVtJBb3J/Pe69st4OOHlS1NsB5z63GuIkFZ9QVJ6c+fVl
t46yvU1+057KvwjxpcXmut8J+XfFOoHOgFA/B1zxA8XlF5Q4dizxn+R95Pb5
yjyykW11RUIcb3GD7k1C/mNx7fC/X7/OhHacfZPzbXDul48K+4XinIt/q85D
iOsuhv6wzN8PcezFQ8rvDufhrocTzs9XjOvuDMc/7VAp69KAvw++d4mH83nz
LZznF0t0vxnPDaepPgw4fiXygBy/rvsd6If8jjRI8hDy91ejg18G/8Hxyzpc
WOLI/d7ym+77/KVNVn435L+kry4q5z3UQ0jL/qdT27yDbyG9t866Q7quSv9S
6dW/P3tJ27wTL4J9pLgR1w8HV30J18kH75jVw2nPY1Bdghr4Aq68/oH0G1x5
8QPwN8CVV94f+xJc+de7YB+DKx+5H3YquPJzd2S8nCcprs/1wMFVL8J178FV
V6GWcYGrLkEN4wJXXv9AxgWuvPgBjAtc+eP9GRe48ql3Ce8PFsov7ud8WuHK
t+1D/7G/VP/B9erBVT+h1vdGwlV/oIb+gyt/fyD9B1ee+wDnVwtX3nd/+g+u
POhd/C61cOUF74SeRa9XwzsC4H/L350xfmR4LwD82PydFON53ekm4/uHd3bA
Twr1/8FVd8J178FVt6EWfnp/U30Y+Amu+gAD4afzDFRfCH66/6rjBD99vl7m
U+8MP9kPdf7vuDHwl1QnBD6DKy7I59rgOic3n8F1bmZ9Aq5zWvMZnHpf8Blc
54TWs+C6XzaffS9d1sFwXX1w1ZGohc/gqrdQA5/BVX9gIHwGVz7+APjse4Ay
P31X+Mz+P0z34/AZXHXJZsNn2xGy9+Czz191Lw+fwXUObz6DK17F+g1c58Dm
M7jiE/yuAbjOIb3fgOt+2XwGV10O1+0HV/2KWvjscam+FnwGV32DgfAZXPn+
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
w3ad6iQ4HhL7RO9XNlI3gfbc+1A3AVz1E5zPD45/x7qAvt5DdD6/7czMn623
3aV880qH7B/nzD1qyT+nPfwk/xxceeisF+PKj3Yc5mrn1dJXgQ+u1+N3h4L/
Cx3VW7Af6rov0tvICe2PzOKOmtwevY080P6xPL7adpfe3avk9WLGNSjf2fGl
tNc7bvYrHb+XxSe32B77WdiPaH9Z9i5qhw601/uGtqNor7xyx1XS/qywH9H+
wSw+ebHbDwx+H/jgLO6lyfYPfhD8pP0heXyv93G9S8h+4fbKE7f9T3v8JvZ9
57dpv8AOpL3eQbPf53yvLK61/X5BdQ8kNzf6PR/VPfB+Ch3l45v/tFc+fpU8
fMfdad+B/84X1L4T7yPws2K8HHmanBPaDizzo+v+v3sK5gU75HT2Hfmhvo/I
9x3j1E0iDx98ejh/Blfet/UDdovqDLheGPiY7B68HWcfgT/gymevkscOrnz2
6lYBVz675Q27SPUBCuoCgKs+QEFdAPD/btRWH6AgXxFc9QEK8ht9r1HWB3Ce
G/bVI+Fc0XFB0j/r6XwbOkd3+ejw68/pVVk74J8LJ1/d72LJnyJv3HFB2t9p
j93C/kt8lPPLtY9MDnaU+lmFfqDje09w5adXhgc7ijxc8rRpT3174qnAla+t
+oPt+S/kQfP+HPYM+Z7EaYA7n1TxGODk4X5V7oPGyV+mvq3rJuo+YkHA+a7q
nRn/j777ZMDpD/U9wbEzpwYcvpHvB666OvKD2nH4Q5wb++wR5O2KD87j1Lrm
3S9w8p2ppwk+WvImO8E4+oq6ex6X9k3yomm/RPKZ1+FdYZ+U9QcaycMHVz5+
lXxycOWVV3jnwHZFeA8anDx3zl3ZH1V/oCCvHlz59VXuc8GVH+18fvYp7L2J
AVdef0EeOzj316cEnPM64uvAWXfrBFz53RXypcGJc7g44Mqbdp6/z5HU/2c0
7+DbSp8zj+DKc6/+M+yDlnPxjfbEk6BXTUd6I+6DrFPuc50vXuZxO38bXHnc
KcaTT1c8eX/JCfsXdTOIm/I94ym5PPsdBOkB6hiCT9u1pNMY8IuED9R30edX
nzxx9kp5I+86v5/t47gg8GH5+Wp7e9lv+Bfg5KFjl4LfrffQfy6/CX+8JssT
rDd+pd6X13t1jod8JMurqje+ZNO5C/591Pu14PE+oly3d9fYv9Z61P2O25Ov
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAcYV9Mbx+/v7mtElMhMklJSGaGhREZGMhKSppUUQqiQWUZWZRXKSGYh
W0iyR7ZKJdl7ZP+/n77n/zy/+7zv79xzzz333nPe847vexr1G3rwyXEURRsU
UZSIPppG0b61KLpf9IIsin5T2cniL86jaJD4zaso2kdHfZWtoWvOVfnRKn9Y
/EWq/7v4oTrXXf8rtdOzjKI6Kl8oPhNtr/JTVWc7lXcQf7rqvqb2Nta5z1Vn
Q9F9VV6KP0h11tP/98VXok+ofLiunSv6nI4x4l8W3UTnlqpOPdHXRV/VcYjO
7a0H+1G0p47fdJ+nVP6d6AD1eS/6rPZb6vpvxK8pPtG5XuJH6EXE4g8Xf7r4
8Wr3T/Gnqqyj6p8nfifVL9Xvc8RfrfbW0rnjxJ+n+huIHyl+vPjdVH+Y+Oaq
P0ztfC9+oM53Ut++E7+/jitV5yOV3aH2+qrOFyo7Sv8vUvkW4i8TbarjaJU9
rzo3il8u/m7xc/VMz+joqnon6tpvRfvp3Crde2/xJ4g2Uf1G4v8T/V3/u4k/
XvQb1Zula1eIHqJn2EnlD6qf7+n/VJW/KdpP9EAdG+t4ofA3elx15oh/V/x5
4ncpPE62FH+d+vCP+DN17a6Fx8PWKn9M/Aeqf4H401TnB5UPUp3xKt+ed8h7
1dFfdc4SPYrxoPIjVGdr/W/FOKRc/ewg/lbxS/UMTcX3EL2C9lV3ut7JwarT
Xu93uO71p8qeVZs/ieY6jlL9s1R/rM4dyjdV3QG6djfVGS16s67/Qufn6fz5
OpapH6+q7BYdt+n6Y1XnQh3Xqf5gne8jvo34/qL9dOws/hzR/xKPweGiA/W/
vcrPF/1M7S1W305SWyvE/6o6a4su0vmlsd/jbrnfN+/9I517V+Ufih4e3g/v
6QzehfgzmXelr62Jv6fw884Unat2uoofLv5p0ZdVp4vafzLwjPtfEo+dQaI7
FZ4v9dReq8JjqY74OwrPnTv55rwPXbtQdKWOT8WvJXqh6g1Q/Qt1z5JxI/4c
tTlS535mvKksEf+y2vlb/Am5x/69arOm8vkqX6Xyc8X/wlgW/57KXqu5rUNi
v6v+OvYT/1NkuXOM2uks+q3qf6y6H9bcjzX1f7DoGPXhNNU5TPxm+oZtCs/B
uurvzoX7tpH4+8W/pGtHih/Nd1X5aF03Rnxf5rX4HQqP2/VVdq6OT9TXBWpz
ceb+RKLPMz90HKC/96n+PL6R6r7Dt4x9vwdU/grjpPQcopx7HBb7PRwj/lO1
9aH+x6KzVf8NlY9S/YPUj11UPlT8AcxZxpL44zJ/z2P13Huo/hTxXZnL4m8R
v0S0k46zdP4N9flD8VNV/pnonbo2ZXzq3AOZZe/F4u9VvR9FZ6jOoyq/Svea
JfqK/m8p+qjOdxeto/I9kds61hTfWfQy0YJ1RPfYUW08IjpL32J3XXul+Pbq
2126/jOdu0llXXSMFv+WyrYWvUF1piK7xE8WP0X8YzrXXP8/0LW36B41tX+u
/nfWtRNUpyOySP8fZx1T/TtV/yvRF1W+pvjxKr9B72xT1blU/HU697quvUr8
u6Kbqfwy8dervJ34x8Q/In5n8XNYL5gj4h8VP1v8m7HH4pmZvz1jYLDOv62y
A8K3/CDzOnSG6CW69+mqUxQeS3vwvVT2p9raFV70L9YMZLhoxlosfkhied6O
8S76sJ6lkc69q+f6Q/93UXlf0VRl+4g/SfymleX8QLU/jTGqsmnqzye6707q
y5Mqa6H6d6rOXcgAlV9A31VeV/0tddyncxeL5rruXvEf029d+7jqfEv/xT8t
vhVjROfvSSyvWIP/U1lLHXep/G6V76B22uj4krWftUt0hsoHIxMj9+0ltTVK
12+q59pKdSap/BbVaYNM0PlmjDGem3Vf5U+J30vl97Au6tw64q9g3RFtomMr
HVP0v5HoJOaFjgW69jld20X8S+gS4q9Vv9ZQnaf0/3C1s5n+HyLaULS+jqdV
3kfvsYv409S3Jxjnqn+Z2uim41Wdf1HtvJy7jT9ZR1S3DvILGadrdhTdU+e/
Dd+xD+svYws5JvoVc0/1P009p79WeScdB+teGzKeRB/hO+joqPJ5usf5oq8h
m/Xeuur8d+I31fmvIq+RXdXWy6LPq/3myGGda4oepfq7IruRK0EP+VV1n1bZ
WqozjjmlY77Kn9W1B4v/RPzb4j/M/Uz/6Nr3crf/rZ5vvq6tq2uvUt2+yDAd
G+iYp3sNUNlPqnOr6DYqu5FvovILde01aqMHslv8W2r/8dxj7We131f8nurf
6bp2huhkXXuEjuOY/8go1Vlbda4QP19tHK/y28RfqvLu+v++2nlVbe6PzOBd
id+PdUX8K8gi8S+Kf0Z8J/HzxD8tfpb4LmrnbtEDdHyo8tfD/OlU85jdTv1p
qWOlzjUTPQg9CplSuOwE5LPK9q95fD+lOveIn8DaXXp9OEl9P1f/T0C2hzXh
HdU7mP7p/Vysd7pe5eu4fiuVt2U8Bp5y+LvRAWPrUUeonw/q/1zmm/6/iW6t
Z1hP7Q9An2atF/+6ytdXeSb+PtW9X0cDXXdy6WuHiF5beLxdL/q+6j8b1poP
Kss+1rWPKus0G4gO0/8XVH6K6MM18zswz0P/0eeQAc8HObBFZXmIXLy5sC46
VfQ21hvxt4t+XFnPaMCaVXldrC86qfB8uUH0p8Rzor/o7Jrbb8J3Vd2HePei
f6tP45H7lef0TWFeP6dzz0aeX6Mry/0lqjuqstxfzFpfWe4vEn9O5fXsE/Fn
V5ZlH4s/s/Ja9b744yvrmq+KP6OyLHtPfD3xN+i+z+h5zwry90OVj6wsKz8S
P6LyOrRQ/OmV16p3xA+prNO8Vlq23BLkC7Jqqo439Aw9VWeT1LbcK7mfr7fq
H1m6Pnxz0SfDtxim+l+zVqv8VPH1dO2b4k8Sv3lufWm4jsa57b6hOtZBf0CH
r2znvCX+ZPF1xL9e+lvTfn3mG7JG/Ps6NxvZqXMLxK8tvq2+1fWRv/u8oKu3
0n2uY33I/X2fC3oOuv1d2I/iD6FvaqMBuq7+b6p2ZjLuGJO636lBX30lyI1u
amubyHK3g/gG4l9A988texeUvh/3bcl3Kb1+owfO1dFG123C+E98bcfEc/jz
MKe7s9Yy7xkT6sNGrKGMDR0LY+t4e+W2U14Sf1Xhucu1h+VeC1jbW4i/SPy1
4t9TO6+wzmKYM68TnxuH3hW5vHlu+dlM9LjKtusrpW3Dh/Su1i5tMzLPpog+
rGuWsdanlp2P6P/NorN07XoqSwvLgAeCHDi/Zv68mg/OdUQW6HhQ/NvoqLr2
H9bJ0F/k37vhW6+HjSG+rehD+t9MdFDp6xarz3NVf2OV98gssx+LbXM+qLZS
9FHRa1R2XdBD7tf/37EheFaV/YW9E9t2Rv6tobabpdZ1p+l9Pad6PdEJRLeJ
/bzIvvV17lHxy1mzK+tnI1ib1MacUL5t7P7Ui1xOfVQ81hfqLM091rDhTxYd
y7osfnPVOUptbq9+bKl+/aryH2LLuF+w/ZFLoqfH5lm/V9Gw6rVGRon+xrPx
zkVX6bgafSIz31b0Omxa8deKrlC9z8V/Jtqj8NrdS+Wxyv6IPT54V6vriz+w
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
          "]], Polygon3DBox[CompressedData["
1:eJw1nAn4VdP3xs+990w3SSWaNaAyVqSEFEKGSEWIZpWKBsqUNIkSMpekwZDM
UyhDpCJjfoaUEEWJzETE//149/95vvv57nXWPvtMe6+91rvefRv0Gdr5wmIU
Rd/EUaS/6Nc0ilrrf89SFB1SjqLzkihqoQbf6Fhf1UfkUbRccgvJndV2gOSn
JB9ciKKrsyj6TccOk66Xzm+p89/QOZdKN0plqS6wl9o8L/1z0veQvq7kmZLn
Sj5L8nU6f6Dk3dT2BMn9dX5L9d9Wx35Rm3Ml7y+5muTuqm9T+yNU7yPdoWrf
WvLOkj+VvJ/kubq/O9W+hsofutY7OmeF6lvUZrOu8bvaH656b7VvpfYzJU+S
vL/+b5J8kc5/Te3f1XnLJF+i/x0kd1Gbf3TOWMldJfeVXFZ/96p9JR3fQ8f+
1vVy9bOT5Jekf0H/W0hWk+hj1Rupv93V5hrJt0ruInmIlC/r3GY6dorarpT+
O727errOKeF7HCz9XtL3U/0QtdHhaI3Ob6zKwWr/o+SLpbtD8v/0/3W1b6dj
56nNK5JnSX5bcgfdb7fwvf+UrrXa3yR5iOQa0p0s+UHdT23pdtXxvSTXUP9T
pZ+uY6dL3lnHd1V9g4511TnVpb9O9Tt0rKv086S/XvIBuu5zkltKriB5rfRN
JG+XfJLkCyQfLnknXe9QxhPnqK+akjtKPk1yK8l7qNyl+jy1P1vth0q/VPqD
dKxT6u9dQbonJS+RPEjyJsaD7u1WtR+mY50lj+G9cD3Ju6j9Ozr2uv7/IfkE
1QeH9/Gn5BMlD5F8mORWfE/Jn0jeR/JV6qezrv+rjl2p+qHSV1R9nfT7Sp/p
+oeE7zlV916S3FRyD8ax9J9LXiDdQ2p/leTPJD8g+UHJYyR/KfkZyU9LniD5
Kz3HUxoP7dXHRepjo/TPSf+M9FdL30f6rZKXqs2vqlfVsV6Sr1bbN1V/Sffw
uXRVJB8t+XrJX0n/puSPJA8Izx/r3CMkDwzPn0huU/b821fX/lrHztSxn1Ve
Vn+ddGw0fap9Hem+1v0cxP3q/hZJflbyJMntpK8leaPkZpKPlFxD8peSD5Tc
VnJNyRskN5V8lOTakr+S3FzysepvrK51n67VTXJvXf876V/SPfyg+ibpX5D8
vNpfK30znd9C9Z11znE651bJl0hfJ/Z8O1jtz5PuBumOlTxb8jTJlVR+0Lu5
SeUh9b1O7Q+Qfon0zfj2jCPJl+q8k9T2XPWZqU3/2PPvTZ2zg3ej879UfTe1
a6/2J+q8/aT/Mdib9WrzuPRHqY+h9CX9/tL/FOxZc12vj3TXSXcM9kKlC99e
+rWqd1D7fdT++2CvT5C8r+Qfgv2dLvkKyfViz8eN4X23C/bnWvXbXf1t07FJ
qm/Q9Z5VfaH0ExnvkgdLf4t0xzF+JB8g3d7q53gMT+7xgC3eE/srmQXlDsmn
Sl6kdg+r2eG6fk/Jf+v/G3res4oek59LX1X6lurzHukb5db11rHD9O6+kLxQ
9aekHy/9Osn3S35A8mjJf6i/19TfGTpnnPp7S2Wx6g3V5lS1qc/7YS6qNFD9
U50/X7oFkq/Enkp+VO2rq48LdL3Bsefyx5IrqK/JOjZP9Uo6t6HaP67/90jf
XroXWQ8knyV5Z513pOTv9f/Fgm3WZWpznuQfsC069qfqDXPfa08da62+Z+j8
0arXj21PX0+9Ph4ruZfkGWrzhM79QnILycdIX1f6Tbr/gyVfqP8nM7/U5m/V
eye2L5tZH3XOezr/d+n20/FOav+M5PckV5buKMn7qb/mOi/SOa3U5sywfm8P
9o71rJ50L+vYPaqfr/N+Uf1D9ZGq/eVqd47kZQWP/xHqv73qO6t0Ub2tzrlE
589S29PU3xmSb5f8BN9H+mN1vUNU36J+5ksfl/1u6PsJ1XdIf77k8SW/3yo6
Z7zkmyU/I3kK9l39Dde1h3O+9COkv0b6pyRvVj9fsfbr2O6q/6P+Bqs+Qfq2
zHcdu0z6iZHv8VH116Dke3pE9T/xMaS/Gb2Ot9Gxi4u+h+W61nPYFMkvSm6j
e9gN+6d2D+j5P5H8Vxgfl5RsT0fntg2sQVeo3lX6Y1X/TfqHpa8juT5zU8dO
0//akuuxnumcr9VfW12vAvNR+kNUX6k+WqneQ2366fx3JHeXfJnkCyVXxp6q
njDe9H+V9ANUH6f6Raw/eoa7Je+jvj+X/J70g8L7uVhyJemvlHyj5I6Sy5nt
5xTJHSTfro4v0P1cHNlG3KQyQPJfnKP6DyrfBbm+6m+r/26qj9L5F+j8d3OP
H8bRUMlp5r4mS34a/yLz/LihZH+E/vurv2E6Nk31ipnt2/XSnyT9v8F/mSi5
Heub2vRT+wsj29Dq2BC9yzHSf8L6ofbHYG/1/I9gnySfLfnSkte7O3XOUJ0/
RsdmqD5K9/uO5NX4kWF92UXybdI3Vf1zHf+Y9Z3vqz7e0P2NVb2m+l+n9st0
fvVgf/tIHsl4UPujdayXzn+V9Vj3NxybqfpHvLOi1/Rf1McYtV+N/6Y2T0v/
Ceu25J+k/1f6Rqnt8y/SN5Lua2ys9P0iP/P+jGfprpLcQPUJ6u9TnkfHFmFv
dWxd8Gcy1Qvqr4rkRyUfrP7Hqf0nkj9Q++fU/l2Vn1UfJ/2RqrdJPXbX61pf
6vkWq/3X0lfnXiRXVZsJjBXGouRNksvqb7aOHROe5x2178rzMGd0/o3cq669
UO1Xq83fBR9rl/n7DNP5/0ieziDXsQvwd0q2b4fr/OFFf4Ol0l2e2xZ3Yo6o
nujYRapfiw+o9q9J/qbgY0eofpD63FHwPTdRvaQ2p0a25Y+pXjOzfztD558h
ea3kf9X+Jh07SvU6OmeL5KGSd008/z8oeg18XPpLJa8q2n4+Gu7vf0WvaY9J
3g0fvuCxtEb1Q6QfWLSNe565Inll8O97sDbpGlfgz0iep/rPjAfVu4X1YoHa
V8N3j72eLSZOUPslfD8dOzDzWBus47dL3xD/R/LD2HnJe2Zezx8hFpNcW6Wk
+2uj9tPx94L/dvT/xyPpf58k+gifQfILtNP1HtexRapvlb6J6p2D//dj8I9O
D/5ewvklt39S/38K/tEZwb98Xc/TOJzfl/mPjVf/c3Tsfmyg5LaSO0ZeH89U
+xmSn8K+sv5K/je0f4SxntsXO0ryQcQakgs6b57kx6QfgR8W3jf+2v6Z/c+B
qt+m698Y1pfqse3R+Tp+WIhPBuBDSd9S9W/V50bpdyn73Z8u3VLV5+t6VZg7
rGHq+xzJs3X+K5K7Sv4++Htdgn98mORKkm/V9e6S/HXwr9uH+KqTzqmo7/OS
+p8pedfcsQM2r4V0D6r9LNUPk/556edIn4f3/aJ0m4M/3yHEM98E/+PEEF8P
w+cvek7s0LFNwV8/LsRH+CPNgz/WI9iTRLpU99RB8hu63vHSDdKxAWXbrwNV
HxnZxyQeJv4HB1gtfV/J90muovN7qn4S9kP1p6S/E98Ye0F8oPNPDvbsI+n7
SM71jvbAB1F9pK4xJNjfY4v22e5X+3o61l/6sdKPwJ8mhmeuqp8ZZds/fJ9e
tFG9k8rUon3CE9X2UbWbIvkx3m9s+4fvSZ/LpD9Z8uQw3tZkfp554AuS+6j+
hM6/oRjGW2L/rIivLHlf1Vfo2D2SP2UMsGZJvkbyI4xXfEi1OU7133XNr3S/
R0jeXfLu+r9B8sNqP1Htb9Wxh/CXc/uP+JHnS/+h7mma5Ibq61PJRfx9ta+v
Y5Myx9uti45ZpmeOl2Kde6/0T+gaP4T4o2uI796UvkPkeHog71PypKJ9jo90
/gO6h/HBvyKmW5j7/s/nnal9+9xrw766n0Vl40kPq31jXf/O2HjUEUXHxLMy
27/RkouS5yZ+3qslJ5IfxBfQ/Z2u/gC7Hsef1vlXFv3M7+j8swIe9FfAIz4j
Zpf+UHxj/HvWa+lXSH+z5IfUT331PVjlRdXnqKzHn5H8qup344NLHsIcVH26
yoWqN1eZrfoLsc8dqrJE9VdiY2VnqyxUfabKaNVb8Dyq3xeHZ1d5U/VbVHqr
fjJjVPVZKmMLPvZc0BPbjFdZrvp8lSaqz1R5S/V7VBqofovK66pfpec9XPV7
VZ+n5ztJz3mA5JoF25iz9B4aFf0NwPN2lvxJwT7GV/gTxOWqn6lyAc+b2x7/
E9YH7p/+Lw3fb76Ojyt6DIyTfLnkU7AnKgMBJCWvKtin+kz1qSp9i/bpRvBu
VeYW7OO+rXot6TdL3iz9d6rvpfKj5O8l/4yNVhlStM96Cd9H8qVFxwCjJT+j
0h3/UGWZ6st1/3VUf4J3q/t/TP+rFdzmWdWfVFnKeocNUv3Z3OOrse7nObAb
lTXSNQky47tRyW0Yiw/ofTcsOeZ4LHc8hP9EDED80SXER7R5HNus9qMi+3jE
4rtlxivBJMAm8LHwtfaT/ELQNy3ZZwf7GJnaFhETL5L++dxteWeTUt8/98o3
vUhy3xCf7I0/jn3KXN+L+ApZZc+S2xDLMP4Zq/uq3BXG9yrWgzA/mA+M/Ukq
Kxi76q9VGHt3695XYjck76VyQni/p6s+QOV51W9iDKo+Q+UN1R9V+Szysadj
2zxsH/f0ZO7vWcQ2h+9FjM98+FD6OcQvsW3baeEbL4gdu54evmdH4kTmg8pn
JdtQbGld1R/KPZ+OKHiOzgzziedhjk8P+Bix3krJ22P7dPh224L/2L9krA4f
/9eS8T1igRd07LvY+BC+xiLJW1R/MDPetj3EK+AN+LIrdOx31U9N3RY8/yF8
x9j4xRyVd1U/lxhD9d94d9J30/9dsb28E9X7Mk4Lxsh/JuZT+2cKxsofVPuZ
JfvfvxW9RpyhslHnd9SxQ0ru7yvJnSS3knx2bPyVNeSUkt8384l3yrs9PnX8
+l3w31ZLf79083knGsdfxo5995C+Ez52an9hW4h3wQ/x/74I8dS02L5BB5VH
YuPtxFurpe+Nv1SyP1pL/6tIt0r/31U5lfeo8r7q65hvRa+vjLeqjMUwvnje
KtLfI/l91V8L6/G9KjdKnoZPVXDsf5+ud1fmtYlv+UDAq4gNsWkF1qqSsSZi
LvwT8DF8i/d1rJQ4xiLWigMeMjy1P0Ns9qTka3PjG1Vj4x3gjOCNXxQcb5yh
0qBojLsC317yHMlzVa6PjQODB3+msovqJ6hUK9rnjtW+k+RaRecwMsmn5fZP
JsX2h2oHe4sNwe7sq/JbwT4c8Se4E/jTrwXHT4yHBsQTBWPyI3j/BcewxHt3
6Hkf434YB+r/bslPF4x9LJC8Ivd4YFyAF10cO1beWjC+8KH03zMXE8eL5E3I
n3yrUlf1/2WOf4mDn5X+8tix63Yda6ZjTVX+VP2PgnMWo2LHgqwhrCV7gmkU
fA3iZ3Bh8OEFKmv4xqnzWc1ix0sbgv9FDoVcyp0kf1SvqOf9NjM+t0OHfuJ7
SLdr5jrvcFVmH4x5xny7Kff9E9v9wnjjW+Suc88fSLeLypaiY87XM+NlrH3c
/9uqv5UZiwGTmapzf1B5S/Jruqdbys43bY/cx3XS3Zw5d7FE8uDcMSixKGP4
KslrE+MO4A8tM+M3rL2MiRWZMRZwh37SX50bs74orH8TJT+U2he8VuecxPqX
uY6PeCJrE9+5ZJ8Z35kYDd/5OuyJ5PqZfW988FMl186MxUyQfLzkjzP7lmB4
t+SOqYitFuJfENsRI+BPsz5lxl/ACplTzC3we7DxDZKvkVzKXF+v9ksy51N+
j9zHpNwxCrHKI/hL0h2f+V65/47Sf6H7f65on+XazOOd2PAVHbtQ+uVlx5jE
oMSir5add/0Gn0JtO6reWaWu9C+pryVlx1HEU8exNpQ9hzNsYGaf+V7JY4r2
pV8pe05XkP6UzBjqL4nHCGMFn/if2D44/glzhLnCeH+TsRPbLmGfhkq/p+S7
JI/U+UfmnnPMvRFFYzfk/A5MQs5O7ReXjTOzKH+S+fveH3zA4/he0g/V9z5F
TS4h1kqMe4FJNM1sD8g9L1P74bnzB3zLI3U//cF+cr9LMHOw82G52y6UPFty
LWx6yZgQ2BA5HHI5xFcNyo6BD0+McRAbv1R23oj80dbMmP/JkqsXnQtop/qJ
wWY+KvmFsjHaguR1mfMHGyJ/8/N1vW8yx3bYgJnMZ7WfEHsMd5BcKzO2S46L
XBc5F3BVMNEKZedciIuJj+uXnbMidwUempadIwLnBO9Mys45sSaAP/2WO+eH
zQcj+zV3ThkbCca7LXeOAJsN3vVH7pwOuR3y7SSayemQ2wEPLat+Ytl5+gq6
750yY8SVE68nlcKxS5mvJbclp05u/SDJL4M9Zo5Ft+t5b5NcTp0nJ18+T/Kt
uXXEYMRiYNRg1X9LvkO69WXHwInkL5jL+ASJMR2wnY2Z7QUxCLHI7bnPTVW+
lO7HzLFrSde8G18/871do2N36V4qps4Lkx++L7c9rxV8CLCtT7DvJWMSxO+l
1DmBqvhzajQrd9+VJf+UOYdOLn03nV+H+FL1J4vmUPTPjZG1KXnNoH9yxOAm
DSUXVG+QGdsA4+icG5NiPLEmszZ/UPa6zvreQ/LZKncXnfN/U23fTr3+w1Eg
n3Nu7rYcQ/eezr8qNiZ0dG6bge0A4wOfZY4z16OC8c3/5n/JMTSxNJgu2C45
EnIl1TLPLXJA5IKwCdiGfyPjt2tT+0+VS36/H5btR+FP9ZbcK3edNrSdlnst
xAcFCwajAqsCU+yWO8dEHmeijlUsO2dG7qw5a2zuHC5r9p6s6bnxsZlFY4Jg
gx1ZP1grVLoSH6XGvjl2uuSzVCoV/E67536nvNuKJY9X3jdj966gZzwUQx/0
BV51U9Hfr0sYb7fzrXX+K7l9cnzz73WsuXQLUtvO5rHx1qP0bDsVnUMDP+2e
Gt9clZifQr4RLA5MbriO9VE5qGgOD3wR8uVHRcZwwCz76bpHFr1ewa+BPwA2
CKYCBjyMeav64oLxvT6p+S8fJ85/kO+GmwGGBueE/CD5O2J4Ynk4CuCNx6mM
VH0APr/qSwrOef2cG09lzWPtG6T/hzN2VIaoPrxkbgExD3wb8rO9ideK5luM
SM2/+VT1lTq/bm4+BrwM+B1Ncue3r0nMfxgbG5vPisas09x8GtbYV4NvQn79
LV0PjOhKyecUnW+B3zNB1ztX8gaws2B74Q+Q8yIf1SJ3forc19vgpYmx+vPx
yRLj92vxzWPnG65S/z2LxggqxF6r/yKW07FtidcL8n2sKawtN+f2ZchLflb2
eG+cON/D/MLGXhfi/ampC5yqE4KtZr0oJ873wH0A07pS1y0UbF9ZP5LEMUfz
sF5cGNvHwdch50fuDwxiSur1qUbiHA9cAThdcLsWs+alXq/2wo4FvKK9+npV
9ZX4nKnXp6GxfSx8LXJu5N7ImcI9qRg7VzlA8qjUOWBywQMj597J4ZKrJGc5
OjWnAy7VpIB3wBHZJ3H8wXrK+lUtcXzUOqz/TVJjJEvCenhRbB8YXxjOBFym
KZG5FOTo4T7BcSJ3T86H3A+cqJ3KzjmReyIHSa6dHCS5SHICl6fOCZCrvDxy
roCcJrlNcphwr1g/ybWS88zLXo8vjR0jECu0js2l+Y9To/bfZ+aq4JPgm7Ce
kY/EZ8F3WZDYFwYDBe/9PTHWOSaML3wO8GCwUXyROfp/edEYKvkj1gDySWCp
rA2H5c6Hkmt7N/gC8D3IwZEfxcdfr/qmxL7/5DDWPg1zpmJifS+VKYljgM9U
35g4NrhZ/zcS74X5MiS2HjwKrPHHxLk81pCfEq8xm6SrHXvtuSY2t+D6ojF7
8gLkB26W/KzqTya2vdjgp1V/JrFuvspK1Z8o2fbnReP3U2LnZ8iRPR/akzua
Fvr7K/faQ17rfV3/xcRrCWvKEr5JyWvBbkXn126IjfWz3hKLc02ufZ7ucVFs
/AJsn/UObOG62LkfOIzkcLAnvBtyxHAcHg75WWIAYgF4EPAhiL/AQuFJjNf5
P+CPSO6a2JcBE+iWeD1h/cR/xY8Ff/48MsYL1ntsYi5d9TDG4DTCbeySOF91
SmJuCPEIcQk+MH0RgxCLjImdq411rLWO3Vuy74UPhh/3uORdi84JkV/GHyTf
QYxArLA+s2+HT45vDg6PL4h/Df/hhdT4BDENsc0H2OWi15DuJefpydeDsYG1
1eQdFo0B35qYZ4BvzbHvmQO5Y2N4C+TrGW9bi475p5Uc2xALbQ3jjxh4jerr
E8fGxcQyGPj4xLxR+KNgamBrayR/WPQayFoIf5S1ZXVYw+Botouc030/MYep
Ib5D0XgY+Bj1Zio9Je+d+NvikxGHMf7JV9WUfCr+AfZSx+KC8YZGqs9RnzPU
52y9u/mp+YcH6vgVavuh5I8ld2SsEjum5kvtL/mysjFjsON6qfNn96nP5wu+
1/OwtbnXS9bNYZI/Urs1+AOMA8nTVJZJt1zlprL9KeYH82Sy5NVqvzYyFof+
ffAuySdJnsr3lbxa8smSr5f8P8kfSj5R8nXMv9xrzZ6p83cH5F5fv03MD2IN
YS3ZKTb/5IrYviz+Kn7rrcH3JwYgTuEd8a72VrtLw3gmt4SNvLNkfwLfGP8X
P3iW2k9X+710/JKybTy2fvfYfJpBqfkuaex8G/kBcgUXs0ZIPlj3+U/BHILt
qvdPzZcpxs6Pws88k3gldj5t99z+GX7aIMkfE5PgH8XOTzE+fiqYo8H8X5Ma
3+wcG+/plXgskaOFL4a9IV98jMqDsddw8v+HxV7bme9wqclJL03Ms4RvSbzT
JtjLnQrmjJHTrpg7/90rdn4cnAm8qXbR/GPs4S5qf7zKw4zN1Gtr49h8cOwV
9oYc6XLV56Zea5vE5v9in1j/sLnYXsY42NrRYexvk7y75FTnjZO8VP+X6/y2
sfmEyySvIBaJza9dmTq/d5zkayQ/lZp/e0hsvuEbqe//+Nj80nN0nf2K5qTD
hwVDB0uHgwindmFqPmXL2HzDZ1LzdVvF5veyhrOWHxqb/7tc8muSj4rNv8RH
wlc6JjZ/dgXxKP59bL7v4tTv/wjJYyXfn5o/fIDky8vOA5APgAP+XuJ3Bnf6
P859avyTWAw85KZgH1lP4cBgD4ld0mCjsdWvqX2NgjnfcL/BTsg9wSEkP834
/aNoPAdcB84c+BvHGM/E6DtU35E4doeHAh9lN5VdUnM8WI/gIPDNhqp9Z2yn
SjfVz0wcK7I+kgsnvjsnNt8RvOe0xLEYMRlc9wNTx1ZwgOFn/Z34+qxBrEVw
RMAHwAui1JgB+Xvy+GAJTWNzs7GR2Er8J3xz4k9yIWC8cGMejIz9MmbZy3Bn
5LFMzAZXhjlELAcHEC4gc5i5XDN1bgOOXy2+fe7cHzzA//ghqd/NDQXz67ET
2AtyiAVsQMm5OPJd5L3AFsCa4SBWU/3V3Lmq6qn5WHBm4M7AsYGrDX4OHkwM
M6lkjhBcITg2cE3hwJO77xB5rwCcD7gfcELYawHHA64HnJNWAa9YFTvfBNcd
zgjcETghcOOJv8+KzR+HWw1HBa4KnCH2BpDDgRsHR5nczse54yHiIrBM8Pi/
I3Og4GxhvydE5mg1TxybEPvgzzfW+berTMY/UbuRZfvw+PJ7SB5VNkfp6HA9
9lI0DGNyQ2TsDvzrHcmziQdzc7LZawJHAK42nGv2yhwamYv9R8lcFnJU5Krg
0LJ34ITI3Fo4Bex1gFMP1wCONntl2IMBdxtOOHtR4ODCFYcDBRcKTgVc+Ebh
/ZDTIrcFnlQ1NSZFfgEOFVyoxuH9wRGCK9QkMrceTgbcjH0ic/G3lswdJQdH
Lm5r7Dwi+cSeqfdPgP0/Kvm2zDlHco/kM+FOXpXa18HnwRd6o+y8P/n/vSXv
lbtOG9qCH7TnWfGJpaueG+tlDauh+pDUfHo4ceC/h2Rui79ULfd69zPrf2hf
zIxtwpEnXoUDh/8EplA1N0aBD8g1uTb7Y8AiwCTgQjVV6V10PHJ1an/hz8jH
mqleJfa8YH4QL4MhwFuHow62ME7nnF00JxI+EPx1YtnuQb8f91Q0ZgB2gNwn
so+0f2785ki+heTK4X76RfZZuP6Bue+Ne4KPCKYwMjZ/E6yBe0ZPTEXslWXG
huHsE4+DMTBPmC9gDy1zYxHMIfiavH/eJe+cd/9a2bwL+Be1c2Mq6xLzMcFa
GBOMDTjt8OPAq/rG3p9FbvmRzFy75QXzGRlP7Mtgf8b8zHq4jvhA+EKnpSHX
HXm/D3g/PjycB7gP8CPAil4pmP9wS2asipw0uWk40+BItFmQWd808ni9Hbw4
Nv5HPuDOzDnFtbFzLuRe8FfJ9/QI3+PezM+CT4tvS867R+w+uV6d3NxYMKY9
VK+V+12Bd10off3c7woMqYHq9cArJZ8eZPTUwax4n+Q0N8TOaZDbYH8S2BYc
Ufjh5LPIlYBnsDeN+wOLI4fP++aaXBvOKHxWcv49A94JF2Bu5r0BcLzOCXKb
yPHIParvm3ts8g7gG4NpfZl4jDJem2Uem2CEu4BvSh5eMIenn+pjVS4uGAMH
C4dTPi7gM+BO+LwTAv6BL0w+gFzB9arfkNomTw14CLb6MukOVH9Xq4xT/dvU
WC17GlhP+N4/xuZQwjf5vGReAfwCuGr/sqYUzUHYm1xfaqydPSrY7x2Z977t
Kfkf1b+Tfu/IGGmSO2YYG/AmYgk46XDT2d9zpdpuyOw74EPgy+ATsheFGAlf
kfjqjoAPsf4TM91dckxALEUMcXvAk4gthoeYnfmN7cFHZG8KPhy+48+Zcwdw
7NiPREw1LPb3YuziQz4Y/BN8S9a06wOexFr3XfCH4bBuyRyT3Fbymkissi41
l+xMlZGZMdBzY++/AxuFDwwWSzxdKXeMfW1sfiOx9++Z6/jY20J+kriT+PPP
zJg0MTA2DltHzgwsgRgVviT5DHJrYOD3hP7ASojp6R9MY2JsDiBYB/leYn8w
K7ArMIarpZ8bGXsA8zomcU4HLOyXzLEJPjK+MjJcSfzZ31T/Ru/i7JL36LFX
j/0QYBX4HPATyR+BFROTwddkTyb58FY6Vs6NgRDnEO+AjeybWUd/ee49idga
YiBioV9Sv1v2OFbIjXG0SJwDA/sgpwuWQgzF/pjtmWMlYg5ij68yY1NgPrwP
9Ow9qcM9Z85HEvvwzfn2tOfdwbHfnBlDbpk4ZwS2jH87N8QD+K+fpuYGHqTS
Q/p3U3MDBxHjSp6SmS8FF+pe4vHY3KiNkfkwH4X4B04RfCP2F8LlaRDmI/tj
4McwJ/FP2T98m+T/Rc5/cb2lqs+LzQc7LbyvjbH5M+wf4t1Mjo234ZNg67HP
jTLvd6lRsr8GHxA+9d0Fc3buz70fl3dF/hs+C/s/sQXkdODHwEcl9wpeAh+R
/RPsF8GGw29kPy1rw7eR4yn2c4GN4/Pg+8D/B0/4IzE+z/4icl/g6/AL2c/B
WoY/At+LHD9rab/Y+Q/2j8D3x8eB7wj/nblFPh8+Dvth2X/FGs1aDT+c+Jmc
H7k/ONHwn8ihkUtbn/pbwMWC78Z+A9Zmcuzk2uHZwLfBxsJfYb8RfBtsIvHI
+2p/WWQbja2GDw+2Sg4Ke/KR5Gsj2xRsyye58RIwJvCk1bltDTYP27c2ty2c
XXJ8+kFu24/NwnZ9mzu+XVoy/rQ5d7y+pGR8Z0vu+PiVkvGfb3LH7y+XjA99
lzteJscA3rQVnzQy5gT2xH4lfCPwdPiftcqBPx3iUTi7cHfhyMK3HZN57MPx
HZiZHwtXt2FY/+D0wu2FQwufl/3l+CbYO/hzE9XmZtZryRepvkb3c0fkNYG1
YXRmbmM9lT6qj8/MjWyqcl5YX8GLwUZm8/0kn1MwB3VIZk4v3N79C+b7smay
dtYJ8TLxOrEjMNehJe+HwlcmvwF/dlRm7AWOJvaf5wX7YQ4y39mDBUYKHlCj
bI4o2DIY8+TcfCO4AHCs4AvBH+Fi5M+ezLw/Bu4VOQNyB/BH2BfLHjj2v8BZ
A8cGz4Zv84qObSg4R8b+FvjocLPAsOBns58Krhc5AvbzwC+BpwVf6/3MHCe4
TmAY7M+rl1lHDoNcBnyWhok5VHCpiGGIZdiz2yLYN7h9swrmuzeXfmrB7/yS
zHtU2auKTYE/dK6OTS6YA8r3ujjzt+Sb8+3vj81z5ZuOD/4MsTGYUSE3B5S9
ROxJghvK+gCXjJwk6y98IbgXcDjhj+DPYNtSfJbU/gt7DeELwPWHc/hx7N8H
gIsIfwuuHZxK9p/3yjy2sLn8XgN8s4mROXrwz8jXk0skv3dLao7hoNi/dwD3
8J/cYwWuOvzwxZl/+wAb+UJmmW/HN5yYmkNM7oYcDrmesam5VthM9r/2VWld
MEee9Yb9uHBH2RPcj/U9db6F3MhcXa87PoXkl/Chyt5v2lXtn8Ym4A9nXgs2
l8zXZr7ATa0c+fvBdyInAh5as2yOClwVOOUH5eaDwZ2BEwmfC44TXCdsLr8/
8FTmdwFnkf13CzP7htjsZzPzd8g1wilvp/MrZ841khMmXhufmjtGjMj+ZvjU
zBX2vMGvhk9HjuDYyNzrPPE+ZDiii8L1yRfAAeV7wAllryx7UuCKEg+TuyUm
bZybrwY3CE4o/DVs8pyAT4Fn4Q/DdQUTBhtmzyh7R4nPLiPey+wL4PPj+2Mv
8BWnMx4z23BsOTYf7JHxxW+BMCeYGzw/sSo5QvKt/AYDvE/GJHxC+DVgeg2D
Pw5/a3PkNQk+HBj2ioAZg22TEyA3AF8Xew6GDab8drh/+F7fRF7D4IeRo7ws
9h497A+/iTEqMQYAFvD/PgxzfkrwB3sGTDzOPZ/g8jLHbsgcb5ydOMYg1mCP
3AWJfWR8ZfZYvZw4/we3hDE6IzafnbHL/ZP7AGMm1wHGvLhk/xTsmRwIuRBy
jn/n3tO0MHG+Eu5Ik8y/XVKX58uMj8C97BDwFPig7IWE4wo/FMyYfDH5eLBk
+FT4IuTY4FuBIfPbEWDQYMvYr258W5WzMmPmJyX2ybeF52HusSbvyI2BkwN4
Mfin5PfJ/7OH/fXwPFNj+1fkeuB3gdHWDv4qazprO2s4uRx8cnxzMGf4U8QQ
xBL8pge/3wImzm8TgKGDleNv44u1DP448SrcmbYBT+F7w0uBn1Kl7BwEvJfW
wR/n+8Fzge9SuWyfAd8Bn4HcFT4Ivgg+BbkxcgT8FgeYPrkDOMhwkRtF3rtB
ToHfKiBnQK4BHwVfBZ+G3BU+Cr4KPgy5LfbEwEMhxoCfBl6xJWD2/8XvjI/Y
+0uwhexvqJsar2OvFxgxWHHjyHsL2Z9QI8S0rAfgRXBRwHjbZN4f0jD1nrTF
YX6Qy2fMtM2M95CHJB95Ze6cP7l/cl5HZ/Y5r0j8+wb4ovi8ExP/pgG+MPgB
eX7y/eNz+6CvJ87f4JuCQYNFg1+yV5gcK7lW1nTWdviZcADAqMCq8D+2JuYU
wy0Gj4NTAGYBdoF9rJrYpmJbwezB7omRvs68fsGVB7M5NDMnCG4QGAtYC/zq
3xL7GPga8Av/ShwDEgviw8O1IR+Hbw++Qk6FMbdf5t9M4TcniHGIdfDBlyXO
j+GbE6PADYCvRewC3gOXHQ77zMy/ibEozBd+K4M9CkeU/BtB4LvEQOyNIQYj
NmJP3B6p8X/2EuFfsI+LmI3YjT2gt8Xeo8neUHzGl2NjNPiSH5S8h4n9MIMy
r5Hse2H/C2vnHbH3tLFf553UOV1yu+Sji2X/JsWyMD+Y39gH8jTkayqVHaOx
1wFMj9gN/Iy9I9isfTJzTOCasB+vfWY8g1wxPsTvuXNYj5UcoxOvkxMl58Ge
zazsHCe5Tjhuv+Tm97BvkBzTzmXje8Q0+FA3Zubn7JHYB8UXJSdIfDxX7bfn
5j/BKYBz+2duvib3BocGPih81QNSc8rB3+AHEjvymw/wAXnf7Itjf9zpmd8h
73JTiEfJ8bK3EkwUvJM9Kz1CvoD8APYdjgp8kl3L5r/D5SYmgQ+/JXXftVTO
kG5OZi4zv8E1K3wv8rT47APD+gNPBL5ItbLx/S4B7+8Qxs/5IT9Rt2xMB2wH
zgT8ar45356Ykv3G8NeJPcmJwbdn/wKxMZw0+MvgdeTmpqlMyIzRg9XDcWA/
wMOZuRdwMB7KnLMeHPIh5L/wIfEliamIrdhTAm+HGBM+K5gx2DG/kcD+3Cd1
TruCOT3s72XPUOeQ3yB/wRrLWrs3Pntm/4VYDR8TX5P8TM+QbyGfBWcc7ji/
AYO/SY59UMh3kXvH5mJ7yYmzX/xMlX6qdwnr7+DMey/JYT6Qe36xDwqfk/iM
+UfsRoz1b+4YnFgcH5e9aPC5yB+SHyTXzvgeEDv+J9cBR4HfyiBfCHeB9Z9r
kxMdlnkOM5fZMw6+AaYLtgvnZF5m/hz5xv9+gyTM529jY8jg26t07IyC13zi
U3LQ5DvJZz4b5t9OifmJcBXA0MHS+c0t9v9eodK/YB+c33v5b091yZwFuCL4
EPgS7IkjvmU9w5eH73R5Zowe/IbfPGO/ROfMOvqk7/8DAk0bUw==
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[{{1672, 1671, 2335, 1571, 1572, 2336}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLlGEYBuBn1LLU0o0RhUkLiUqldh6xqKhBVy0kptyEGwt0a3QgcFF4
JrTZWJuYdgaF8wNCN5qmaQe1o/+k68XFPdf9vHzzfPN9zOm7QzcHMxHxWsaU
1Pt81Mq4XDwYUePspN6u1+vzJRHN5pHyiGk2O+vnLXMdO813XNvD+7zNh3wk
9/RpPmCez9O9mWeBb7nAIhe5lHbZ22BvXrbMo7wgy6URX80r/MZP/M5V/uAa
t/mZO1znhuzqX/iTm/zFLf5Oz1YWccPuBs/4x/zOnDWfMf81F8058z99Tj+n
z8me+THPyof0Xb9909l7fcZZr2w4W3R2Vf+oL+iX0vV6QX/Dl2kvn3GWw5zk
hAzow8xxgN3MsYM9bEq7eYq93tkJu6ek2jzCJun2nEfNWR7hdVbxGit5hRW8
zMPs4iF2sF2sjTa6TRxnqxxI3e4W3SuJp/orpZET4jhemI/pXkcs6U/085n9
/9x/NqpKyw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1585, 1911, 1912, 1900, 980, 1898, 2214, 2215, 1927, 2152, 
       2467, 1759, 1894, 2148, 2149, 1901, 2464, 1760, 1899, 2216, 2217, 2338,
        1929, 2153, 1761, 1928, 2304, 2339, 2048, 1762, 1586, 2332, 2340, 
       2218, 1763, 1587, 2341, 2242, 2401, 1588, 2342, 1764, 1589, 2343, 1765,
        1590, 2344, 1766, 1591, 2345, 1767, 1592, 2346, 1768, 1593, 2347, 
       1769, 1594, 2460, 1877, 1770, 1878}], 
      Line3DBox[{1595, 335, 1895, 420, 2468, 1930, 1926, 2050, 991, 2047, 
       1829, 1933, 2518, 698, 1931, 2305, 2348, 2051, 1771, 2049, 2288, 2349, 
       1937, 701, 1936, 2469, 1934, 2053, 1772, 1596, 2531, 2219, 2220, 2243, 
       2530, 1597, 2244, 2402, 1598, 2350, 1773, 1599, 2351, 1774, 1600, 2352,
        1775, 1601, 2353, 1776, 1602, 2354, 1777, 1603, 2355, 1778, 1604}], 
      Line3DBox[{1612, 1783, 2360, 1611, 1782, 2359, 1610, 1781, 2358, 1609, 
       1780, 2357, 1608, 1005, 1607, 2403, 2248, 1606, 2532, 2247, 2222, 2221,
        1605, 2471, 2246, 2061, 1947, 2473, 1950, 2161, 2160, 1951, 1831, 
       2499, 2054, 1779, 2058, 1935, 2470, 1943, 2158, 2157, 1945, 2356, 2289,
        2052, 1001, 2055, 1932, 1938, 2155, 2452, 2154, 1941, 1830, 1902, 
       2461, 2245, 1903, 1879, 1921, 1913, 1923}], 
      Line3DBox[{1626, 1786, 2363, 1625, 1785, 2362, 1624, 1784, 2361, 1623, 
       1016, 1622, 2404, 2249, 1621, 2533, 2226, 2225, 1620, 2476, 1961, 2223,
        1960, 2224, 1619, 1493, 1839, 2062, 1838, 2454, 2320, 1618, 2162, 
       1949, 1952, 1948, 2472, 1617, 1837, 2059, 1836, 2453, 2060, 1616, 2159,
        1944, 1946, 1247, 1615, 2475, 1835, 2056, 1834, 2057, 1614, 2156, 
       2519, 1940, 1942, 1939, 1613, 2474, 1833, 1904, 1832, 1905, 1880}], 
      Line3DBox[{1628, 1953, 1955, 1954, 2163, 2500, 1627, 2064, 1840, 2063, 
       1841, 2478, 1629, 1956, 1957, 2405, 2306, 2164, 1630, 2066, 2290, 2501,
        2065, 1842, 1631, 1261, 1959, 1958, 2165, 1632, 2321, 2455, 1843, 
       2067, 1844, 1633, 2477, 1962, 1964, 1963, 2166, 2502, 1634, 2069, 1845,
        2068, 1846, 1498, 1635, 2228, 1969, 2227, 1970, 2480, 1636, 2229, 
       2406, 2333, 1637, 2250, 2407, 1638, 2251, 2408, 1639, 2364, 1787, 1640,
        2365, 1788, 1641}], 
      Line3DBox[{1643, 2252, 2409, 1642, 1965, 1966, 2168, 2520, 2167, 1644, 
       2071, 2072, 2070, 2410, 2291, 1645, 2307, 2479, 1967, 2170, 2169, 1646,
        2074, 2075, 2503, 2073, 1847, 1647, 1275, 1968, 2172, 2171, 1648, 
       2504, 2077, 2078, 2076, 1848, 2482, 1649, 1971, 1972, 2174, 2173, 2505,
        1650, 2080, 2081, 2079, 2326, 2522, 2180, 1651, 2231, 2232, 2230, 
       2411, 2311, 1652, 2334, 2412, 2233, 1653, 2253, 2413, 1654, 1036, 1655,
        2366, 1789, 1656}], 
      Line3DBox[{1660, 2367, 1790, 1658, 2368, 1791, 1662, 1974, 2369, 1792, 
       2083, 2292, 2370, 1982, 2182, 1793, 1981, 2309, 2371, 2097, 1794, 2087,
        2293, 2372, 1984, 2183, 1795, 1983, 2310, 2373, 2099, 1041, 2090, 
       1851, 1987, 2184, 2483, 1796, 1985, 1979, 2101, 2510, 1797, 2094, 1852,
        1991, 2328, 2484, 1798, 1990, 2314, 2374, 2103, 1799, 1672, 2336, 
       2375, 2238, 1800, 1674, 2376, 1801, 1676, 2378, 1803, 1678}], 
      Line3DBox[{1677, 1802, 2377, 1675, 2419, 2256, 1673, 2237, 2418, 2335, 
       1671, 1988, 2234, 2534, 2236, 2235, 1670, 2185, 2186, 2417, 2093, 2096,
        2095, 1669, 2181, 2523, 2327, 1980, 1978, 1668, 2294, 2416, 2089, 
       2092, 2091, 1667, 2508, 2178, 2179, 1977, 1288, 1666, 1850, 2086, 2088,
        2507, 2322, 1665, 2176, 2177, 1976, 2481, 2308, 1664, 1849, 2082, 
       2506, 2085, 2084, 1663, 2175, 2521, 2325, 1975, 1973, 1661, 2415, 2255,
        1657, 2414, 2254, 1659}], 
      Line3DBox[{1680, 2257, 2420, 1679, 2379, 1804, 1681, 2380, 1805, 1682, 
       2312, 2381, 1806, 2098, 2295, 2382, 1993, 2187, 1807, 1992, 2313, 2383,
        2105, 1808, 2100, 2509, 1853, 1996, 2188, 2258, 2524, 1994, 1986, 
       2107, 1050, 2102, 1854, 1999, 2329, 2486, 1809, 1997, 1989, 2109, 2512,
        1810, 2104, 2296, 2384, 2001, 2189, 1811, 2000, 2316, 2385, 2111, 
       1812, 1683, 2337, 2386, 2239, 1813, 1684, 2387, 1814, 1685}], 
      Line3DBox[{1687, 2259, 2421, 1686, 2260, 2422, 1688, 2388, 1815, 1689, 
       2389, 1816, 1690, 2315, 2390, 1817, 2106, 2511, 1855, 2004, 2190, 2191,
        2002, 2487, 1995, 2113, 2261, 2485, 2108, 1856, 2007, 2192, 2193, 
       2525, 2005, 1998, 2115, 1059, 2110, 1857, 2010, 2526, 2194, 2195, 2008,
        2317, 2391, 2117, 1818, 2112, 2297, 2392, 2014, 2196, 2197, 2013, 
       2490, 2011, 2119, 1819, 1691, 2535, 2240, 2241, 1820, 1692}], 
      Line3DBox[{1694, 2262, 2423, 1693, 2263, 2424, 1695, 1062, 1696, 2393, 
       1821, 1697, 2394, 1822, 1698, 2488, 2003, 1823, 2114, 2513, 1858, 2018,
        2198, 2199, 2527, 2015, 2006, 2121, 2264, 2489, 2116, 1859, 2023, 
       2331, 2456, 2200, 2020, 2009, 2124, 1067, 2118, 2298, 2395, 2027, 2202,
        2203, 2025, 2492, 2012, 2127, 1824, 2120, 2514, 1860, 2033, 2205, 
       2206, 2032, 2494, 2029, 2130, 1825, 1699}], 
      Line3DBox[{1701, 2265, 2425, 1700, 2266, 2426, 1702, 2267, 2427, 1703, 
       1071, 1704, 2396, 1826, 1705, 2397, 1827, 1706, 2491, 2016, 2019, 2017,
        2528, 2330, 1707, 2123, 1861, 2122, 1862, 2495, 1708, 2021, 2024, 
       2022, 2529, 2201, 1709, 2126, 1863, 2125, 1864, 2496, 1710, 1344, 2028,
        2026, 2204, 1711, 2129, 2457, 1865, 2128, 1866, 1712, 2493, 2030, 
       2034, 2031, 2207, 1713, 2323, 2458, 1867, 2131, 1868, 1714}], 
      Line3DBox[{1716, 2268, 2428, 1715, 2269, 2429, 1717, 2270, 2430, 1718, 
       2271, 2431, 1719, 1081, 1720, 2398, 1828, 1721, 2399, 2272, 2432, 1722,
        2035, 2037, 2036, 1539, 1723, 2133, 1869, 2132, 1870, 2497, 1724, 
       2038, 2039, 2433, 2318, 2208, 1725, 2135, 2299, 2515, 2134, 1871, 1726,
        1357, 2041, 2040, 2209, 1727, 2324, 2459, 1872, 2136, 1873, 1728, 
       2465, 1914, 1874, 1915, 1875, 1906, 1729}], 
      Line3DBox[{1731, 2273, 2434, 1730, 2274, 2435, 1732, 2275, 2436, 1733, 
       2276, 2437, 1734, 2277, 2438, 1735, 1092, 1736, 2400, 2278, 2439, 1737,
        2279, 2440, 1738, 2042, 2043, 1545, 2210, 1739, 2138, 2139, 2137, 
       2441, 2300, 1740, 2319, 2498, 2044, 2212, 2211, 1741, 2141, 2142, 2516,
        2140, 1876, 1742, 1175, 1896, 1918, 1917, 1743, 2462, 1889, 1916, 
       1890, 1881, 1908, 1924, 1907, 1744}], 
      Line3DBox[{1758, 2150, 2151, 1925, 1888, 1885, 1893, 1922, 1190, 1757, 
       1886, 1891, 1887, 1882, 1892, 1919, 2466, 2302, 1756, 1909, 1910, 1897,
        2303, 2463, 1920, 1755, 2146, 2147, 2143, 2517, 2145, 2144, 1754, 
       2213, 1548, 2046, 2045, 1753, 2451, 2287, 1752, 2450, 2286, 1751, 2449,
        2448, 2285, 1750, 2447, 2284, 1749, 2446, 2283, 1748, 2445, 2282, 
       1747, 2444, 2281, 1746, 2443, 2280, 1745, 2301, 2442, 1883, 1884}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{824, 1223, 1549, 1108, 1551, 1109, 2338, 1550, 1234, 1231, 
       1238, 1232, 2348, 1374, 1377, 1115, 1376, 1116, 2356, 1249, 1247, 1258,
        1248, 1391, 1394, 2501, 1124, 1393, 1125, 1273, 2479, 1271, 1281, 
       1272, 1409, 1412, 2506, 1133, 1411, 1134, 2370, 1297, 1295, 1296, 2381,
        911, 1056, 2389, 920, 1063, 2393, 929, 1071, 939, 2431, 1080, 950, 
       2437, 1090, 961, 2445, 1100, 972}], 
      Line3DBox[{825, 1552, 1229, 1233, 1230, 2339, 1371, 1373, 1112, 1372, 
       1113, 2349, 1244, 1241, 1246, 2470, 1242, 1383, 1385, 1120, 2453, 1384,
        1121, 1263, 1261, 1270, 1262, 1401, 1403, 2503, 1128, 1402, 1129, 
       1286, 2481, 1284, 1294, 1285, 2371, 1419, 1421, 1138, 1420, 1139, 2382,
        1311, 1309, 1310, 2390, 921, 1064, 2394, 930, 1072, 2396, 940, 1081, 
       951, 2438, 1091, 962, 2446, 1101, 973}], 
      Line3DBox[{826, 1553, 1554, 2340, 1555, 1556, 1557, 1243, 2469, 1240, 
       1378, 1380, 1381, 1379, 2499, 1117, 1255, 1252, 2472, 1260, 1253, 1395,
        1397, 1398, 2455, 1396, 1126, 1277, 1275, 1283, 1276, 1413, 2507, 
       1415, 1416, 1414, 1135, 2372, 1301, 1299, 1308, 1300, 2383, 1431, 1433,
        1434, 1432, 2511, 1145, 1327, 1325, 2488, 1326, 931, 1073, 2397, 941, 
       1082, 2398, 952, 1092, 963, 2447, 1102, 974}], 
      Line3DBox[{827, 982, 2341, 829, 1558, 2531, 1560, 1561, 1562, 1563, 
       1254, 2473, 1251, 1386, 1388, 1389, 2454, 1387, 1122, 1268, 1265, 2477,
        1274, 1266, 1404, 1406, 2504, 1407, 1405, 1131, 1290, 1288, 1298, 
       1289, 2373, 1422, 1424, 1425, 1423, 2509, 1141, 1315, 1313, 1324, 2487,
        1314, 1440, 1442, 1443, 1441, 2513, 1151, 1340, 1338, 2491, 1339, 942,
        1083, 2399, 953, 1093, 2400, 964, 2448, 1103, 975}], 
      Line3DBox[{831, 984, 2342, 832, 2402, 993, 849, 1564, 2532, 1003, 860, 
       1264, 2476, 1013, 871, 1497, 1498, 1279, 1499, 1023, 882, 1500, 2505, 
       1501, 1408, 1033, 893, 2416, 1136, 1302, 1512, 1042, 2483, 903, 1513, 
       1514, 1426, 1050, 913, 1146, 1328, 1525, 2525, 1058, 923, 1526, 1527, 
       1444, 2489, 1066, 933, 1156, 2495, 1352, 1537, 1075, 944, 1538, 1539, 
       1464, 1085, 955, 2440, 1095, 966, 2450, 1105, 977}], 
      Line3DBox[{833, 985, 2343, 834, 994, 2350, 850, 2403, 1004, 861, 1565, 
       2533, 1014, 872, 1278, 2480, 1024, 883, 2522, 1508, 1132, 1293, 1509, 
       1510, 894, 2523, 1511, 1292, 1418, 1043, 2510, 904, 1142, 1316, 1522, 
       1523, 2486, 914, 1524, 1317, 1436, 1059, 924, 1152, 1341, 2456, 1534, 
       1535, 934, 1536, 1342, 2529, 1454, 1076, 945, 1160, 2497, 1360, 1543, 
       1544, 956, 1545, 1361, 1473, 1096, 967, 2451, 1106, 978}], 
      Line3DBox[{835, 986, 2344, 836, 995, 2351, 851, 1005, 862, 2404, 1015, 
       873, 2406, 1566, 1025, 884, 2411, 1291, 1034, 895, 1515, 2417, 1137, 
       1306, 1516, 1517, 2484, 905, 1518, 1305, 1428, 1051, 2512, 915, 1147, 
       1329, 1528, 2526, 1529, 925, 1530, 1331, 1446, 1067, 935, 1157, 2496, 
       1353, 1540, 1541, 946, 1542, 2433, 1355, 1466, 1086, 957, 2441, 1164, 
       1366, 1546, 1547, 968, 1548, 1368, 1478, 1107, 979}], 
      Line3DBox[{837, 987, 2345, 838, 996, 2352, 852, 1006, 2357, 863, 1016, 
       874, 2407, 1026, 885, 2412, 1567, 1568, 1569, 1570, 2534, 1303, 1307, 
       1304, 2374, 1427, 1430, 1143, 1429, 1144, 2384, 1323, 1320, 1330, 1321,
        2391, 1445, 1448, 1153, 1447, 1154, 2395, 1346, 1344, 1354, 1345, 
       1465, 1468, 2515, 1161, 1467, 1162, 1365, 2498, 1363, 1367, 1364, 1477,
        1480, 2517, 1167, 1479, 1168, 1197}], 
      Line3DBox[{839, 988, 2346, 840, 997, 2353, 853, 1007, 2358, 864, 1017, 
       2361, 875, 2408, 1027, 886, 2413, 1035, 896, 2418, 1571, 1572, 2375, 
       1573, 1574, 1318, 1322, 1319, 2385, 1437, 1439, 1148, 1438, 1149, 2392,
        1336, 1333, 1343, 2492, 1334, 1455, 1457, 1158, 2457, 1456, 1159, 
       1359, 1357, 1362, 1358, 1474, 1476, 2516, 1165, 1475, 1166, 1196, 2463,
        1216, 1225, 692, 1226, 1169, 1204, 1198}], 
      Line3DBox[{841, 989, 2347, 842, 998, 2354, 854, 1008, 2359, 865, 1018, 
       2362, 876, 1028, 2364, 887, 1036, 897, 2419, 1044, 2376, 906, 1575, 
       1576, 2386, 1577, 1578, 1579, 1335, 2490, 1332, 1449, 1451, 1452, 1450,
        2514, 1155, 1351, 1348, 2493, 1356, 1349, 1469, 1471, 1472, 2459, 
       1470, 1163, 1194, 1175, 1195, 1213, 1212, 1215, 2466, 1188, 1227, 1189,
        1178, 1482, 1218, 1369, 1217, 1205}], 
      Line3DBox[{843, 1172, 2460, 1173, 844, 999, 2355, 855, 1009, 2360, 866, 
       1019, 2363, 877, 1029, 2365, 888, 1037, 2366, 898, 1045, 2377, 2378, 
       907, 1052, 2387, 916, 1580, 2535, 1581, 1582, 1583, 1584, 1350, 2494, 
       1347, 1458, 1460, 1461, 2458, 1459, 1463, 1462, 1481, 1209, 2465, 1210,
        1193, 1203, 1202, 1211, 1186, 2462, 1224, 1187, 1176, 1183, 1214, 
       1182, 1222, 1190, 1228, 1191, 1179, 1185, 1219, 1184, 1180}], 
      Line3DBox[{969, 1097, 1177, 2442, 958, 1087, 2434, 947, 1077, 2428, 936,
        1068, 2425, 926, 1060, 2423, 917, 1053, 2421, 908, 1046, 2420, 899, 
       2367, 1038, 2414, 889, 1030, 2409, 878, 1020, 1390, 1488, 2500, 1487, 
       867, 1010, 1486, 1256, 2474, 1118, 856, 1000, 2461, 1201, 1174, 845, 
       990, 2468, 1236, 1235, 1110, 821, 980, 1199, 1207, 1206, 1220}], 
      Line3DBox[{970, 1098, 2443, 959, 1088, 2435, 948, 1078, 2429, 937, 1069,
        2426, 927, 1061, 2424, 918, 1054, 2422, 909, 2379, 1047, 900, 2368, 
       1039, 2415, 890, 1031, 1400, 720, 2520, 879, 719, 1269, 2478, 1123, 
       868, 1011, 1382, 2519, 704, 857, 703, 2452, 1245, 1114, 846, 991, 1370,
        694, 822, 2467, 693, 1192, 331, 1170}], 
      Line3DBox[{971, 1099, 2444, 960, 1089, 2436, 949, 1079, 2430, 938, 1070,
        2427, 928, 1062, 919, 2388, 1055, 910, 2380, 1048, 901, 2369, 1040, 
       1410, 1282, 1504, 2521, 891, 1503, 1502, 1280, 1127, 2410, 880, 1021, 
       1392, 1259, 2405, 1491, 869, 1490, 1489, 1257, 2475, 1119, 858, 1001, 
       1375, 1239, 1485, 847, 1484, 2518, 1483, 1237, 1111, 823, 2464, 981, 
       1200, 1171, 1221, 1208, 1181}], 
      Line3DBox[{976, 1104, 2449, 965, 1094, 2439, 954, 1084, 2432, 943, 1074,
        1453, 2528, 1533, 1532, 932, 1065, 2527, 1531, 1337, 1150, 922, 1057, 
       2485, 1435, 1521, 1520, 912, 1049, 2524, 1519, 1312, 1140, 902, 1041, 
       1417, 1507, 2508, 1506, 892, 1032, 1505, 1287, 2482, 1130, 881, 1022, 
       1399, 1496, 2502, 1495, 870, 1012, 1494, 1267, 1493, 1492, 859, 1002, 
       2471, 1250, 848, 992, 2530, 1559, 830, 983, 2401, 828}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztfXdcVLvW9ti7YMd2bIgNBVGkT8TeFUUU7NixC2L3WLCAgl0UO2JvYMFO
9NgPKDYUVAQLgwXBXinf3slKZHLNUe71vPe+93v9w/lN2JOdrKystZKs50k1
9zFdB+fWaDTJhTSaPMpn7u6leqzfpMPwiWzXL1i2OLAb0kVeSl2tfP+aFBen
fOJL7m3G13YegryfNisZtUGHnm9vckz5xKcCay0avHsNspmUEuc7PhwVrHjn
vd/4cFz9+WmT86fTkKPPm3m9aqRpkU/JsD410iJcDj7MyspKQxpNbFqH3EkO
Gs3RS51yJ53SkH+vlPKmVpe6rbfXaK51jey2/uS38ldxa8+WsdNoCq7ccLbM
iW/lCz4W83Sy0WgSpxp6Oh37Vt4zfaNvJyvl7ykhvp2OZKtnimufYpYaTZer
ffsUO/ytfNPvoxosttBoqh70bLD4wLfy/g6JPW+YKX9v9KTnjf3fyne0aJB5
x1Sj6a1rlHlnDyvvMspl+5GZYXWU/nnNsj6/g5WDHJlcuTxl8k891ylNff63
l92I/Ic7VSLPX05dTOR/f+ezo6r8m0wtTOQ/ueoLIv+5Q30+qPJ/lAeD/EvO
p/Lvuv9fk38iyN/oP0L+VU/O9T1c5Kki/4JFXhb7upuVg14yPeX6CXJkcuXy
zKn87y/vTeQ/L70S0f+I/3L9b/Mlc6TB4EeK/G+1fVr27T5WDv1k/eb9Bb1k
esr1M6fy7+D1ntgf7LBXT/4y+xNjUZzIf1T/wx9+jfxfOX9f/oZ/i/xfhdq5
mrTeqMj/dMrEY3vDWDm0Wwv94O2Hec7mPZ/voJdMT7l+ghyZXP+/lf/M/KUL
BU2urMh/x6o+o+sc+vY8aYcDtOvUN/kTu6kFO8rbL9N/mf3575H/z9mf0MX9
4jP39lXkP/ZG2sWh4d+eJ3bNHt5z8sfy/77+Qz9Zv/8L5f9z/rfqgEt7R/kP
UORfsH9Q1WFHvz1PxskOxu3E/8n/Z+Vv/l359/z4YdDB1JqKPJfcmd2m7vFs
46LqvQ3Mg2z2xwjkn/h/8v+u/BNB/qf15H/6xIemFbfsVeRj3r97y33Z7Yxq
x63Arh/5sfxl+k/s2n+d/OXx5/fj/x3DnxxZ7Pxe6a/1q/zpr7PJgcQllhCn
HP7n5W/4Xyl/WfzfOa/HXVX+K2qWIfq//04Eac+uXc/PBj7O0q7Nb/LBpPr7
U6PHnQb9J3G2BcTdB/5P/j+3/jLZcGeSWn+xBVu6qvU3q75ynlp/ntcmvYpb
X0QfIoesXtswPMIzNW1vuUmqnMm60QzWkdnW73+3/P9e/yuLP2Xxv2z9leFM
5Q+f6MSqE0T+O+833N5msw51STWv9GyjDmf2sdlWUnne7pPNyteZil0ZFDel
nMGNiB4NmufZOG4Jgn0QU9gX2fOtX/8u+f/I/5oL8j8N8k/8qfgf5jmb93y+
g14yPeX6CXJkcuXyPHGyt7Mqf/hEl8c+a7k0tBvqk/vhtEzlPbHmy5KrPt8a
8W5p69K6Pd0Q7CvVhn2mndn0Td0HqQf7ItnkT9btDWAdn03+ZJ3ZENad2eRP
1kWNYZ2UTf4kjm8CcX02+ZO40xri0GzyJ3GSLcRN2eRP/Lod+Pls8id+yB78
Epc/2E0HsKMRzH7CPNfCvMdsvoNeakFPMdNPkKMW5IqZPGekhN3PZ1w7Aj61
7L0y+7NyXVHiZxuYzf6o2vnJu+m4y+aXrB6Zv/5V9UD7WHt/2E7Zfm9mi8LE
r40aeZD4tfsmtB6Z/ZHtcy6oVJ2033XlTL36Ze2X1Q+/Z/XxemT+WhaXQn9Y
/3i/ZH5KVn9O25/T+mXyl/lfWf1/t/xl+iOrXyZ/mf7I9L9kH5PlHT3DkUn+
PV9vjAvHU4pMyvdX7Zfp/5IZfu/U8shGRrfU8u0Nzo1Tyy2HvQgatluHbNJW
Dq2zTIePfKrRYequNdL64fesPl5PVvKMDbNfJiNHq6aZPVESDmh1J9Kp8BDW
btYP3n54H3s/fy/8ntXH65HFUQf7TP64SCkvtCpqwUKl/Jbz5tHPmnuhRw8n
jvBXvltUun1J+cTx9r/rNL97Ss8Xuse2LVsXu6HGS3331sNuGK20Hv6FxLEh
3z0H6fmpTYnSDs71NJpPZeZvH7qLlcP72Pv5e2X7xvA+9n7+3rgHbk1zbUtC
t2aXO+CwKQn/cbnF9ovHbqDC1UaFnIrToZS8dbdFDtHhDU0Dr12c7Ik2jSxJ
5AOfaIZ58PtART4e290bBSzS4R4ZDTZOOqRDK7rvqNayrReC7xj+zsvHblow
Zp1SD3wi50KTay7e7ZYt/gkR4p/Q6ACLFooceif6WrTg5xTQbtYP3n5oN+sH
b799h1KzjixOxY0cLoWO+3QDffEZ1r7BXm/UqGPNsHRFHptWFj9ecNQFbWvt
9MWXyvdh3yPg75iVgx5g0AuuD7f6Bv1eaUsSWjLhllvlLUm4//YxnxKV9kC7
60E/ePvhOfY7/jy0D0N7eTtBD+qCXvB6znhvGFfEJQlrZlj/1iAuGXV2vDjO
e4cXgu8Y/s7LvU/s6rjJ6Ck66X6+UP/iSWiPa4HhVc+OYN8x/B2zctm80GhW
P6H9mhaZvV8T97V7PCtch6p7RqwL8tPh6bWqx8d1UebXxFcupB76iXyLdN9/
fXU35N6s9m/N9ynx276s6y+V+dq8vJPBigBXBPXWg/fw+qFe9h5ef+KfQ2zU
+uET9Z7+oNzGYGcUuWheuaVKOXyi/IHOk0e7jUO30oZ4qPPIoXjyZXUe3YN5
BN/Z33l5I9Mufp6rR6ChufZU/+TTL8Kl1uvy7xS9qa41zn38Zjhq22/r0Y/l
wnHPL28q7lPsj4lpiY0rlHoGNbBfOU+p56nOyUutp2HZq4V8le+hhyd4L1b+
Pv/goWeq/gy3u1zkTK80tBFN3G/1+U7Eoj7dVp6aeRldaP2s4/1qT9HH+q5P
srKe4DxGBTr3nrwGwe8x1Mfrgfex9/P3Qru10A/M2g/v08L7MXvvwPDRvqqe
j0B3Pqh6vrW64V/aPZn+w+8x1MfrkfkpmX3L6XjJ5pfM72w81DXwfU/F/3qZ
2LR49gSP8v8SYRJ6A0VvPLDVNViHDC7O8jij2NW8bjM2JMzwRB5zN5z7qMjP
aLpvLn+LCxEfe9W8mP52CPIyOHPPJfoZsitecNSy54/wV/OwA/ZJ49nvWX28
Hngfez9/L9SrhfdgVr/M/sj81OYLpy+o9vbcrXGjVHvrn3dJhZY+rsgowp+U
d44PIeUBUC6LQ4qvd/ULVMq1nyscD1R/d9zk4jA8TDru8Bz7HX9eNi7uU+dc
2pPkh/zrnuu0O8kPX+g5x2GVsk4+efHy7kxFbr8FVK0apMjf4MxtL3fFr43c
l6vQ0hU6VA+7tOu5QIdTH1rZtHE8hNZ8HFJwwjYlvopufeRokA5Xtwi7fDBi
GMr9xCk+6rgOnZ/9OfHsXB2+36B6l9SPc5DH+j/TvlZX4oq3g+daVNThzcZx
TcfsGoYaWroXTFHW7RUevhtvqqzjTfaVcSrWwgvBdwx/5+VgvzDYM27H4hel
/Z5L6X+9XLlCrZR6Fva6mhCiyNnYYmPnx8bJqM1k1w0VyutwyIG3tnvjvZDv
OI/lS4N06HGW6x+zt+lwWsWAdjc/eyH4PYb6eD3we1YfrwfsEbNP3C71G5la
Ye/AOJQ4bLBD1Oq7eFJql/MFGz5n8mXy5nIGu8PsELc/oN9M37meg3yZvLmc
Qb5M3lzOT+2uFL8fEouM27cs02HBS9xocK/WHj7u6O2934cOXhWGrnZ5MnxD
imKXih/bvSdgELoR0iGsFU5EIwPyWnq2eIEXtO/fuVYuT/T8TsDDmA/PMIr2
8exx6BHy3Gi1ZnWVvmhP3qfXEpR5OqF+XuR1/oE2ZLHZEaswb9QkIstDnScF
X7pP8VPG55Txwje3v3ghmA8Y5gefF6UG5P/k9SUOlYyoVtX7Sxx232EwPKrR
c+l+8pr0Squ9AnTIK39cnwkBOhz059BXSxT91GgMr9Ty8Kqr0RSNM/Xw4nGd
bN8Pfs/q4/XggIT1M/LqcMmHJS03WycjE+djPULKuTE5MrlyeYK8mPy43EBe
GOTH5aY0avIkt9V1DA2uFvPw8uHtBDuCwa5wewJyZHLl8pTJQbaugffVhffz
/RmQOxsHLn/QY6bXXJ8/WKy96hf9FOWNtqpkaPkEGw2eMPn3vXPYvGLzjM+v
Ql4XtRmKnhR63r/f4ciTERuWpNZ2DnBj+sf0keuh7qKRzZitacjyeL7poV/+
wE3P+me+Te6FYFzrwjhzuYW1Miz9h2IvBuwy3/RSkU+dC/M3Xvo8h9kvZs+4
HQP7xewZt2Mw3hjGn4876HcE6Dtmei6L32T+XXbeIVvXuMG6Bi0dTtY1LWF9
kdN4QLaulPn9X9Uv2fyVrddy2i/ZukwWt1R80oXEV6MqZJD4qmtIn3+yv98/
N5T1t2usK+mv1dLJP9VfmR+X7feCfjB94Xoik5vMHoJcmJy4fGRxqUxuX94e
8FPllpC17L0qt4cQL+VUbr1j6xC5NVq6hsjN8RfLTbZ+h3Zj6Advv0xusrg6
p/rWMF/eharcTrx2JHIL9L046t+rb98/34F62Xt4/dBuDP3g7c+pvhnp6hC5
jTYyJnbJ6X9Ibr9O374vN6iXvYfXn1O5gVyYnLh8/lvl9qv07X+L3N6EzCdy
G2eWTOTW779E3/5d8cOvkltO/alMbr/Kn5r7HHg2Uml/Z5+urzv8RDyZU7mB
/jF95HqYU7n9Kn8qi1fzgNzgE3X9gb79qjjhV8WlZzr33r9WKa/k3Kr8KqW8
xNLitci5j6SdMN5aGP8fthPqZe/h9XdffKHT8Bb+2t41VgZoHq/Fm5J2mX1I
T2PrOrbO4+u7Zp/9Zh5rHaMdM+9lyU/v0nBskHv44cW7pHKWnYvJ9PCw0V6i
h/tPnNHTQ9l69letd35V+2XzKKftl+mJrF8yeyKzG7J9yJz6I9n5NYwfG08u
B5l+yvaNZXZDZh9k+94yP5XTcc9pnCMbd9m8zql8ZPoj8zsy/ZHJRxbnyPIB
ciofmf7I/I7Mv8jyDWRxjkw+svyEXyWfnK7LZPKRnm9K5CPTn/80+eRUf2T5
JzmVz9+tP7J9gP80/ZGts3IqH9m6XiafX+W/fpVfzrH+SPKFfpX/kulPTv3X
zmrR+wcp7W8d2+z62wg3vD43bX+5gBVzVfksb/fIWZWP2dp2pL9TjhttVvvV
+kRNW1U+xz030Txq85Gu1ZXntQdD/Mopzxf543HkX62zcqpXMr8m0yuZX7vz
4hCJ92xKrvmX4r2/219D+1h7fxjvwTixcePjBePKxpmPL4wfG08+jjB+bDz5
OC4y2Fvdcm8imn5qS/CKzi+wkfEa7+nFhiLt0rIZcwN0aEufLl8HBujwsbh4
rXre5PDg8XKr9Dj0YpRLocuf4rB1975FLzZ6zr6zv/PyzrbbnIv5JaFT1eak
tTiZhBtMbDf+2dEb6Muq2muml9GhrKKD+r2plYyfovRab17OQVfW7dw/NjgJ
1cvqt+bL8mRcZsnHXN7untLzO1mcX2Hp1TU9lPJah2Mq91TKe4e1HHb98xzp
PoNnSN5yap6zn6lD01voUMSpAKteTyu5oKibx2aq5W3dvxqcO7xNm6+MQdPo
5d2QS6hxiz3K+un46XyHMqutR5kfx/Vt8skN3StaL1fp9Tr0ap1hmI96vte7
xow2Sv0yfZPpp8y+yfJ+ZXbvV71XZj9l75Xps2y9k9N2yvyjzA/K1jWy/GTZ
fJf1S2bnZf5L1i9ZXCSLf2Tyl9klWb9ymkcki1tkfvxXjZfMj8j8jiwOkfkX
Wb9k8ZtsvHLcL0lcIYtD/u5+ycYrp3bg3zVeMj38ZeP1N/frV9nDnI6XzG7I
9PDvtocyf3QsnPbr7OojpF9+zc78Uj3MqT2UjRfaXpn0K6BzbZJn6AvzK6f2
Oaf+FOTC5MTlU3qV6xK1/sgbxxqr9X9dQeuXyV+W3wX5hSzfkOcZyuTf5kBh
kvc19V4RkvdVJU9pkncE8SWLN3mc+afG+9QZfx2aGr2gU+3FOtzX0c3RVyl/
lpXVKrjYeO2zrCphW4qNj4jNyiL74TnF1z/LutOa1lNLqCdnPEW/rj05refp
/7Xnf6SeV0c6kno25dOvByeEkHqs6m/Wq2fZQlrPjV3Z61lf/Usj9TzG69PG
2CBlPjkN+mwYNWUAOvrBdJltm/ao4IZi2wY1aoMtZsw8qK430m81GuWiPDdn
8ogHyie+XKCV6byaPuj0XWoPTy/Xt4f3SwQ7710crY27rp2/f3F0xJtimeS9
SVVLxXvOSXDoVn9gsPecBN7+mZ6GjTrvXGMf69nghdPONdnwj5oEyu+hCcrO
72F3yXxMHvdHDi6R74rmc3+UjadiE/BUVO2WnafC2mXZw7Vnk2y79Ni1bsPZ
JM5TYdR8TfSlbqPsrV3qvIjsNoo/P+nq4Y/FPBvazLhabJqhZ0OO39yxrGb8
2rPvbY2X91m94ex7Xo9L+xYZVslNrFzaDwuzS27CcaAlTce/XWFqa2Nk+uHY
alNbXo91FRXHm9HYuoqK683gfDuJMa7pG321VokxvikhvlpeT6Lm3Ji80+dY
JGredS44fQ7HpR4qcjulh1tuy0NF3jTt5Zab41JLawx7d5kbaVZaM7ajy9xI
jm8N0hytcsN9vkWQpueF2+7zeT0dnPKGB2deN33u1D5tW+Z1jtMpqjlkea7Y
NbP8GtO9F4td4/Wkvju+Qz3X0xj02KyeG/Zv3mzCxhke6Hnv5D/UvHDnPI2K
qnnia9Jn2lyrMxzV7PTWaJBSHtS3cJshSnmPGslGbhmzkKYozIui+vPCPKqe
W7fchx2spxRt1D33YV6+7qbfpEvdpttH3auwIrLbdD5ev2Vce3Koq8bOKaP6
6/CuGq4nt1sEKuPoaBPbIm2qoacjl3/j0CMZeco2t2ocGlOqQNnmXM43CjSu
lCd/fssbBU5WKJA/P5fnOs2e6I1tFloU0py039pmIZdbgyl7D52cr0Nlz93L
OjFfh0flG/vmzcEjKOnk+zIqTsTVqNHr5Uq/d4YG1Sm7czTyc7+XR/1e4knU
axW3Ejq3y8ThI8cijS+d7zMX6M/3fOeGHq9Zv6s2X+mOtWrV7xqRCfPa+vyB
/Z1zn3fIbbh8gVPu81w+d2eHtLidOde+xbynQbGZc7l8dOYF7q09m8/OoGGt
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
j4B/sux/BP+zbF9OJoec822mQH+L/o/2d1HEW8OC22+ZvTLeZH0927yW5bvK
+vvP844Ok/C+Fvtb5FDeO+NAY/+lFsM/TCx/KJs9d22fh5wPzn8wlfjTfcCv
ZdEtD4krujl6EzlMLVT+X+Sf/J/lH46a+WJI4QWGln0iD+3G2fy4LC9ajKMY
n5u4bor423hoZXL4OX14Pa7k3fcNnawcn6VaTMsWp8n57ixCqRxy68mho7A+
8oD5LpODvL+sX8bOPzPfmxsVCimwo5tNcfMyz4Zli59/FY+fbP7mtL8ajf13
7Vj0qYdWMfOM7J4fXuncMNu6Buy4Hdj1f5qfUFzXePzADsva73WnuaaI7yb7
Mj0jJ7vq7YvK+P2KQvtThPYb54jfUja/ctqvnPMTFvsl/Jyy8zVZv+Tt/9/N
Oyrr79/PMykbx2E56m9O5VDSwZz0t0u3tkJ//118m7L5yOyJVpCDjIcTgxwS
foqHs4PPJP9JWUdMK1w5muZfMInH/68mzGl12fWAWbjdiDXJZRO5HC5t3D94
xMCJFis6HfzddPAaLoddbhfmn+uT0Vibp9XAGqXLcjnsPXES11XWjwndE5Y6
Fu3O5WDQ3+NuqGk7m0Xmfl1yxXfncnhK7azdDWp3s8lhGYn/XYT4/1KzqZU9
u4+yb/WkXe93Z3dzObhtfhZ6XFl323dOHnp44xsuB+OjZVr5KOujbi03X2qw
7W1EXtcEIodVkJ9mBvlpUyCfquZ6Wn4KyidC+VeTswXV/RY7fD5D3Y+JSzat
Fn5vOJqVX1d1hPJ95CaNrfKJ35/PtXxfvlnSfIZcqXPWpF69gRYtLI3Srt7A
JbbV6f2lwks0v925j1WTHPGhurny+Ps7olkDnrur7ZSd14vlk6Dc+uXbfTUv
JKLqQbMam1xIxEMbZi6rNiUJ3T3X/0qL4Uno/dSu9ZRPrIks3rjOwVvI/mTr
YgFKPb+/RQ2UTzx+RET+Qhby/Ifamd711eerhxkWV5+fNCmBPH/epIxaLwrM
XK++B/vaG5D67+8aq7YDjbifd7/SLuwN7ZHlLYjlRgNp+Z57Xm+1AY64cXdd
wTFPHNG236l8FpQ3VuWILvTzUuWKK4A87Rw9SD0nxlqT9Y6RmwWpp2M/S3Wc
kH+rMHXccPPVRmS8RD8bDvZh6tA36njjUzNWqeOPLsC4n7lL83POLKf5Oc3g
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
tqf+6D1nFTqQkKrmKfD8hFNwH1wA3Ad3HvI8I2g70NebpF14HLSnFtwrVwPu
lWsH+auydZmOygWVo3Li55Jwb5OZsYC3gnuJ2D1F/H4i8Z4Xdu9MzIe7ah4n
OqBbrOZ1YpNTt0k+Z3GBn3kV8DOL5/gXYN/mZ8+zWPnPxsO/gxxCID6ZLcQn
cG+E1ljAk9aNaE7yMLeuXKaXhyk7X95J69VG0vfw+l+kNibySfE9ROTD8l3F
vN8/IW9WlM8hkI/sfmrZOm7yq5skvygq8BDJL6oGcbXM/gP/HePDwx0gvpXV
I+NrkvGVMb61mcC3xuLJaIgzF0KcuQjK2405RNaJxWNeE1x/M1gnMt6q3gJv
lb1wjyHj0TrU8wnJ93h+tbQeLvg68J+0+QeeH9n93d+PH6wg3rCU5JnECXkm
UyCvzBfyygZBXlntE/77nzsFIvOUPnEvnAJxg3GXSp7+moaeN1iwy9MyQes6
wuLWBMuEiHyDqF49hfa7CO2/061DohqHzHWeuTZ7HGLjMlvFh9u69Diu4sU5
PmUWxWPbLKD4bG6fXSn+2cqN4qGz4Y4J3rgx4I85/iiJ4mMtkihelvsL8Vwv
Cs71Lp7vZ7AnLR7lC71TdW9aPA541WXfvKxkpf0u0H5vvfZbUHy7bSeKd8+G
K6ftnyu03wna31Vovx20305ov1ku2v51QvtZHlobyEN704TuZ9aH9rTpcUCv
PWOhPZN+sj2latH2jC6n355iUH9toX5PqH+yUP/eM7T+hzFD9eqvAvXYCHIz
nHOK1GNmml+vnoI31z0i/aqzZW325+8Cv8QcgV+C8X48EXCyfoBTthJwyk1h
n7ypsE9uC/kVxyC/ogHkV9SE8wsX4Z4RkSd5GOThTAIe40kCj7GMLysB5lFH
YR5ZWjyxU3Fep+qu7pkd5xVP8av2qyielcvhjoR/A/iVHB4I8gmOWETk07mY
vnwsrFfOce8RiOrkMXcb0CMQV/XYWjpCsQO3E+JeDRqWgHzub7wxcFgCbuxz
OyihUDLP8/kIeT7OcJ5493joPtWe3G0WQOzJjiXUnqS4DCX2xG3gm5js9mRi
Rp7yXko7/zC4NDS7HG54zk5R+zVV6FdX6Nd9oV9Fu9JxP75Jv1+y85oFwZ2J
Hah+M5nYgdVgB254Fn6Zk/eKPPapkH+S03quQX8nCc+3kzx/G8Z9hmdxved9
gDfsnsAb9juU3xbKv/GMkffz8ilQDv3g5TK+rwSJX5DVo/hUsm7NzNLH4X7N
7T1aHcedTh31xtGOjhPaRMcNL4Dx6mo6nOjVaet3enp1t2oN0p6uQnsmQ3uu
Cf11BTk/FeT8OXcA0autTjZ67ZHdB7cR9ml9hH3auxK/P42On/0tYVyU/9YB
f87D7Ovf/tSP2jalfjUb3lOzGp6Pz/48+FebmQL/CeNvMRf4W3oDD0lvgYdk
NtQzRajHmvoJ26pCPeDnGtsJPCHghxR/pF//RKh/rFC/MdRfVKh/Ptj5xoKd
l+mnDvg0dAKfhj20015opxO000lo5xRo53ihnS1AnqZCOzuBXiUIevUB9CpE
0KsiNC5BV2mcgn1BzyvBuqmSsG6CuMEC4gjer1HUrzc2rKXfL/DTVrvP6Per
AfXHNsWpf/7GX0H9sS345+z61ktdR2s0TbXZ19Hgn+zjBb4FsO8Ok6m953J4
ssP8ahVFDts21/qzRjY5rPd49/z2pwS0qN3OIS8/J+Df31Ws3X6r7h/sbWPI
L2oO/ugz+KPO4I8M3Ze1Un6PPGoUKXLnUwJOG1qJ1HPKhnxHr73J3/GBnrRc
jLu0cI4cBzzt5YGnfQOcw46L7l7ntVL/+I+ta99U6t/fxJDUA+NkVknAqbk8
H3xE1c/iAyYS/fR+/2rkVDWuEO4D/QA4F3H9WxhwN/B7Vh+vR8TpsOdFHM17
qP9WWyJflDycyBvnfk/l7NSbyr+pPZX/6kxaXgLyXX1+kO/K7p+yBr7ERQJf
ouiX77L7oJs4uSrxByqQz8vHPVscMhfui5wI90WOkNwXmR/G68EhK/LehkMW
6b13593z5L3po8sRubXam2+UKrcpr7aSOCdX1E0S59SGOEe0J6ydXWj8pN0S
oV8/1Mveg9tA/S4CL1wmxJOQz83yu3E4xJMnga/PAfj6TCAuNRbi0tdQz7jz
p3OnKOPo43e/U6wyjm97ViXjNTW2aDXVnritr0vsyUKwJ1skcaDY/tbQ/kIw
7tOEcTen8tXep/KW+kcb0AdxXXYW1mU3ytn0Usf9dv1OahyKj7ei4w7xJXKE
vDUWZ6ZDnuEdyDN8D3HXwWfhZBzDbvxBxtEcxlHMRz0N771Mn0NR9He4Cjy/
aTk9Lzt9V/+8jN3PFQPvbQr25xSMlxbGyxjGa+mbUi/UebT/si+ZRwPe0HmU
9wgdrzLT6HhVG0jHK8nxvp9fwiN0re2oDgsTHuHdAzOz0rc9RF9BDi1BDu1B
DtabyO/RyvukPvxbW1rPFtCra6BXM0CvRPw1Gxemn7Du4XqV+pXir2cL+GvZ
PDq9Z3+sEvejJV0Wq/sKPP43oPMK+dF5xuUs5u04w/y9nLt5siq3fC/cPFS5
mcRQuRlBPkws5MNsBjs8347asTW9qB2rkEWfF8f9JIy7bHwNl9H9JfM4/f2l
HrC/1EDYX6rZMJ6M1xK3kWS89sJ4XYd1IowDPgry77WdjteRx3S8Sreg42W4
gegHenOB6As2LUH9EYL1aQSsT6uAXpnDflTPH9xjco/FPxB/Ogvx53Yaf2i/
0niEz98HEp5eFlc7CeU7YJ27XVjn7p1D4nit5Y0Jo7PX//8AJKjE2A==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{346.43516225276784`, 248.74290877790025`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-30.315923778015883`, 30.315923778015883`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.7861381995475031, -2.868228361622728, 1.614079550950091},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7631509119376783`*^9, 3.763151066223152*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "4", "th", " ", "partial", " ", "derivative", " ", "used", " ", "in", " ", 
   "EMSF"}], " ", "*)"}]], "Input",
 CellChangeTimes->{
  3.7631502543000097`*^9, {3.7631778036629295`*^9, 3.7631778128470926`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "y", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763152967108125*^9, 3.7631529673299756`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]], 
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "4"]}], "+", 
     RowBox[{"32", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
     RowBox[{"24", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g2", "-", "y"}], ")"}]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", "n"}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g2", "-", "y"}], ")"}]}]], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{"g1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "3"]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "4"]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.7631529677257395`*^9, 3.763166704162163*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Riemann", " ", "sum", " ", "approximation", " ", "of", " ", "integral", 
   " ", "of", " ", "4", "th", " ", "partial", " ", "derivativeb"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.76317782907257*^9, 3.763177863430624*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"riemannsum", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["n", "0.01"]], "*", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"k", "=", 
         RowBox[{
          RowBox[{"-", "4"}], "*", 
          SuperscriptBox["n", "0.01"]}]}], 
        RowBox[{"1", "*", 
         SuperscriptBox["n", "0.01"]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox["1", 
              SqrtBox[
               RowBox[{"2", " ", "\[Pi]"}]]], 
             SqrtBox["n"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "n", " ", 
                   RowBox[{"(", 
                    RowBox[{"g1", "-", "x"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "n", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
                SuperscriptBox["n", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], "4"]}], "+", 
               RowBox[{"32", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "n", " ", 
                   RowBox[{"(", 
                    RowBox[{"g1", "-", "x"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "n", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
                SuperscriptBox["n", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], "3"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
               RowBox[{"24", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"g1", "-", "x"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "y"}], ")"}]}]], " ", 
                SuperscriptBox["n", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", 
                   "n"}], "+", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}], 
               "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"g1", "-", "x"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "y"}], ")"}]}]], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"g1", "-", "x"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "3"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "3"]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"g1", "-", "x"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "2"]}], "-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "3"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "4"]}]}], 
                 ")"}]}]}], ")"}]}], " ", "/.", " ", 
            RowBox[{"y", "\[Rule]", " ", 
             FractionBox["k", 
              SuperscriptBox["n", "0.01"]]}]}], "  ", "/.", 
           RowBox[{"x", "\[Rule]", " ", "0.9"}]}], " ", "/.", " ", 
          RowBox[{"g1", "\[Rule]", 
           RowBox[{"1", " ", "+", 
            FractionBox["1", "n"]}]}]}], "/.", 
         RowBox[{"g2", "\[Rule]", " ", "1"}]}], ")"}]}]}], "//", "N"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "500", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7631674732312555`*^9, 3.763167487724828*^9}, {
   3.7631675328386607`*^9, 3.7631675333072376`*^9}, {3.7631676439483147`*^9, 
   3.7631676674186954`*^9}, {3.7631677718882165`*^9, 3.763167772489941*^9}, {
   3.7631678271507187`*^9, 3.763167838513115*^9}, {3.7631680540308657`*^9, 
   3.763168067853954*^9}, {3.7631685634689384`*^9, 3.7631685802695417`*^9}, {
   3.7631686482678127`*^9, 3.763168687330741*^9}, {3.763168719732206*^9, 
   3.76316872354078*^9}, {3.763168759062252*^9, 3.76316878697952*^9}, 
   3.7631702597688017`*^9, {3.763170302528186*^9, 3.76317030279904*^9}, {
   3.763178142837142*^9, 3.7631781440474443`*^9}, {3.7631782106285725`*^9, 
   3.7631782292788897`*^9}, {3.7631782612412734`*^9, 3.763178316405515*^9}, {
   3.7631784412007484`*^9, 3.763178473866884*^9}, {3.7631786065716815`*^9, 
   3.763178608618018*^9}, {3.763178801571691*^9, 3.763178811511963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9736271807987968`", ",", "206.35565022881016`", ",", 
   "924.2923874995133`", ",", "2147.6641825066868`", ",", 
   "3782.915331138094`", ",", "5503.050949960395`", ",", "6891.624346390272`",
    ",", "7558.766499210096`", ",", "7199.932398148206`", ",", 
   "5618.539417933436`", ",", "2722.6653500658726`", ",", 
   RowBox[{"-", "1493.053605725473`"}], ",", 
   RowBox[{"-", "6970.236572537125`"}], ",", 
   RowBox[{"-", "13607.468484718383`"}], ",", 
   RowBox[{"-", "21275.58923951337`"}], ",", 
   RowBox[{"-", "29826.961395583363`"}], ",", 
   RowBox[{"-", "39099.786426201725`"}], ",", 
   RowBox[{"-", "48919.26793912296`"}], ",", 
   RowBox[{"-", "59097.46592361779`"}], ",", 
   RowBox[{"-", "69433.3294574286`"}], ",", 
   RowBox[{"-", "79713.8708513484`"}], ",", 
   RowBox[{"-", "89716.91602269992`"}], ",", 
   RowBox[{"-", "99215.42910141392`"}], ",", 
   RowBox[{"-", "107983.1038267211`"}], ",", 
   RowBox[{"-", "115800.74231030348`"}], ",", 
   RowBox[{"-", "122462.88350692984`"}], ",", 
   RowBox[{"-", "127784.17009832931`"}], ",", 
   RowBox[{"-", "131605.02326085517`"}], ",", 
   RowBox[{"-", "133796.3035388204`"}], ",", 
   RowBox[{"-", "134262.7523080114`"}], ",", 
   RowBox[{"-", "132945.11790998152`"}], ",", 
   RowBox[{"-", "129820.96491249446`"}], ",", 
   RowBox[{"-", "124904.2400268673`"}], ",", 
   RowBox[{"-", "118243.72314432888`"}], ",", 
   RowBox[{"-", "109920.52800075163`"}], ",", 
   RowBox[{"-", "100044.83659442193`"}], ",", 
   RowBox[{"-", "88752.05763281822`"}], ",", 
   RowBox[{"-", "76198.59499971296`"}], ",", 
   RowBox[{"-", "62557.4003224586`"}], ",", 
   RowBox[{"-", "48013.46662632081`"}], ",", 
   RowBox[{"-", "32759.399817512567`"}], ",", 
   RowBox[{"-", "16991.182956641565`"}], ",", 
   RowBox[{"-", "904.2262133517717`"}], ",", "15310.226046563948`", ",", 
   "31468.27974352038`", ",", "47396.1342640381`", ",", "62932.36789356479`", 
   ",", "77929.76334639906`", ",", "92256.68334690515`", ",", 
   "105798.01618291652`", ",", "118455.71906727749`", ",", 
   "130148.99313871033`", ",", "140814.12816839217`", ",", 
   "150404.05769213135`", ",", "158887.6665476635`", ",", 
   "166248.89285397646`", ",", "172485.66551446286`", ",", 
   "177608.71654129028`", ",", "181640.30505854276`", ",", 
   "184612.88690779667`", ",", "186567.76049897962`", ",", 
   "187553.71605349853`", ",", "187625.71179111602`", ",", 
   "186843.5970163058`", ",", "185270.89854691128`", ",", 
   "182973.6835657556`", ",", "180019.5088172572`", ",", "176476.4631564846`",
    ",", "172412.30781416132`", ",", "167893.71638565688`", ",", 
   "162985.61449146474`", ",", "157750.61729124736`", ",", 
   "152248.56155529333`", ",", "146536.12779409028`", ",", 
   "140666.54700155256`", ",", "134689.38586076794`", ",", 
   "128650.40377058767`", ",", "122591.4747544075`", ",", 
   "116550.56718513939`", ",", "110561.77427936975`", ",", 
   "104655.38845606963`", ",", "98858.0128997456`", ",", "93192.70399359596`",
    ",", "87679.13867684438`", ",", "82333.80121479066`", ",", 
   "77170.1843348758`", ",", "72199.00016415925`", ",", "67428.3968913794`", 
   ",", "62864.1775602105`", ",", "58510.01787192356`", ",", 
   "54367.68032796243`", ",", "50437.22247189836`", ",", 
   "46717.197390926085`", ",", "43204.84500760926`", ",", 
   "39896.27303104296`", ",", "36786.626741853746`", ",", 
   "33870.247058184825`", ",", "31140.816569745413`", ",", 
   "28591.493435815293`", ",", "26215.033221965045`"}], "}"}]], "Output",
 CellChangeTimes->{{3.763167481478527*^9, 3.763167493238719*^9}, 
   3.7631675584908247`*^9, 3.7631676708090487`*^9, 3.7631677757130814`*^9, 
   3.7631678457836704`*^9, 3.763168087916949*^9, 3.763168589302273*^9, 
   3.7631686558964753`*^9, 3.7631686899843793`*^9, 3.7631687292449417`*^9, {
   3.7631687831822615`*^9, 3.7631688027057214`*^9}, 3.7631702742024937`*^9, 
   3.7631703175102296`*^9, 3.7631781581923027`*^9, 3.763178283478747*^9, 
   3.76317831814466*^9, {3.763178454510816*^9, 3.7631784748173385`*^9}, 
   3.763178609965785*^9, 3.7631788125943604`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"riemannsum", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "n"], "*", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"k", "=", 
         RowBox[{
          RowBox[{"-", "4"}], "*", "n"}]}], 
        RowBox[{"1", "*", "n"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox["1", 
              SqrtBox[
               RowBox[{"2", " ", "\[Pi]"}]]], 
             SqrtBox["n"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "n", " ", 
                   RowBox[{"(", 
                    RowBox[{"g1", "-", "x"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "n", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
                SuperscriptBox["n", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], "4"]}], "+", 
               RowBox[{"32", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "n", " ", 
                   RowBox[{"(", 
                    RowBox[{"g1", "-", "x"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "n", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
                SuperscriptBox["n", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], "3"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
               RowBox[{"24", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"g1", "-", "x"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "y"}], ")"}]}]], " ", 
                SuperscriptBox["n", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", 
                   "n"}], "+", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}], 
               "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"g1", "-", "x"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "y"}], ")"}]}]], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"g1", "-", "x"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "3"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "3"]}]}], ")"}]}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"g1", "-", "x"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "2"]}], "-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "3"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                   SuperscriptBox["n", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "4"]}]}], 
                 ")"}]}]}], ")"}]}], " ", "/.", " ", 
            RowBox[{"y", "\[Rule]", " ", 
             FractionBox["k", "n"]}]}], "  ", "/.", 
           RowBox[{"x", "\[Rule]", " ", "0.3"}]}], " ", "/.", " ", 
          RowBox[{"g1", "\[Rule]", 
           RowBox[{"1", " ", "+", 
            FractionBox["1", "n"]}]}]}], "/.", 
         RowBox[{"g2", "\[Rule]", " ", "1"}]}], ")"}]}]}], "//", "N"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "500", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763178844086065*^9, 3.763178895421279*^9}, {
  3.7632343445571437`*^9, 3.763234378775191*^9}, {3.7632352630313225`*^9, 
  3.763235277166819*^9}, {3.7632353425182743`*^9, 3.7632353530682335`*^9}, {
  3.763235420645745*^9, 3.7632354280740595`*^9}, {3.7632405283957973`*^9, 
  3.7632405285672646`*^9}, {3.7632407218621645`*^9, 3.7632408070835395`*^9}, {
  3.7632408996823254`*^9, 3.763240901418719*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "4.935323855949471`"}], ",", 
   RowBox[{"-", "34.57064214199836`"}], ",", 
   RowBox[{"-", "83.03819652379174`"}], ",", 
   RowBox[{"-", "90.86736859543767`"}], ",", 
   RowBox[{"-", "69.3809071637699`"}], ",", 
   RowBox[{"-", "43.14769764302926`"}], ",", 
   RowBox[{"-", "23.501947148511537`"}], ",", 
   RowBox[{"-", "11.66777220725847`"}], ",", 
   RowBox[{"-", "5.409160903846969`"}], ",", 
   RowBox[{"-", "2.379037306900666`"}], ",", 
   RowBox[{"-", "1.0035472026029746`"}], ",", 
   RowBox[{"-", "0.40920587903048633`"}], ",", 
   RowBox[{"-", "0.16223332254588488`"}], ",", 
   RowBox[{"-", "0.06281454094348767`"}], ",", 
   RowBox[{"-", "0.02383453204162745`"}], ",", 
   RowBox[{"-", "0.008887424320998425`"}], ",", 
   RowBox[{"-", "0.003263889021805677`"}], ",", 
   RowBox[{"-", "0.0011827098247553282`"}], ",", 
   RowBox[{"-", "0.00042350918758917756`"}], ",", 
   RowBox[{"-", "0.00015005203809569123`"}], ",", 
   RowBox[{"-", "0.000052660344890106777`"}], ",", 
   RowBox[{"-", "0.000018322657490851462`"}], ",", 
   RowBox[{"-", "6.325597215613794`*^-6"}], ",", 
   RowBox[{"-", "2.1683077972614654`*^-6"}], ",", 
   RowBox[{"-", "7.384317119893412`*^-7"}], ",", 
   RowBox[{"-", "2.499757198408954`*^-7"}], ",", 
   RowBox[{"-", "8.415395649149255`*^-8"}], ",", 
   RowBox[{"-", "2.8189405881369832`*^-8"}], ",", 
   RowBox[{"-", "9.397385375997353`*^-9"}], ",", 
   RowBox[{"-", "3.1175362738190115`*^-9"}], ",", 
   RowBox[{"-", "1.0271482844162611`*^-9"}], ",", 
   RowBox[{"-", "3.3331107044915537`*^-10"}], ",", 
   RowBox[{"-", "1.0626472601143857`*^-10"}], ",", 
   RowBox[{"-", "3.921857042974897`*^-11"}], ",", 
   RowBox[{"-", "1.323077617980597`*^-11"}], ",", 
   RowBox[{"-", "1.2518339036830422`*^-11"}], ",", "6.9988312937913406`*^-12",
    ",", 
   RowBox[{"-", "4.528903305995085`*^-12"}], ",", 
   RowBox[{"-", "2.6059731432131097`*^-12"}], ",", "1.8474005673386874`*^-12",
    ",", "2.6956687504498377`*^-12", ",", 
   RowBox[{"-", "2.0318824854678025`*^-11"}], ",", 
   RowBox[{"-", "7.501256249888222`*^-12"}], ",", "5.824497408575161`*^-12", 
   ",", 
   RowBox[{"-", "4.6656121129484805`*^-12"}], ",", 
   RowBox[{"-", "1.108447179412922`*^-12"}], ",", "2.3193848627469924`*^-14", 
   ",", "2.1405605200708665`*^-12", ",", "1.873993002890825`*^-11", ",", 
   RowBox[{"-", "2.4533733212456727`*^-12"}], ",", 
   RowBox[{"-", "6.231147974522482`*^-12"}], ",", 
   RowBox[{"-", "1.150683363330795`*^-11"}], ",", 
   RowBox[{"-", "1.8143882879023954`*^-11"}], ",", "1.3123174075293192`*^-11",
    ",", "6.551698786467778`*^-12", ",", 
   RowBox[{"-", "3.403196489119307`*^-12"}], ",", "4.232498471587265`*^-12", 
   ",", "6.167798595486159`*^-12", ",", 
   RowBox[{"-", "1.7059829168706858`*^-11"}], ",", "1.0840012374896386`*^-11",
    ",", "1.8791104277281446`*^-12", ",", "7.456208376404233`*^-12", ",", 
   "3.002532154533005`*^-11", ",", "2.0393990254726602`*^-11", ",", 
   "6.094332584445084`*^-12", ",", "2.873019331693655`*^-12", ",", 
   RowBox[{"-", "1.2729774414598095`*^-12"}], ",", 
   RowBox[{"-", "2.966250981404465`*^-11"}], ",", 
   RowBox[{"-", "8.616943008931977`*^-12"}], ",", "1.503392464780342`*^-11", 
   ",", "9.724562216896589`*^-12", ",", "1.9791232559435616`*^-11", ",", 
   "4.976096670167666`*^-12", ",", "3.282343077205589`*^-11", ",", 
   "3.8546235453790066`*^-11", ",", 
   RowBox[{"-", "8.607082125158534`*^-12"}], ",", 
   RowBox[{"-", "3.5657938691223423`*^-12"}], ",", "4.377407492509804`*^-12", 
   ",", 
   RowBox[{"-", "2.4891471103081813`*^-11"}], ",", "1.7868490716481063`*^-11",
    ",", 
   RowBox[{"-", "3.4735528557014323`*^-11"}], ",", 
   RowBox[{"-", "2.876605379488367`*^-12"}], ",", "3.0216134622962474`*^-11", 
   ",", "1.9284794043652546`*^-11", ",", 
   RowBox[{"-", "1.7231222070175243`*^-11"}], ",", 
   RowBox[{"-", "3.3023702141570034`*^-11"}], ",", "1.3019636802394566`*^-11",
    ",", "3.058344544335091`*^-11", ",", "5.750625652215599`*^-11", ",", 
   RowBox[{"-", "4.1702812246633415`*^-11"}], ",", 
   RowBox[{"-", "3.249660983943063`*^-11"}], ",", "1.2260596806174599`*^-10", 
   ",", "4.6855112161687045`*^-11", ",", "3.579704488317645`*^-11", ",", 
   "1.3778725288467878`*^-10", ",", 
   RowBox[{"-", "2.211358624509081`*^-11"}], ",", "1.994857482463971`*^-11", 
   ",", "1.999409359034347`*^-11", ",", "3.358313790214615`*^-11", ",", 
   RowBox[{"-", "3.480726378994957`*^-11"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.763178882489665*^9, 3.76317889813705*^9}, 
   3.76317902939579*^9, 3.763234219360721*^9, 3.7632343797946825`*^9, 
   3.7632352781696568`*^9, 3.7632353538336554`*^9, 3.763235428555766*^9, 
   3.7632405291624317`*^9, 3.763240570628886*^9, 3.763240767010187*^9, 
   3.7632408562481513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "y", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "4"}], "}"}]}], "]"}], " ", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]], 
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "4"]}], "+", 
     RowBox[{"32", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
     RowBox[{"24", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g2", "-", "y"}], ")"}]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", "n"}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g2", "-", "y"}], ")"}]}]], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{"g1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "3"]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "4"]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.7632372513067894`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]]], 
     SqrtBox["n"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "16"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "n", " ", 
           RowBox[{"(", 
            RowBox[{"g1", "-", "x"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
        SuperscriptBox["n", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], "4"]}], "+", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "n", " ", 
           RowBox[{"(", 
            RowBox[{"g1", "-", "x"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
        SuperscriptBox["n", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g2", "-", "y"}], ")"}]}]], " ", 
        SuperscriptBox["n", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], " ", "n", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", "n"}],
           "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g2", "-", "y"}], ")"}]}]], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "3"]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{"g1", "-", "x"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "4"]}]}], ")"}]}]}], 
      ")"}]}], "/.", 
    RowBox[{"x", "\[Rule]", " ", 
     FractionBox["9", "10"]}]}], " ", "/.", " ", 
   RowBox[{"g1", "\[Rule]", 
    RowBox[{"1", " ", "+", 
     FractionBox["1", "n"]}]}]}], "/.", 
  RowBox[{"g2", "\[Rule]", " ", "1"}]}]], "Input",
 CellChangeTimes->{{3.7632374050129848`*^9, 3.763237407779314*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]], 
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "+", 
           FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "10"], "+", 
         FractionBox["1", "n"]}], ")"}], "4"], " ", 
      SuperscriptBox["n", "4"]}], "-", 
     RowBox[{"24", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "10"], "+", 
          FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "y"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "10"], "+", 
         FractionBox["1", "n"]}], ")"}], "2"], " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]]}], " ", 
         "n"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]}], ")"}]}], 
     "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "10"], "+", 
          FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "y"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "10"], "+", 
        FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["9", "10"]}], "+", "y"}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["9", "10"]}], "+", "y"}], ")"}], "3"]}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "10"], "+", 
            FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "y"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["9", "10"]}], "+", "y"}], ")"}], "4"]}]}], ")"}]}], 
     "+", 
     RowBox[{"32", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "+", 
           FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "10"], "+", 
         FractionBox["1", "n"]}], ")"}], "3"], " ", 
      SuperscriptBox["n", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["9", "10"]}], "+", "y"}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7632373607440405`*^9, 3.7632374083414965`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"ABS", " ", "integral"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"integralabs", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]]], 
          SqrtBox["n"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "16"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["1", "10"], "+", 
                  FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "y"}], ")"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], " ", "n", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]}]], 
             " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "10"], "+", 
                FractionBox["1", "n"]}], ")"}], "4"], " ", 
             SuperscriptBox["n", "4"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", "10"], "+", 
                 FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "y"}], ")"}]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "10"], "+", 
                FractionBox["1", "n"]}], ")"}], "2"], " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]]}], 
                " ", "n"}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]}], 
              ")"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", "10"], "+", 
                 FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "y"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "10"], "+", 
               FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["9", "10"]}], "+", "y"}], ")"}]}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "3"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "3"]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["1", "10"], "+", 
                   FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "y"}], ")"}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "2"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "3"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "4"]}]}], 
              ")"}]}], "+", 
            RowBox[{"32", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["1", "10"], "+", 
                  FractionBox["1", "n"]}], ")"}], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "y"}], ")"}]}], "-", 
               RowBox[{
                FractionBox["1", "2"], " ", "n", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["9", "10"]}], "+", "y"}], ")"}], "2"]}]}]], 
             " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "10"], "+", 
                FractionBox["1", "n"]}], ")"}], "3"], " ", 
             SuperscriptBox["n", "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["9", "10"]}], "+", "y"}], ")"}]}]}], ")"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "500", ",", "5"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7632371990874386`*^9, 3.763237271360111*^9}, {
  3.763237330602412*^9, 3.7632373732634735`*^9}, {3.7632374146239667`*^9, 
  3.763237457166848*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"y\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9558964921600763`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"75201.50664097142`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.1946802811488544`\\\"}]\\)\[NoBreak] for the \
integral and error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763237525196829*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"y\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9504428096125548`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"89037.76148666115`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.38250765439102274`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763237533732813*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"y\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.854565739179199`\\\", \\\"}\\\"}]\
\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"105525.60995606621`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.29711863520001763`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7632375433564825`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"ncvb\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7632375434814587`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763237601863301*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763237630427372*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7632376873552284`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.763237687386438*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.4712893701701377`", ",", "102.28156642834918`", ",", 
   "341.6103369274343`", ",", "730.7089767348068`", ",", 
   "1274.8168401295989`", ",", "1974.1979849979289`", ",", 
   "2825.5504749836364`", ",", "3823.064524423951`", ",", 
   "4959.201985158316`", ",", "6225.284276212282`", ",", "7611.945713203556`",
    ",", "9109.488337081131`", ",", "10708.161599098543`", ",", 
   "12398.382410172408`", ",", "14170.906118838482`", ",", 
   "16016.955844019489`", ",", "17928.31564641303`", ",", 
   "19897.391916181827`", ",", "21917.246843988265`", ",", 
   "23981.607734955385`", ",", "26084.85604750501`", ",", 
   "28222.000224689924`", ",", "30388.636497399515`", ",", 
   "32580.901771233952`", ",", "34795.422419404276`", ",", 
   "37029.262300114344`", ",", "39279.87265694063`", ",", 
   "41545.04582668135`", ",", "43822.87395664269`", ",", "46111.71329582554`",
    ",", "48410.15410562568`", ",", "50716.995867542086`", ",", 
   "53031.22722909409`", ",", "55352.01000558035`", ",", 
   "57678.666531700714`", ",", "60010.66967756898`", ",", 
   "62347.63492298112`", ",", "64695.920412976295`", ",", 
   "67705.81019751407`", ",", "71254.84321830064`", ",", "75201.50664097142`",
    ",", "79496.81106212526`", ",", "84114.56050305998`", ",", 
   "89037.76148666115`", ",", "94252.95711052376`", ",", "99751.58082265912`",
    ",", "105525.60995606621`", ",", "111567.30384934739`", ",", 
   "117872.21790987537`", ",", "124433.70896895167`", ",", 
   "131246.9322390652`", ",", "138306.99039947914`", ",", 
   "145609.25344220197`", ",", "153149.32442998455`", ",", 
   "160921.6060778692`", ",", "168923.06701718725`", ",", 
   "177148.4624564137`", ",", "185592.93413795024`", ",", 
   "194251.9058199937`", ",", "203121.1082061891`", ",", "212196.7243157372`",
    ",", "221476.52711065506`", ",", "230953.6781260104`", ",", 
   "240619.4357192797`", ",", "250479.5688432449`", ",", 
   "260535.04134492393`", ",", "270751.7380357751`", ",", 
   "281157.51844214427`", ",", "291737.23958590254`", ",", 
   "302487.7305183345`", ",", "313405.1041133077`", ",", "324489.5238196904`",
    ",", "335726.08431144606`", ",", "347125.7534851171`", ",", 
   "358672.82205491955`", ",", "370371.07903517806`", ",", 
   "382216.8974222103`", ",", "394205.7183146433`", ",", 
   "406333.44725102506`", ",", "418601.5237521532`", ",", 
   "431002.8546282465`", ",", "443530.9936263616`", ",", "456210.8515008521`",
    ",", "468980.46405285003`", ",", "481888.98509256716`", ",", 
   "494921.91485546227`", ",", "508072.2222839435`", ",", 
   "521340.32544565457`", ",", "534680.6565273702`", ",", 
   "548194.9308111417`", ",", "561825.5377262025`", ",", "575541.1331275861`",
    ",", "589366.2294062009`", ",", "603292.5836564192`", ",", 
   "617308.713348258`", ",", "631453.4984434126`", ",", "645696.5517951354`", 
   ",", "660040.247789515`", ",", "674467.1748413497`", ",", 
   "688999.2466479985`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7632372443077416`*^9, 3.7632372756389556`*^9, 3.763237308559512*^9, 
   3.763237350206905*^9, {3.763237433754835*^9, 3.7632374480759077`*^9}, 
   3.763237745147885*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"FTC", ".", " ", "True"}], " ", "integral", " ", "value"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7631781323241796`*^9, 3.7631781365147867`*^9}, {
  3.7631784000048127`*^9, 3.763178405717789*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integral", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"f", "[", "y", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", "3"}], "}"}]}], "]"}], " ", "]"}], "/.", 
         RowBox[{"y", "\[Rule]", " ", "g2"}]}], "/.", 
        RowBox[{"x", "\[Rule]", " ", "0.3"}]}], " ", "/.", " ", 
       RowBox[{"g1", "\[Rule]", 
        RowBox[{"1", " ", "+", 
         FractionBox["1", "n"]}]}]}], "/.", 
      RowBox[{"g2", "\[Rule]", " ", "1"}]}], "//", "N"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "500", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7631778802453957`*^9, 3.7631779427920837`*^9}, {
  3.7631779797811613`*^9, 3.7631780040191016`*^9}, {3.7631781162341747`*^9, 
  3.7631781310319233`*^9}, {3.763178476667688*^9, 3.763178476878583*^9}, {
  3.763178613991289*^9, 3.7631786164733315`*^9}, {3.7631789575614824`*^9, 
  3.763179019320566*^9}, {3.7632405475492954`*^9, 3.7632405476270933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.0682071492617964`"}], ",", 
   RowBox[{"-", "28.13407422045546`"}], ",", 
   RowBox[{"-", "71.04821740962632`"}], ",", 
   RowBox[{"-", "80.22139205596011`"}], ",", 
   RowBox[{"-", "62.396438405693424`"}], ",", 
   RowBox[{"-", "39.272389811352326`"}], ",", 
   RowBox[{"-", "21.57075502474909`"}], ",", 
   RowBox[{"-", "10.775071940264382`"}], ",", 
   RowBox[{"-", "5.018877913264382`"}], ",", 
   RowBox[{"-", "2.2156058254489555`"}], ",", 
   RowBox[{"-", "0.9374236389004378`"}], ",", 
   RowBox[{"-", "0.3831944593253951`"}], ",", 
   RowBox[{"-", "0.1522382063526099`"}], ",", 
   RowBox[{"-", "0.05904939511872634`"}], ",", 
   RowBox[{"-", "0.022440206412764518`"}], ",", 
   RowBox[{"-", "0.008378669360417325`"}], ",", 
   RowBox[{"-", "0.003080655032349989`"}], ",", 
   RowBox[{"-", "0.001117470719900233`"}], ",", 
   RowBox[{"-", "0.0004005181749414057`"}], ",", 
   RowBox[{"-", "0.00014202390261729158`"}], ",", 
   RowBox[{"-", "0.000049880197407347634`"}], ",", 
   RowBox[{"-", "0.000017367113791202194`"}], ",", 
   RowBox[{"-", "5.999414245003264`*^-6"}], ",", 
   RowBox[{"-", "2.057663597446358`*^-6"}], ",", 
   RowBox[{"-", "7.011135369104079`*^-7"}], ",", 
   RowBox[{"-", "2.3745575026366531`*^-7"}], ",", 
   RowBox[{"-", "7.99764479553643`*^-8"}], ",", 
   RowBox[{"-", "2.6798361403982212`*^-8"}], ",", 
   RowBox[{"-", "8.936818809359058`*^-9"}], ",", 
   RowBox[{"-", "2.9670928944586398`*^-9"}], ",", 
   RowBox[{"-", "9.81031641735044`*^-10"}], ",", 
   RowBox[{"-", "3.2311416889846436`*^-10"}], ",", 
   RowBox[{"-", "1.060367454300578`*^-10"}], ",", 
   RowBox[{"-", "3.4680126730659775`*^-11"}], ",", 
   RowBox[{"-", "1.1306202086518403`*^-11"}], ",", 
   RowBox[{"-", "3.674894314652173`*^-12"}], ",", 
   RowBox[{"-", "1.19107333390962`*^-12"}], ",", 
   RowBox[{"-", "3.85003925182158`*^-13"}], ",", 
   RowBox[{"-", "1.2413290137680412`*^-13"}], ",", 
   RowBox[{"-", "3.9926478602636976`*^-14"}], ",", 
   RowBox[{"-", "1.2812691934571331`*^-14"}], ",", 
   RowBox[{"-", "4.102740451545661`*^-15"}], ",", 
   RowBox[{"-", "1.3110143962437956`*^-15"}], ",", 
   RowBox[{"-", "4.1810263804702272`*^-16"}], ",", 
   RowBox[{"-", "1.330882600232086`*^-16"}], ",", 
   RowBox[{"-", "4.228776120993362`*^-17"}], ",", 
   RowBox[{"-", "1.3413497884309428`*^-17"}], ",", 
   RowBox[{"-", "4.247700547356907`*^-18"}], ",", 
   RowBox[{"-", "1.343013266992795`*^-18"}], ",", 
   RowBox[{"-", "4.239840192792363`*^-19"}], ",", 
   RowBox[{"-", "1.3365584349415614`*^-19"}], ",", 
   RowBox[{"-", "4.207466107862001`*^-20"}], ",", 
   RowBox[{"-", "1.3227293691439876`*^-20"}], ",", 
   RowBox[{"-", "4.15299305834789`*^-21"}], ",", 
   RowBox[{"-", "1.302303346432513`*^-21"}], ",", 
   RowBox[{"-", "4.0789051445957147`*^-22"}], ",", 
   RowBox[{"-", "1.276069247289191`*^-22"}], ",", 
   RowBox[{"-", "3.987693450105058`*^-23"}], ",", 
   RowBox[{"-", "1.244809660315423`*^-23"}], ",", 
   RowBox[{"-", "3.881805001202256`*^-24"}], ",", 
   RowBox[{"-", "1.2092864233015189`*^-24"}], ",", 
   RowBox[{"-", "3.7636021109109436`*^-25"}], ",", 
   RowBox[{"-", "1.1702292860387867`*^-25"}], ",", 
   RowBox[{"-", "3.635331062385223`*^-26"}], ",", 
   RowBox[{"-", "1.1283273544860556`*^-26"}], ",", 
   RowBox[{"-", "3.499099038575047`*^-27"}], ",", 
   RowBox[{"-", "1.0842229692138229`*^-27"}], ",", 
   RowBox[{"-", "3.356858207135622`*^-28"}], ",", 
   RowBox[{"-", "1.0385076780692743`*^-28"}], ",", 
   RowBox[{"-", "3.210395908394456`*^-29"}], ",", 
   RowBox[{"-", "9.917199796078579`*^-30"}], ",", 
   RowBox[{"-", "3.0613299578146936`*^-30"}], ",", 
   RowBox[{"-", "9.4434453675558`*^-31"}], ",", 
   RowBox[{"-", "2.911108153719231`*^-31"}], ",", 
   RowBox[{"-", "8.968125868629587`*^-32"}], ",", 
   RowBox[{"-", "2.7610111690275613`*^-32"}], ",", 
   RowBox[{"-", "8.495033028452418`*^-33"}], ",", 
   RowBox[{"-", "2.6121580970979143`*^-33"}], ",", 
   RowBox[{"-", "8.027458890305674`*^-34"}], ",", 
   RowBox[{"-", "2.4655140125503135`*^-34"}], ",", 
   RowBox[{"-", "7.568222236084192`*^-35"}], ",", 
   RowBox[{"-", "2.3218989953922307`*^-35"}], ",", 
   RowBox[{"-", "7.119698864578403`*^-36"}], ",", 
   RowBox[{"-", "2.1819981489934895`*^-36"}], ",", 
   RowBox[{"-", "6.683854361578533`*^-37"}], ",", 
   RowBox[{"-", "2.0463722182692596`*^-37"}], ",", 
   RowBox[{"-", "6.262278228574594`*^-38"}], ",", 
   RowBox[{"-", "1.9154684831852697`*^-38"}], ",", 
   RowBox[{"-", "5.8562184427245705`*^-39"}], ",", 
   RowBox[{"-", "1.7896316641449468`*^-39"}], ",", 
   RowBox[{"-", "5.4666157035326614`*^-40"}], ",", 
   RowBox[{"-", "1.6691146300106539`*^-40"}], ",", 
   RowBox[{"-", "5.094136781855923`*^-41"}], ",", 
   RowBox[{"-", "1.5540887467075023`*^-41"}], ",", 
   RowBox[{"-", "4.739206525509078`*^-42"}], ",", 
   RowBox[{"-", "1.4446537449687408`*^-42"}], ",", 
   RowBox[{"-", "4.402038194315082`*^-43"}], ",", 
   RowBox[{"-", "1.3408470202976454`*^-43"}], ",", 
   RowBox[{"-", "4.082661897607188`*^-44"}], ",", 
   RowBox[{"-", "1.242652307191209`*^-44"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7631779554825706`*^9, 3.763178004281951*^9}, {
   3.7631781181182957`*^9, 3.763178123111046*^9}, 3.763178177544984*^9, 
   3.763178286768136*^9, 3.763178321330331*^9, {3.763178457352528*^9, 
   3.7631784772213683`*^9}, 3.7631786169688654`*^9, 3.763178817506524*^9, 
   3.7631789019166856`*^9, {3.763178958519901*^9, 3.763179019819277*^9}, 
   3.7632342065563374`*^9, 3.76323438449724*^9, 3.7632352816754594`*^9, 
   3.763235356804776*^9, 3.76323543082812*^9, {3.76324054789266*^9, 
   3.763240564097746*^9}, 3.763240871614238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Error", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"error", " ", "=", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"integral", "-", "riemannsum"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7631784137903075`*^9, 3.7631784246794353`*^9}, {
  3.7631786207940016`*^9, 3.7631786283761215`*^9}, {3.7631789347443085`*^9, 
  3.7631789384688463`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.8671167066876744`", ",", "6.436567921542903`", ",", 
   "11.989979114165422`", ",", "10.645976539477559`", ",", 
   "6.984468758076481`", ",", "3.8753078316769347`", ",", 
   "1.9311921237624468`", ",", "0.8927002669940869`", ",", 
   "0.39028299058258664`", ",", "0.1634314814517106`", ",", 
   "0.0661235637025368`", ",", "0.026011419705091243`", ",", 
   "0.009995116193274978`", ",", "0.003765145824761326`", ",", 
   "0.0013943256288629323`", ",", "0.0005087549605811009`", ",", 
   "0.00018323398945568805`", ",", "0.00006523910485509523`", ",", 
   "0.000022991012647771865`", ",", "8.028135478399642`*^-6", ",", 
   "2.780147482759143`*^-6", ",", "9.555436996492675`*^-7", ",", 
   "3.261829706105297`*^-7", ",", "1.1064419981510719`*^-7", ",", 
   "3.731817507893332`*^-8", ",", "1.2519969577230086`*^-8", ",", 
   "4.177508536128248`*^-9", ",", "1.39104447738762`*^-9", ",", 
   "4.605665666382946`*^-10", ",", "1.5044337936037175`*^-10", ",", 
   "4.6116642681217205`*^-11", ",", "1.019690155069101`*^-11", ",", 
   "2.279805813807714`*^-13", ",", "4.538443699089198`*^-12", ",", 
   "1.924574093287567`*^-12", ",", "8.843444722178249`*^-12", ",", 
   "8.18990462770096`*^-12", ",", "4.143899380812927`*^-12", ",", 
   "2.4818402418363057`*^-12", ",", "1.8873270459413245`*^-12", ",", 
   "2.708481442384409`*^-12", ",", "2.031472211422648`*^-11", ",", 
   "7.499945235491978`*^-12", ",", "5.8249155112132075`*^-12", ",", 
   "4.665479024688457`*^-12", ",", "1.108404891651712`*^-12", ",", 
   "2.3207262125354233`*^-14", ",", "2.140564767771414`*^-12", ",", 
   "1.8739931371921516`*^-11", ",", "2.4533728972616535`*^-12", ",", 
   "6.2311478408666385`*^-12", ",", "1.1506833591233288`*^-11", ",", 
   "1.814388286579666`*^-11", ",", "1.3123174079446185`*^-11", ",", 
   "6.551698787770081`*^-12", ",", "3.4031964887114164`*^-12", ",", 
   "4.232498471714872`*^-12", ",", "6.167798595526036`*^-12", ",", 
   "1.705982916869441`*^-11", ",", "1.0840012374900268`*^-11", ",", 
   "1.879110427729354`*^-12", ",", "7.45620837640461`*^-12", ",", 
   "3.0025321545330166`*^-11", ",", "2.0393990254726637`*^-11", ",", 
   "6.094332584445095`*^-12", ",", "2.873019331693659`*^-12", ",", 
   "1.2729774414598085`*^-12", ",", "2.966250981404465`*^-11", ",", 
   "8.616943008931977`*^-12", ",", "1.503392464780342`*^-11", ",", 
   "9.724562216896589`*^-12", ",", "1.9791232559435616`*^-11", ",", 
   "4.976096670167666`*^-12", ",", "3.282343077205589`*^-11", ",", 
   "3.8546235453790066`*^-11", ",", "8.607082125158534`*^-12", ",", 
   "3.5657938691223423`*^-12", ",", "4.377407492509804`*^-12", ",", 
   "2.4891471103081813`*^-11", ",", "1.7868490716481063`*^-11", ",", 
   "3.4735528557014323`*^-11", ",", "2.876605379488367`*^-12", ",", 
   "3.0216134622962474`*^-11", ",", "1.9284794043652546`*^-11", ",", 
   "1.7231222070175243`*^-11", ",", "3.3023702141570034`*^-11", ",", 
   "1.3019636802394566`*^-11", ",", "3.058344544335091`*^-11", ",", 
   "5.750625652215599`*^-11", ",", "4.1702812246633415`*^-11", ",", 
   "3.249660983943063`*^-11", ",", "1.2260596806174599`*^-10", ",", 
   "4.6855112161687045`*^-11", ",", "3.579704488317645`*^-11", ",", 
   "1.3778725288467878`*^-10", ",", "2.211358624509081`*^-11", ",", 
   "1.994857482463971`*^-11", ",", "1.999409359034347`*^-11", ",", 
   "3.358313790214615`*^-11", ",", "3.480726378994957`*^-11"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7631786288016624`*^9, 3.7631788198371906`*^9, 3.763178904858601*^9, {
   3.76317893548989*^9, 3.763178938725696*^9}, 3.763179031507577*^9, {
   3.7632342156012096`*^9, 3.7632342453810368`*^9}, 3.763234386249709*^9, 
   3.7632352832295947`*^9, 3.763235357931826*^9, 3.7632354348532605`*^9, 
   3.763240868831023*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", " ", "=", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["1", 
       SuperscriptBox["n", "2"]], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "200", ",", "5"}], "}"}]}], "]"}], " ", "//",
    "N"}]}]], "Input",
 CellChangeTimes->{{3.763167980565239*^9, 3.7631680365199056`*^9}, {
  3.763168546661588*^9, 3.763168547739028*^9}, {3.763168635245246*^9, 
  3.7631686378703103`*^9}, {3.7631686959754333`*^9, 3.763168707289172*^9}, {
  3.763168822213455*^9, 3.763168835129114*^9}, {3.7631698961013985`*^9, 
  3.7631699279855223`*^9}, {3.7631700378761253`*^9, 3.76317003871854*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.027777777777777776`", ",", "0.008264462809917356`", ",", 
   "0.00390625`", ",", "0.0022675736961451248`", ",", 
   "0.0014792899408284023`", ",", "0.001040582726326743`", ",", 
   "0.0007716049382716049`", ",", "0.000594883997620464`", ",", 
   "0.0004725897920604915`", ",", "0.00038446751249519417`", ",", 
   "0.00031887755102040814`", ",", "0.0002687449610319806`", ",", 
   "0.0002295684113865932`", ",", "0.00019837333862328903`", ",", 
   "0.00017313019390581717`", ",", "0.00015241579027587258`", ",", 
   "0.00013520822065981613`", ",", "0.00012075836251660427`", ",", 
   "0.00010850694444444444`", ",", "0.00009802960494069208`", ",", 
   "0.000088999644001424`", ",", "0.00008116224332440549`", ",", 
   "0.00007431629013079666`", ",", "0.00006830134553650706`", ",", 
   "0.00006298815822625347`", ",", "0.000058271662490530857`", ",", 
   "0.00005406574394463668`", ",", "0.0000502992807202857`", ",", 
   "0.000046913116907487336`", ",", "0.00004385772553835358`", ",", 
   "0.0000410913872452334`", ",", "0.000038578758535550326`", ",", 
   "0.00003628973726230222`", ",", "0.00003419855682090216`", ",", 
   "0.00003228305785123967`", ",", "0.000030524098775983637`", ",", 
   "0.000028905075731298415`", ",", "0.000027411529289219047`", ",", 
   "0.000026030820491461892`"}], "}"}]], "Output",
 CellChangeTimes->{{3.763168006076364*^9, 3.7631680372338953`*^9}, 
   3.7631680988958797`*^9, 3.7631685494983797`*^9, {3.7631686385396643`*^9, 
   3.7631686643354125`*^9}, {3.763168696401187*^9, 3.7631687077469163`*^9}, {
   3.763168823499443*^9, 3.763168835288024*^9}, {3.763169897121562*^9, 
   3.763169928226371*^9}, 3.763170039097337*^9, 3.763170289132036*^9, 
   3.763170347472499*^9, {3.763178162386809*^9, 3.7631781791740475`*^9}, 
   3.7631782900236373`*^9, 3.7631788226595707`*^9, 3.763179033896225*^9, 
   3.7632342235451927`*^9, 3.763234394434934*^9, 3.763235285107562*^9, 
   3.763235359162861*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "You", " ", "can", " ", "have", " ", "faster", " ", "growth", " ", "of", 
    " ", "error", " ", 
    RowBox[{"(", "yellow", ")"}], " ", "than", " ", "the", " ", "integral", 
    " ", "itself", " ", 
    RowBox[{"(", "blue", ")"}]}], " ", ",", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "your", " ", "h", " ", "grows", " ", "too", " ", "slow", " ", 
     RowBox[{"e", ".", "g", ".", " ", 
      RowBox[{"h", "[", "n", "]"}]}]}], " ", "=", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", " ", "+", " ", "n"}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7631790450828133`*^9, 3.7631790678017755`*^9}, {
   3.763179142309066*^9, 3.763179149479985*^9}, 3.763234332081094*^9, {
   3.763234447625416*^9, 3.7632344561173887`*^9}, {3.7632405810437317`*^9, 
   3.7632405927803535`*^9}, {3.7632406984020805`*^9, 3.7632406987458315`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Abs", "[", "integral", "]"}], ",", "error"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763173446723364*^9, 3.7631734709684677`*^9}, {
   3.7631735042463913`*^9, 3.7631735090726547`*^9}, {3.7631735795572386`*^9, 
   3.763173592617733*^9}, {3.76317836161427*^9, 3.763178363320167*^9}, {
   3.7631786358305955`*^9, 3.763178648591832*^9}, {3.7631789425684333`*^9, 
   3.763178943785735*^9}, {3.763237871085634*^9, 3.7632378744601145`*^9}, 
   3.7632405585460467`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1VH00lAkXnwwG8+F5Jqawan1/zZIp5nkeOXP1lrMbKX1uksWyLNKKUmzR
vLOpN7UGtWf1UihaXy1WYchds/K1arE7u2uVLbI2+5bysUS83jPnvefcc/+4
5977u/d377UKP7wzUofFYkUs6//s/6W0770VvPlh2Qv69eIm11HZ29P2raqu
NzIuuzLlWc5L2Y2irU2hQ2zQ+mdkPo3/vDgyrgPrL/znbx+ck/luu6bcb7Yk
03nb+TW3fEHGsUsMOV8xLdsXJKk6Yr0ki3vMDz5m/FSWWO4lqyligb3G/+FV
QXOLNv8KaGjwFNyxeN4i2lOnqo7VAemnv9nunV9o8Zem3Rl2ZcPWfaIBTaMe
nizobxI9ZoNV9mpBnjsfAzPdXXQ/0wXv0fAu9zghlqp+FnW9pQduKUlfvtgl
wrXvbqNFZXpgOWRr6rDNHLX49SFtXVVO5p41mJL2+tvYMn34yPng+4UeVnhG
GcukruVAl4DHDfW1QXGtrr7nRQ48uum5OyTYDpXDiamb/ubAUqXB72SyA1ZX
Hc51PWAA4lcfTOtedsKONu/kpEYD6L2hL+yvd8GJ2t43J00NgePgYWs99A7O
ibM/LY0zhHoYu7RXdx1q52cIZ9wPVSrN3bHHfOJZLmEEZ0r6XJ0kEsxSsOuH
DhpBWE2Ynb3ferTZelkTdNMIjpsZnPgqYgOuXezppiaM4Icc16HCNA+8ouHO
lXhwYcbnpZgo8MQgF+W7949zIdzyQmfr91KM7ai/29/Ahb1Ou+Si7TT21v80
9cssFx7KsjYavuWNM/yG0wsePKivPfYkcA2DbZPGu4ISeHBuQj70Yo5BLb88
yLfP2Hk+kcbmdua54zAPVsd6fy/JoPGmj7rtnhkf+jd3uOZ5MKjhn42eC+AD
2/JJkKaeQf4RiVe/nA/Pz6tLJhYZDKi4uCWyjg/yLe0ByUUMvuPturtllA/X
HdsNiwsoJP8yEU2IBKD4eSiiMZ/Gf+xe8NTzFUDoYEtN/CMar3cWH+MmCUD8
cWEFrGIwblNWs6BQACPyvtPuGV54eyLLzbxHAKYPPHJeRsjwqGrHRmpWAHXl
zdZ1jxjU7qcxJFgqRH61FN6yqLjT52cMM84GMV0qBpdYgUuhScbAnx1UiHto
fO+rqjK7fxvDNASy7dfRWL7ROtpRbQzvmzyKUaoo5K1sTf7kT2Mwj7/MTxfQ
OLnYuF/OIUCpbprfjTTuiHPunjYj4PMf6XJ2NIP78yoLTcUEvEq/hG7rGNzm
e69txJsAeYrthq4HNJ5wap+L3E5A2eXB4b3dFJ6XRA5eCSVg8osn2+NlNPLj
hONnEwi45LTyCwHLC8cHHRRucgJm1ZXV9FUaLVYPjymzCYibUB4uYCjU3h8B
XqqIH4rzKTzqlJuTXUPABxlT6b/10Vhis3VgQysBp67r+ofkLPNBOr7M6yXA
WkL9hR96IX1fde3e7wSwNvs6q7wpVJnn5je8IMCSrWpwS6HRyifq3NHF5fgG
57bacQo7NbZT8zwS1pNHepkDNMr2TQUHWJDQahs+F3iDwlE36/XxTiR4Hyg7
i/oMWpYvaIKlJLz6bmDlAxsKgzlFeRZbSEj77FZU2WspCsewtXwnCW6FT9Up
y/U2SvwzBKEk5M7yWWQwg04BNiZbDpEQe+fDc0oHBhOrb53bkUJCt17hiasx
FG5OP/7GPYMEzlq1OrWFQu3/IeF2Wt1HO0wpjMwv0Um9RkLWyZWZvOX+5SPh
F0YqSGg6qdi8RFH4Y+SMoWMDCcPpivtT5RQaFc+G+LaR0MnaqW7voNC3+c8Y
6CVhMcH8EFhT2CfL1l31kISB5jHHDILG0ISD811jJIQ/Dov+w4PCmX9VrTo4
RUJN08jXPrlSJMTuFveXlvFHjQsUo1K8G2z37RquEOBUz5MQewqTokvvbhcJ
IUInVZnQ54mfaCZbw6yE8KvXdFl1hxS/bClN3iMWQkH8QP4VPoXDTW/SXaRC
cI6q8vz8G0+cvc45NeIjhIruzMxnZymc9XtqcNpfCCYc0PUrpjAmafb2in1C
GC9V3KgrotDFUmQWFSYE2193KSYtKdT+ZyGw6I8lnSYU/hd7Qc9r
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.16939590853406716`, -108.75239584764824`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.09594104554141858, 
   4.605170185988092}, {-106.95656749747651`, 4.384790213170155}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-108.22149937072015`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "47"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-85.19564844077969, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "37"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-62.16979751083923, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "27"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-39.14394658089878, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-105.9189142777261, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-103.61632918473205`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-101.31374409173802`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-99.01115899874397, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-96.70857390574992, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-94.40598881275588, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-92.10340371976183, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-89.80081862676778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-87.49823353377374, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-82.89306334778564, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-80.5904782547916, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-78.28789316179756, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-75.9853080688035, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-73.68272297580947, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-71.38013788281542, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-69.07755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-66.77496769682732, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-64.47238260383328, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-59.86721241784519, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-57.564627324851145`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-55.262042231857095`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-52.95945713886305, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-50.65687204586901, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-48.35428695287496, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-43.74911676688687, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-41.44653167389282, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-36.841361487904734`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-32.23619130191664, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.7631734542680373`*^9, 3.763173471551132*^9}, 
   3.763173509395438*^9, {3.7631735882072644`*^9, 3.7631735929785275`*^9}, {
   3.7631781637883496`*^9, 3.763178180682204*^9}, 3.7631782945655155`*^9, {
   3.7631783277487345`*^9, 3.763178363634987*^9}, {3.7631784635259356`*^9, 
   3.7631784934790154`*^9}, 3.763178649049853*^9, 3.7631788244175773`*^9, 
   3.7631789083845644`*^9, 3.7631789441741734`*^9, 3.7631790356182213`*^9, {
   3.763234227145056*^9, 3.76323425257447*^9}, 3.7632343967969255`*^9, 
   3.7632352863480654`*^9, 3.763235361044452*^9, 3.7632354384631867`*^9, 
   3.7632378748054028`*^9, {3.763240552731411*^9, 3.7632405755473967`*^9}, {
   3.7632408658338957`*^9, 3.763240874990014*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7632358144861007`*^9, 3.7632358173716073`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"(", 
   RowBox[{"2", "nd", " ", "derivative"}], ")"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.763244169868701*^9, 3.7632441890441313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "y", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7632441930978713`*^9, 3.7632441932381306`*^9}, 
   3.763244279824479*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"g1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", "n"}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}]}], 
    ")"}]}], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{
  3.7632441935974216`*^9, {3.7632442805746307`*^9, 3.7632442933686485`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox["n"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "n", " ", 
           RowBox[{"(", 
            RowBox[{"g1", "-", "x"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
        SuperscriptBox["n", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "n", " ", 
           RowBox[{"(", 
            RowBox[{"g1", "-", "x"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
        SuperscriptBox["n", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{"g1", "-", "x"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], " ", "n", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", "n"}],
           "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}]}], 
      ")"}]}], 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], "/.", 
   RowBox[{"g1", "\[Rule]", "1"}]}], "  ", "/.", " ", 
  RowBox[{"g2", "\[Rule]", 
   RowBox[{"1", "+", 
    FractionBox["1", "n"]}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1", "n"], "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1", "n"], "-", "y"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "n"], "-", "y"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", "n"}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}]}], 
    ")"}]}], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{3.763244371853935*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SqrtBox["n"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "n", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
       SuperscriptBox["n", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "n", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "n", " ", 
           RowBox[{"(", 
            RowBox[{"g1", "-", "x"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", "n"}], 
         "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], ")"}]}]}], 
     ")"}]}], 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]], "/.", 
  RowBox[{"y", "\[Rule]", "g2"}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"g1", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"g2", "-", "x"}], ")"}]}]}], ")"}]}], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{3.7632445046184435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           SqrtBox["n"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "n", " ", 
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", "n", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "n", " ", 
                 RowBox[{"(", 
                  RowBox[{"g1", "-", "x"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "y"}], ")"}]}], "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", "n", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}]], " ", 
              SuperscriptBox["n", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"g1", "-", "x"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x"}], "+", "y"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"g1", "-", "x"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "y"}], ")"}]}]]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]]}], " ", 
                 "n"}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]], " ", 
                 SuperscriptBox["n", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "x"}], "+", "y"}], ")"}], "2"]}]}], 
               ")"}]}]}], ")"}]}], 
          SqrtBox[
           RowBox[{"2", " ", "\[Pi]"}]]], "/.", 
         RowBox[{"g1", "\[Rule]", "1"}]}], "  ", "/.", " ", 
        RowBox[{"g2", "\[Rule]", 
         RowBox[{"1", "+", 
          FractionBox["1", "n"]}]}]}], ",", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           SqrtBox["n"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", "n", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", "n", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
              SuperscriptBox["n", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"g1", "-", "x"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"g2", "-", "x"}], ")"}]}]}], ")"}]}], 
          SqrtBox[
           RowBox[{"2", " ", "\[Pi]"}]]], "/.", 
         RowBox[{"g1", "\[Rule]", "1"}]}], "  ", "/.", " ", 
        RowBox[{"g2", "\[Rule]", 
         RowBox[{"1", "+", 
          FractionBox["1", "n"]}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "30"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "30", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.763244206399617*^9, 3.7632442976817784`*^9, {3.7632443539520884`*^9, 
   3.763244408819487*^9}, {3.7632444642898245`*^9, 3.7632445110424566`*^9}, {
   3.763244595533249*^9, 3.763244672541195*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 26, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 30, 1}}, Typeset`size$$ = {314., {66., 70.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$6643$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$6643$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[{
         ReplaceAll[
          ReplaceAll[
          Sqrt[$CellContext`n$$] ((-4) 
             E^((-2) $CellContext`n$$ ($CellContext`g1 - $CellContext`x) \
($CellContext`g2 - $CellContext`y) - (1/
                2) $CellContext`n$$ (-$CellContext`x + $CellContext`y)^2) \
$CellContext`n$$^2 ($CellContext`g1 - $CellContext`x)^2 + 
            4 E^((-2) $CellContext`n$$ ($CellContext`g1 - $CellContext`x) \
($CellContext`g2 - $CellContext`y) - (1/
                2) $CellContext`n$$ (-$CellContext`x + $CellContext`y)^2) \
$CellContext`n$$^2 ($CellContext`g1 - $CellContext`x) (-$CellContext`x + \
$CellContext`y) + (1 - 
              E^((-2) $CellContext`n$$ ($CellContext`g1 - $CellContext`x) \
($CellContext`g2 - $CellContext`y))) ((-
                E^((-(1/
                    2)) $CellContext`n$$ (-$CellContext`x + \
$CellContext`y)^2)) $CellContext`n$$ + 
              E^((-(1/2)) $CellContext`n$$ (-$CellContext`x + \
$CellContext`y)^2) $CellContext`n$$^2 (-$CellContext`x + $CellContext`y)^2))/
           Sqrt[2 Pi], $CellContext`g1 -> 1], $CellContext`g2 -> 
          1 + 1/$CellContext`n$$], 
         ReplaceAll[
          ReplaceAll[
          Sqrt[$CellContext`n$$] ((-4) 
             E^((-(1/2)) $CellContext`n$$ ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^2 ($CellContext`g1 - $CellContext`x)^2 + 
            4 E^((-(1/
                 2)) $CellContext`n$$ ($CellContext`g2 - $CellContext`x)^2) \
$CellContext`n$$^2 ($CellContext`g1 - $CellContext`x) ($CellContext`g2 - \
$CellContext`x))/Sqrt[2 Pi], $CellContext`g1 -> 1], $CellContext`g2 -> 
          1 + 1/$CellContext`n$$]}, {$CellContext`x, -3, 
         1}, {$CellContext`y, -3, 1}, 
        PlotRange -> {{-3, 1}, {-3, 1}, {-1, 30}}], 
      "Specifications" :> {{$CellContext`n$$, 1, 30, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{365., {112., 118.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.763244212106945*^9, 3.7632442997627435`*^9, 3.763244364552531*^9, {
   3.7632444048904686`*^9, 3.763244409037841*^9}, {3.763244474680781*^9, 
   3.7632445113037405`*^9}, 3.7632445980809884`*^9, {3.7632446478659906`*^9, 
   3.7632446729629927`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "rd", " ", "derivative"}], ")"}], " ", "h"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["n", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], " ", "is", " ", "just", " ", "enough",
      " ", "to", " ", "ensure", " ", 
     RowBox[{"convergence", ".", " ", "This"}], " ", "h", " ", "makes", " ", 
     "rp", " ", 
     RowBox[{"(", "blue", ")"}], " ", "the", " ", "same", " ", "order", " ", 
     "as", " ", "the", " ", "dominant", " ", "error", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"in", " ", "the", " ", "yellow"}], ")"}], ".", " ", 
      "Multiplied"}], " ", "3", "rd", " ", "derivative", " ", "by", " ", 
     SuperscriptBox["h", "2"]}], "=", " ", 
    FractionBox["1", "n"]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7632303067775855`*^9, 3.763230340080985*^9}, {
   3.7632376556276307`*^9, 3.763237693434641*^9}, 3.7632377528207483`*^9, {
   3.7632441596126056`*^9, 3.7632441644656105`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", "y", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "3"}], "}"}]}], "]"}], "]"}], "/.", " ", 
  RowBox[{"y", "\[Rule]", " ", "g2"}]}]], "Input",
 CellChangeTimes->{{3.7632294966362305`*^9, 3.7632295348632307`*^9}, 
   3.7632295903739557`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]], 
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"g2", "-", "x"}], ")"}], "2"]}]]}], " ", "n"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g2", "-", "x"}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"g1", "-", "x"}], ")"}]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
      SuperscriptBox["n", "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "3"]}], "+", 
     RowBox[{"12", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
      SuperscriptBox["n", "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"g2", "-", "x"}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7632295109203696`*^9, 3.7632295351288104`*^9}, 
   3.763229591218068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], 
           RowBox[{
            SqrtBox["n"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]]}], " ", "n"}], 
                 "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
                  SuperscriptBox["n", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"g1", "-", "x"}], ")"}]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "2"]}], " ", "n", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
               SuperscriptBox["n", "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"g1", "-", "x"}], ")"}], "3"]}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "2"]}], " ", "n", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
               SuperscriptBox["n", "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"g2", "-", "x"}], ")"}]}]}], ")"}]}]}], "*", 
          FractionBox["1", "n"]}], "/.", 
         RowBox[{"g1", "\[Rule]", "1"}]}], "  ", "/.", " ", 
        RowBox[{"g2", "\[Rule]", 
         RowBox[{"1", "+", 
          FractionBox["1", "n"]}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g2", "-", "x"}], ")"}], "2"]}]]}], " ", 
          SuperscriptBox["n", 
           RowBox[{"3", "/", "2"}]], " ", 
          SqrtBox[
           FractionBox["2", "\[Pi]"]], " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}]}], "/.", 
         RowBox[{"g1", "\[Rule]", "1"}]}], "/.", 
        RowBox[{"g2", "\[Rule]", 
         RowBox[{"1", "+", 
          FractionBox["1", "n"]}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7631576467126646`*^9, 3.763157918116941*^9}, {
  3.763158020632128*^9, 3.763158031426931*^9}, {3.763158430185875*^9, 
  3.763158555384037*^9}, {3.7631711608926764`*^9, 3.7631711629445143`*^9}, {
  3.763172209704997*^9, 3.7631722100187845`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 88, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 100, 1}}, Typeset`size$$ = {
    360., {109., 114.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$182851$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$182851$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         ReplaceAll[
          
          ReplaceAll[(
            Sqrt[$CellContext`n$$] (((((-6) $CellContext`n$$) ((-
                   E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$ + (
                   E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^2) ($CellContext`g2 - $CellContext`x)^2)) \
($CellContext`g1 - $CellContext`x) - ((8 
                E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^3) ($CellContext`g1 - $CellContext`x)^3 + \
(((12 E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^3) ($CellContext`g1 - $CellContext`x)^2) \
($CellContext`g2 - $CellContext`x))/Sqrt[2 Pi])) (
            1/$CellContext`n$$), $CellContext`g1 -> 1], $CellContext`g2 -> 
          1 + 1/$CellContext`n$$], 
         ReplaceAll[
          
          ReplaceAll[(((-
              E^(((-(1/
                   2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^(3/2)) 
            Sqrt[2/Pi]) ($CellContext`g1 - $CellContext`x), $CellContext`g1 -> 
           1], $CellContext`g2 -> 
          1 + 1/$CellContext`n$$]}, {$CellContext`x, -3, 1}, PlotRange -> 
        Full], "Specifications" :> {{$CellContext`n$$, 1, 100, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {156., 162.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7631576802054434`*^9, 3.7631579186646423`*^9}, {
   3.7631580219223967`*^9, 3.7631580323284054`*^9}, {3.763158468008173*^9, 
   3.763158482151055*^9}, {3.7631585156788197`*^9, 3.763158556418442*^9}, 
   3.7631711636690855`*^9, 3.763172210755391*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SqrtBox[
          RowBox[{"2", " ", "\[Pi]"}]]], 
        SqrtBox["n"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], " ", "n", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "2"]}], " ", "n", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"g2", "-", "x"}], ")"}], "2"]}]]}], " ", "n"}], 
             "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], " ", "n", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"g2", "-", "x"}], ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"g1", "-", "x"}], ")"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g1", "-", "x"}], ")"}], "3"]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g1", "-", "x"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"g2", "-", "x"}], ")"}]}]}], ")"}], "*", 
        FractionBox["1", 
         SuperscriptBox["n", "2"]]}], "/.", 
       RowBox[{"g1", "\[Rule]", "1"}]}], "  ", "/.", " ", 
      RowBox[{"g2", "\[Rule]", 
       RowBox[{"1", "+", 
        FractionBox["1", "n"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7632517771353235`*^9, 3.763251797598999*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 2, 100, 1}}, Typeset`size$$ = {
    360., {109., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$20121$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$20121$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[
         ReplaceAll[(1/Sqrt[2 Pi]) 
          Sqrt[$CellContext`n$$] ((-6) $CellContext`n$$ ((-
               E^((-(1/
                   2)) $CellContext`n$$ ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$ + 
             E^((-(1/2)) $CellContext`n$$ ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^2 ($CellContext`g2 - $CellContext`x)^2) \
($CellContext`g1 - $CellContext`x) - 8 
           E^((-(1/2)) $CellContext`n$$ ($CellContext`g2 - $CellContext`x)^2) \
$CellContext`n$$^3 ($CellContext`g1 - $CellContext`x)^3 + 
           12 E^((-(1/
                2)) $CellContext`n$$ ($CellContext`g2 - $CellContext`x)^2) \
$CellContext`n$$^3 ($CellContext`g1 - $CellContext`x)^2 ($CellContext`g2 - \
$CellContext`x)) (1/$CellContext`n$$^2), $CellContext`g1 -> 
          1], $CellContext`g2 -> 1 + 1/$CellContext`n$$], {$CellContext`x, -3,
          1}, PlotRange -> Full], 
      "Specifications" :> {{$CellContext`n$$, 2, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {156., 162.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7632517828245125`*^9, 3.7632517981939707`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", "y", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "5"}], "}"}]}], "]"}], "]"}], "/.", " ", 
  RowBox[{"y", "\[Rule]", " ", "g2"}]}]], "Input",
 CellChangeTimes->{{3.7632296039236984`*^9, 3.763229604079933*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]], 
  RowBox[{
   SqrtBox["n"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "10"}], " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g2", "-", "x"}], ")"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g2", "-", "x"}], ")"}], "4"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"g1", "-", "x"}], ")"}]}], "-", 
     RowBox[{"40", " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"g2", "-", "x"}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g2", "-", "x"}], ")"}], "3"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "-", 
     RowBox[{"80", " ", 
      SuperscriptBox["n", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "n", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"g2", "-", "x"}], ")"}], "2"]}]]}], " ", "n"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"g2", "-", "x"}], ")"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "3"]}], "-", 
     RowBox[{"32", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
      SuperscriptBox["n", "5"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "5"]}], "+", 
     RowBox[{"80", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
      SuperscriptBox["n", "5"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"g1", "-", "x"}], ")"}], "4"], " ", 
      RowBox[{"(", 
       RowBox[{"g2", "-", "x"}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7632296043610415`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"h", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["n", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], " ", "is", " ", "just", " ", "enough",
      " ", "to", " ", "ensure", " ", "convergence"}]}], ",", " ", 
   RowBox[{
    RowBox[{"multiplying", " ", "5", "th", " ", "derivative", " ", "by", " ", 
     SuperscriptBox["h", 
      RowBox[{"4", " "}]]}], "=", " ", 
    RowBox[{"1", "/", 
     SuperscriptBox["n", "2"]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7632302523585014`*^9, 3.7632303016034355`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]]], 
          SqrtBox["n"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "10"}], " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "2"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "3"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "x"}], ")"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "x"}], ")"}], "4"]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"g1", "-", "x"}], ")"}]}], "-", 
            RowBox[{"40", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"g2", "-", "x"}], ")"}]}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "3"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "x"}], ")"}], "3"]}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g1", "-", "x"}], ")"}], "2"]}], "-", 
            RowBox[{"80", " ", 
             SuperscriptBox["n", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "n", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]]}], " ", "n"}], 
               "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["1", "2"]}], " ", "n", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
                SuperscriptBox["n", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"g2", "-", "x"}], ")"}], "2"]}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g1", "-", "x"}], ")"}], "3"]}], "-", 
            RowBox[{"32", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["1", "2"]}], " ", "n", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
             SuperscriptBox["n", "5"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g1", "-", "x"}], ")"}], "5"]}], "+", 
            RowBox[{"80", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["1", "2"]}], " ", "n", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"g2", "-", "x"}], ")"}], "2"]}]], " ", 
             SuperscriptBox["n", "5"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g1", "-", "x"}], ")"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"g2", "-", "x"}], ")"}]}]}], ")"}], "*", 
          FractionBox["1", 
           SuperscriptBox["n", "2"]]}], "/.", 
         RowBox[{"g1", "\[Rule]", "1"}]}], "  ", "/.", " ", 
        RowBox[{"g2", "\[Rule]", 
         RowBox[{"1", "+", 
          FractionBox["1", "n"]}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "n", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"g2", "-", "x"}], ")"}], "2"]}]]}], " ", 
          SuperscriptBox["n", 
           RowBox[{"3", "/", "2"}]], " ", 
          SqrtBox[
           FractionBox["2", "\[Pi]"]], " ", 
          RowBox[{"(", 
           RowBox[{"g1", "-", "x"}], ")"}]}], "/.", 
         RowBox[{"g1", "\[Rule]", "1"}]}], "/.", 
        RowBox[{"g2", "\[Rule]", 
         RowBox[{"1", "+", 
          FractionBox["1", "n"]}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7632296251769457`*^9, 3.763229638304535*^9}, {
  3.763229950463991*^9, 3.763229950760854*^9}, {3.763229999491561*^9, 
  3.763230068120844*^9}, {3.763234485397895*^9, 3.763234487463288*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 11, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 100, 1}}, Typeset`size$$ = {
    360., {109., 114.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$15068$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$15068$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         ReplaceAll[
          
          ReplaceAll[(((1/Sqrt[2 Pi]) 
             Sqrt[$CellContext`n$$]) ((((-10) $CellContext`n$$) ((3 
                  E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^2 - ((6 
                  E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^3) ($CellContext`g2 - $CellContext`x)^2 + \
(E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^4) ($CellContext`g2 - $CellContext`x)^4)) \
($CellContext`g1 - $CellContext`x) - ((
               40 $CellContext`n$$^2) (((3 
                  E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^2) ($CellContext`g2 - $CellContext`x) - (
                E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^3) ($CellContext`g2 - $CellContext`x)^3)) \
($CellContext`g1 - $CellContext`x)^2 - ((
               80 $CellContext`n$$^3) ((-
                 E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$ + (
                 E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^2) ($CellContext`g2 - $CellContext`x)^2)) \
($CellContext`g1 - $CellContext`x)^3 - ((32 
               E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^5) ($CellContext`g1 - $CellContext`x)^5 + \
(((80 E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^5) ($CellContext`g1 - $CellContext`x)^4) \
($CellContext`g2 - $CellContext`x))) (1/$CellContext`n$$^2), $CellContext`g1 -> 
           1], $CellContext`g2 -> 1 + 1/$CellContext`n$$], 
         ReplaceAll[
          
          ReplaceAll[(((-
              E^(((-(1/
                   2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^(3/2)) 
            Sqrt[2/Pi]) ($CellContext`g1 - $CellContext`x), $CellContext`g1 -> 
           1], $CellContext`g2 -> 
          1 + 1/$CellContext`n$$]}, {$CellContext`x, -3, 1}, PlotRange -> 
        Full], "Specifications" :> {{$CellContext`n$$, 1, 100, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {156., 162.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.763234488349618*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 91, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 300, 1}}, Typeset`size$$ = {
    360., {110., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$11990$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$11990$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         ReplaceAll[
          
          ReplaceAll[(((1/Sqrt[2 Pi]) 
             Sqrt[$CellContext`n$$]) ((((-10) $CellContext`n$$) ((3 
                  E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^2 - ((6 
                  E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^3) ($CellContext`g2 - $CellContext`x)^2 + \
(E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^4) ($CellContext`g2 - $CellContext`x)^4)) \
($CellContext`g1 - $CellContext`x) - ((
               40 $CellContext`n$$^2) (((3 
                  E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^2) ($CellContext`g2 - $CellContext`x) - (
                E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^3) ($CellContext`g2 - $CellContext`x)^3)) \
($CellContext`g1 - $CellContext`x)^2 - ((
               80 $CellContext`n$$^3) ((-
                 E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$ + (
                 E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2) $CellContext`n$$^2) ($CellContext`g2 - $CellContext`x)^2)) \
($CellContext`g1 - $CellContext`x)^3 - ((32 
               E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^5) ($CellContext`g1 - $CellContext`x)^5 + \
(((80 E^(((-(1/
                    2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^5) ($CellContext`g1 - $CellContext`x)^4) \
($CellContext`g2 - $CellContext`x))) (1/$CellContext`n$$^2), $CellContext`g1 -> 
           1], $CellContext`g2 -> 1 + 1/$CellContext`n$$], 
         ReplaceAll[
          
          ReplaceAll[(((-
              E^(((-(1/
                   2)) $CellContext`n$$) ($CellContext`g2 - \
$CellContext`x)^2)) $CellContext`n$$^(3/2)) 
            Sqrt[2/Pi]) ($CellContext`g1 - $CellContext`x), $CellContext`g1 -> 
           1], $CellContext`g2 -> 
          1 + 1/$CellContext`n$$]}, {$CellContext`x, -3, 1}, PlotRange -> 
        Full], "Specifications" :> {{$CellContext`n$$, 1, 300, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {157., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.7632304783576956`*^9, 3.7632304818269987`*^9}}]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 89, 1, 52, "Input"],
Cell[650, 23, 167, 3, 31, "Input"],
Cell[820, 28, 619, 20, 61, "Input"],
Cell[1442, 50, 181, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[1648, 57, 276, 7, 31, "Input"],
Cell[1927, 66, 1526, 51, 79, "Output"]
}, Open  ]],
Cell[3468, 120, 174, 3, 31, "Input"],
Cell[3645, 125, 1626, 53, 74, "Input"],
Cell[5274, 180, 284, 7, 31, "Input"],
Cell[5561, 189, 803, 26, 70, "Input"],
Cell[6367, 217, 195, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[6587, 225, 1455, 40, 31, "Input"],
Cell[8045, 267, 361156, 5894, 299, 345715, 5640, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369238, 6166, 743, 22, 31, "Input"],
Cell[369984, 6190, 98268, 1585, 264, "Output"]
}, Open  ]],
Cell[468267, 7778, 256, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[468548, 7788, 223, 6, 31, "Input"],
Cell[468774, 7796, 5901, 180, 113, "Output"]
}, Open  ]],
Cell[474690, 7979, 275, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[474990, 7989, 9432, 222, 221, "Input"],
Cell[484425, 8213, 4092, 73, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488554, 8291, 8814, 212, 220, "Input"],
Cell[497371, 8505, 4777, 88, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502185, 8598, 199, 6, 31, "Input"],
Cell[502387, 8606, 5879, 180, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508303, 8791, 6512, 188, 109, "Input"],
Cell[514818, 8981, 6937, 215, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521792, 9201, 9074, 235, 235, "Input"],
Cell[530869, 9438, 966, 17, 23, "Message"],
Cell[531838, 9457, 967, 17, 23, "Message"],
Cell[532808, 9476, 969, 17, 23, "Message"],
Cell[533780, 9495, 567, 12, 21, "Message"],
Cell[534350, 9509, 578, 11, 21, "Message"],
Cell[534931, 9522, 578, 11, 21, "Message"],
Cell[535512, 9535, 580, 11, 21, "Message"],
Cell[536095, 9548, 567, 12, 21, "Message"],
Cell[536665, 9562, 3168, 52, 92, "Output"]
}, Open  ]],
Cell[539848, 9617, 263, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[540136, 9627, 1159, 27, 53, "Input"],
Cell[541298, 9656, 5660, 110, 167, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546995, 9771, 391, 8, 52, "Input"],
Cell[547389, 9781, 3764, 59, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551190, 9845, 670, 15, 54, "Input"],
Cell[551863, 9862, 1981, 31, 72, "Output"]
}, Open  ]],
Cell[553859, 9896, 900, 19, 31, "Input"],
Cell[CellGroupData[{
Cell[554784, 9919, 559, 11, 31, "Input"],
Cell[555346, 9932, 29930, 721, 234, "Output"]
}, Open  ]],
Cell[585291, 10656, 96, 1, 31, "Input"],
Cell[585390, 10659, 191, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[585606, 10667, 290, 8, 31, "Input"],
Cell[585899, 10677, 2795, 88, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588731, 10770, 3035, 92, 86, "Input"],
Cell[591769, 10864, 2853, 90, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594659, 10959, 2836, 88, 86, "Input"],
Cell[597498, 11049, 1043, 34, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598578, 11088, 6033, 161, 173, "Input"],
Cell[604614, 11251, 3505, 69, 247, "Output"]
}, Open  ]],
Cell[608134, 11323, 1038, 24, 41, "Input"],
Cell[CellGroupData[{
Cell[609197, 11351, 361, 10, 31, "Input"],
Cell[609561, 11363, 2029, 63, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611627, 11431, 4101, 107, 107, "Input"],
Cell[615731, 11540, 3122, 64, 335, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618890, 11609, 2889, 80, 61, "Input"],
Cell[621782, 11691, 2481, 49, 368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624300, 11745, 331, 9, 31, "Input"],
Cell[624634, 11756, 4383, 132, 113, "Output"]
}, Open  ]],
Cell[629032, 11891, 587, 15, 33, "Input"],
Cell[CellGroupData[{
Cell[629644, 11910, 6827, 175, 188, "Input"],
Cell[636474, 12087, 3855, 79, 335, "Output"]
}, Open  ]],
Cell[640344, 12169, 3882, 79, 337, "Input"]
}
]
*)

(* End of internal cache information *)
